%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 26.3
%%For:  
%%CreationDate: 6/24/2022
%%BoundingBox: 0 0 750 400
%%HiResBoundingBox: 0 0 750 400
%%CropBox: 0 0 750 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 68 8%%BeginData: 7801 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDACFF7DFD04FFA8A8FD7EFF7DFD75FFA8A8FFFFFF
%A8A87DA8FD77FFA8A8FFFF7DA8A8FF7DA8FD79FF7DFD05FFA87DFFFF7DFD
%11FF7D7C7DFFA8FD5EFFA8A8FD06FF7DFFFFA8A8FD0FFFA89FC79F51C77B
%A87DFD5BFF7DA8FFFFA87D7DA8A87DFD11FF517B9EFD05C7749E7DFD58FF
%A8FF7DFFA87D7DA852FFA8A8FD10FF7D9FC7CDC7CCC7CCC7CCC77CA8FD56
%FFA8A8FFA87DFF7D7DA8A8FF7DA8FD10FFA850FD04C7CCFD04C79E7BA9FD
%59FFA8A8FF7DFF7DA87DFD11FF7D9FC7C7C79F509F51C7C7A575FD5BFFA8
%7DA87DA852FFFFFF7D7DFD05FFA87DFD06FFA8749F525152A87EFF7CA59E
%7DFD0CFFA8A8FD4FFF527C5175FD04FF52FD05FFA8FD08FFCF7DFD07FF9F
%A5A9FD0AFFA87DA87D7DFD4EFF7C9EC79EA8FFFFA87D7DFD0DFFFD05A8FF
%A8FFA87676FD0BFF7DA87DA87D7DA8FD4CFF7D9FC77BA8FFFF7D527D7DFD
%0DFF7DFFA8A8FD04FFA8A8FD0AFFA8A87DA8A8A87DA8FD4DFF522752FFFF
%A85252527DA8FD0BFFA8A8FFA8A8FFFFFFA8517DFD0AFFA87DA87DA87DA8
%FD12FFA8A8A8FD32FFA8A8A8FD09FF7D7D277DA8A8FD0CFFA8FF7D7DA8FF
%FFA876FD0CFF7DA8A87DFF7DFD05FF5227277DFD07FFA87DA8A8A87DA8FD
%2EFFA8FD05F852A8FD06FFA87DFFA8A8A8FD0BFFA87DFFFFA8A8A8FF7DA8
%FD08FFA8FD04FFA87DA87DFD05FF52FD04F87DFD05FF7DA8FF7DA8A8FF52
%A8FD2CFFA8FD07F827FD07FF7DFFFFA8A8FD0CFF7DA8FFFFA8FFA87DFD09
%FF27A8FD04FFA8FD06FFA8FD06F8FD04FFA8A8A87DFFA8FF7D7DF8A8FD2A
%FF7DFD09F87DFD06FFA87DFFFF7DFFFFFFA87DA8FD07FF7D7DA8FF7D7D7D
%FD09FF7DFD0DFFFD05F827A8FFFFFF7DFF7DFD05FF52F827FD29FF7DFD0A
%F852FD07FF7DFFFFA8FD04FF7DFD09FFA87DA8FFFFA8FD16FF7D27FD04F8
%52FFFFFFA8FF7DFD07FFF8F8A8FD1DFFA87DFD09FF27FD0AF87DFD07FFA8
%A8FF7DA8FD0BFFA87D7DA8FFFFFF7D52277D7DA8FD0EFFA852FD06F827FD
%04FFA8FFA8A8FD06FF5227FD1DFFA87DA87DA87DA8FD05FF27F8F8F852A8
%FF27527D27A8FD07FF7DFFFFFF7DFD09FF7D27F8F827FD05FFFD05F8277D
%FD0BFFA827FD08F87DFFFFFFA8FFA8FD06FFA87CA1FD1CFFA852FD05FF7D
%FD05FF52F8F8FD07FF7DFD08FFA8A8FFFF7DA8FD07FF27FD05F8277D7D52
%FD08F827FD0AFF52FD0AF8A8FFFFFF7DFF7DFD05FF75C67BFD1BFFA87DFF
%A827F87DFFA8A8FD05FFF827A8FFA8FFA8FFA8A8A8FD07FFA8A8FFFFA8A8
%FD05FF7DFD14F827FD09FF27FD05F827A827F8F87DFFFFFFA8A8FF7DA8FF
%A87BC77BA8FD1BFF7DFFA827277DF852FF7D7DFD04FF7D7DA8FFA8FFFF7D
%FFA87DFD08FF7DFFFFFF7DFFA8A85227FD16F87DFD08FF52275252A8A8FF
%FF7DF8F852FD04FF7D7DFF7D7D9EC674A8FD1CFFA8A8A8F8FFFF7DF8FFA8
%7DFD04FFA87D7DFD04FF7DA8FFA8FD07FFA8A8FFFFFFA82727FD19F827FD
%08FFA87DA8FFFFFD04A827F8A8FD05FFA87D7D7DA07CA9FD1DFFA8A8A8F8
%52FF2752A87DA8FD05FF5227FFFFFFA87DFFFFA8FFFFFFA8A8FFFFFF7DFF
%FFFFA827FD1BF8A8FD07FF7D7DFF527D7DFFA87D7DA87DFD07FFA8FFA8FD
%1FFFA8A8FF7D27F827FFFFA8FD07FF7DA8FFFF7DFFFFFF7DFFFFFFA8FD04
%FFA8A8FFFF7DFD07F827F827F827F827F827F827F827F82727FD05F87DFD
%07FF7DA8FF7DFD05A8FF52FD2AFFA87D7DFFFFFFA8FF7DA8FD08FF52FFFF
%A8FFFF7DFD09FF7DA8FFA8FD08F82727F8FD0527F827F827F8F8F852FD05
%F852FD07FFA852A852FFA87D7DFF7DF8FD2DFF7DFFA8A87D7DFD09FF7D7D
%A87DA87DFD0BFF527DFD09F82727FD0DF82727FD04F827FD08FFA8FD04FF
%A8FFFF52F87DFD0EFFA8FFA8FD1BFFA87D7DFD08FFA8AFA8A87DFFA8FFA8
%A8FD0BFFA85227F827F827F82727527D27F8272727FD07F827F852FD05F8
%27FD08FF52FFFFFF7DA8FFA8F8F8F852A8FD0BFFFD05A8FD22FFA9A77CA6
%9F9F76FD05FF767C7DFD15FFF8F8F827F827F8FD0527F8F82727FD05F8FD
%07FFA8F827FFFFFFA8A827FD06F8277DFD08FFA8FFFFFFA8A8FD20FF7C9F
%9EC7C6CCC77CA8FD04FFA79EC7747DFD13FF27FD0DF82727FD05F87DFD06
%FF7DF8F8F8527DA8A827FD08F852FD06FFA8A8FFFFFFA8A8FD1FFF7C9FC7
%CCC7C7C7CC7B7E7DFFA8A859A5C7CC9E7CFD0DFF7DA8FFA8FFFD0FF852FD
%05F87DFD06FF27FD04F8FFFFFF52FD08F852FD06FFA8A8FD04FFA8FD1EFF
%7D9FFD06C7C6A6A8A87D7D7DA87BC7C7C79E7DFD0AFFA87D527D52525227
%FD0EF82727F827F8F852FD06FF27F8F8F827A8FFFFA8275126FD06F8FD07
%FFFD04A87DFD1FFFA0C7CCC7CCC7CCC7CC9FFFA8FFFFFFA89FC7C7C7CC7B
%A8FD09FFA8A87D7D7D525227FD0EF827F8272727F87DFD06FF28F84A75A8
%FD04FFA7C7CCA57BFD04F827FD07FFA8FFA8FD1FFFA89ECCC7C7C7A5A5C7
%C7A6A9FD05FF75CCFD04C77CFD08FFA87DFF7DA87D527D52FD0FF8525227
%27277DFD06FF7674CC9FA1FFFFA87C9ECCC7C7C7A5FD04F827FD1DFFA8A8
%FD09FF7DC7C7CCC7CC7AC7C7CC9FFD06FF9FC7CCC7C7C79FA8FD07FF7DA8
%FF7DFFA87DFF7DFD0EF827FFFF7D2727FD06FFA87BCCC7CC9FA07C9FA5CC
%C7CCFD04C7F8F8F827FD1DFFF852FD08FFA9A0C6C7C7C7A59FA5C7C6A0A8
%FD04FFA87AC7C7C774C79E7CFD06FF7DA8FFFFA87D7DFFFF7DFD0EF852FF
%FFFF2752FD06FF7CFD05C7C6C7C6FD08C79FF8F827FD28FF7BCCC7CCC7C7
%7BCDC7C77BFD05FFA8A5C7CDA59FC7CC7BFD05FF7DA8FFFF7DA8A8FFFFFF
%7DFD0EF8FD04FF7DA8FD05FFA99FC7A5C7CDC7C7C7CCC7C7C7CDA5C7C7CC
%C751F8FD28FFA89FFD04C79F9FC7C7C6A0FD05FFA89EC7C7A59FC7C7C77D
%FFFFA87DA8FFFF7DA8FD05FFA8FD0DF827FFFFFFA87DFD06FFA89ECC7A9F
%9FC7C7C7A5C7C7C79E9F9FC7C7CC9EA7FD28FFA89ECCC7C7C7A59FCCC7C7
%7CFD05FF7DC7C7CC9FFD04C7A0A9A87DFFFFFF7DA8FD07FF27FD05F8527D
%7D527D527D7DA87DA8FD047DFD04FF7DC7C79FA5A59FA59F9F9FA5A5C79F
%A5FD04C77CFFFFFF7DFD24FF7DFD05C774C7C7C79EA7FD05FFA19EC7C79F
%9EC7C7C77A7DA8FFFFFF7D7DFD08FFFD06F827FD0DFFA87DFFFFA97CC6C7
%74FD04C7CCC7C7C7CCC7A574CCC7C7C79FA8FFA87DA8FD23FFA7C6CDC7C7
%C79FA5CCC7C77DFD05FF7CC7C7CC7BC7C7C7A5A0A9FFFFFFA8A8FD09FFA8
%FD06F87DFD0DFF7DFFFFFF9FCCA59F9FA59FC79FC79FC79FA59F9FC7C7C7
%CD9EA7FD21FF7DFD05FF7BFD05C774C7C7C79EA8FD04FFA9A0C6C7C7757A
%CCA59F7CFFFFFFA87DFD0AFFA8A87D7D52522752FD0EFF7DFF7CC7C7C774
%CCC7C79FC7C7C79FC7C7C77AFD05C77BFD09FFA87DFD16FF7DA8FFFFFFA8
%9FC7C7A5C7A59FC7CCC79FA8FD05FF7BCCC7C77C7CC7C79EA7FFFFA87DFD
%0CFF7DFD05FFA8A8FD05FFA87DA8FD05FFA87E9FC7CCC79F74C7C7CCC7CC
%C7C7C7CCC79F9FCCC7C7C79FA8FD08FFA827FD1CFF7BC77AA59EA57AC7C7
%CC7BFD05FFA89FC7C79EA7A87B7AA57DFFA87DFD06FFA8A8FD04FFA8A8FD
%06FF7DFD05FF7DA87DFD05FFA851A4C7C7C7757D7C7B9EC7C6C7C7C7C6CC
%9E9FC7C79FA59EA7FD25FFA87B749F9FA6759F9EC7C6A6FD05FFCA9FCCC7
%C77DFF7C7A9EA8A87DFD06FFFD04A8FD04FF7DFD06FFA87DFD05FF7DFD07
%FF7DC7C7CC7B59A8FFFFA87CA6A0A07BA69F9F509F7AA57A9F7DFD25FFAF
%747B7DFFA9FFA8A87DA052A87DA8A8FF7C9F7B9F9EA8FFFF7D7B517DFD07
%FFA87DFFA8FFFFFFA8A8FD07FF7DA8FD0DFF75CC9F2727527DFD05FFAFFF
%A8FFA8A87DA87C9F747DFD26FF75A1FD0BFF7DFD04A8FFA851A8FD0EFFA8
%A8FD05FFA8FD07FFA87DFD0DFFA7C7A5277D527DA8A87DA8A8FD09FF7D9F
%7DFD26FF52A8FD10FFA87D52A8FD14FFA8A8FD08FF7DA8FD0DFF51F82727
%275252A8FFA8A87DA8A8FD07FF51A8FD1BFFA8FD047DA87D7D7DA87D7D52
%A8A8A87DA8A8A87DA87DA87DA87DA8FD0552A87D7D7DA87D7D7DA87D7D7D
%A87D7D7DA8FD057DA87DA87D7D7DA87D7D52FD0D7D52FD06277D7DA87DA8
%7D52527DA8A8A8FFA87C7DA87D7D7DA8FD047DA8FD1EFFA8FFA8A8A8FFA8
%FD08FFA8277D277DFD3EFFA8A87DA8A8FDFCFFFDFCFFFDFCFFFDFCFFFDFC
%FFFD28FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
   xmp:ModifyDate="2022-06-24T10:40:04+09:00"
   xmp:CreateDate="2022-06-24T10:40:04+09:00"
   xmp:MetadataDate="2022-06-24T10:40:04+09:00"
   xmp:CreatorTool="Adobe Illustrator 26.3 (Windows)"
   xmpMM:DocumentID="xmp.did:08957e0d-e8ec-ec44-91b3-c0114616e00e"
   xmpMM:InstanceID="xmp.iid:08957e0d-e8ec-ec44-91b3-c0114616e00e"
   xmpMM:OriginalDocumentID="uuid:11571bd5-2104-4f08-856d-3b1328b858e8"
   xmpMM:RenditionClass="proof:pdf"
   dc:format="application/postscript"
   pdf:Producer="Adobe PDF library 16.07"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   illustrator:CreatorSubTool="Adobe Illustrator">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="140"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYqgNFN7Hp9ta6lMsupxRAXDAryk4nh6tAFpzpXYUB2xVdDcalJq9xEYBHpsEaBJ2+3LO5L&#xA;NwAOyItNyN2PbjuqjcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqjeWdpe2stpdwpPazqUmhkAZGU9QQcVY7c2ks19beVbO7uYrC1gF3qdz68jXRhklZb&#xA;e3WdmMoEhjk5ScuYVKA1bkFUTceTvIsFoRPo+nQwKRWVoYkIckKreoQGD8iKNXlXvXFXaJJe6fqN&#xA;7oU8sl5HBEl3pc87FpWhkZ0aCSRqmRoXQfG25V15VYFiqmmmTarLAzalaw2k3L93HBO1wOFBQszR&#xA;QUatagAj3xVF4q7FXYqwzWfPZnv4tP8ALF1ZXbqkkl/fGt1DDwKqkPGGSKsjlmP2/hC7jcZp+1O1&#xA;46WIocUj0tydPpjkPcELF+YfmKOKQ3Pl0yGzLC6khuFHrAfEGsoirl6ofsyMlG+EFvtZiw9pdOeG&#xA;7uXP+j7206Ce/kyDQPPHlfzBP6OkXpuXMX1iJjFNGksIKgyQvIiJKql1DGMmlRXN7DPCcjGJBMef&#xA;k4ZgQLIT3LWLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqE1O1v7mFY7O9Ng&#xA;3KssyRpJJxodk9Tkimvcq3yxVJNakbRtVXVbiaVdMvLRbHUb8AE2zws729y44lET99KJH48VPAsO&#xA;NSFWCan5ctl0/VNP1OVL+9tUtlstUlVrm7nsb5/qyzLc3T3IRgWkEiwqo5UcceYxVn3l9IbzW73U&#xA;baJYtMsIxo+moqBATbSN9aZAAKRiQLEo8YyRsRirII5oZS4jkVzG3CQKQeLAA8Wp0ND0xVeSAKnY&#xA;DqcVaR0kRXRg6OAyspqCDuCCMVSrzcYR5U1ozmUQiwuTKYGCTcfRbl6bHZXp9knvkZmgUjm820XV&#xA;LDTvL+jRapd2NnPPBHHBEjCCFmVB+7gSRuR4LtT9WeVZsMp5JmAlIAm+p95p6KMgIiyAh7fz9peo&#xA;RS/oK0vtYuAC1tDbWlwEuEUlTJDO6LA8dVb4w9NqCpIBz8Ps/qpkAx4Qep6e/q0S1uMA723rutSW&#xA;1vY+YtCvHa9QSQWIiIaC4M3FxBMpV6+rJAkYpxapopDHJ9j5M2DUcAFEkAgjfn+20aqMZwt7Nnor&#xA;pHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXinnjQ9K03zbLaXmsPoW&#xA;hz2pm0+3SYWcPKd1+uRwSho6UktYpXj3X4uQALMTz/bWq1OHh8IEg9wtzdLjxyviZz+VU8H+C0aK&#xA;c3GmRXN39RvpH5+rb+u7epz7qGLKrdCoBG2bTs+WQ4InIKnW7j5gBM8PJhvl7z75YsvP2q3FncLD&#xA;p2qXMAmabhD6wukX0LiNCeZ4zFqsygvFMj7xxhszGp7DPBBcQSW9xGs0EymOWKQBkdGFGVlOxBGx&#xA;BxVZZ2dpZWkFnZwpb2ltGsNvbxKESOONQqIijYKqigAxVWIBFDuD1GKsC0ryj5bi1PzBGNE0+XTh&#xA;ew2l3HdKvpRWcVhDdD00eJ0KieQfu6qg+1Wq8TCGOMb4RV7pMiebJ9E1Ke80fRbuGwFvBfW0U00I&#xA;cAWqvCJFQKVQtQnh9kfLJoYSLSQ/mo0POwMH6T+vG2huFa8oNHWL1J7VU+BPWNfUZ614/DQg5gHQ&#xA;g6nx73EeGv0t3inw+Dzt6Zme0uxVifnfWLi2ntbWHUZNPt44LrUdVntFjku47a0iLKyrMksYQyUB&#xA;5KeX2Rtyoqx57vW/L1w2oTLLDqMdjd301rfag1xBfQh4+fIoscNvdwyvEq+nEY+L8FJG6KvSoZVm&#xA;hjlUMqyKHAYFWAYV3U7g+2Kr8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5v8Azg/5y2by&#xA;z5hvPLnlLTYb2802Zre/1C+5+gJoyVlijijaN24N8JcsNwdiKHFWA6J/zmp+YVvdxnWNJ02/suVZ&#xA;khWa2mK+CSGSVB9KHFX1D5a13yT+Z/k6z1dLSDVNIuW5mzv4Y5vRuIiQySRuHUSIT18NxscVTbXd&#xA;CS78tXWkaekVrWHhZxhQsKslGjVkUU9PkoDAfs4q828sflnpCW+oa0k9zfRz6ZfaZqehTCKN0lLc&#xA;1tXWFUV2j5yCrkr8StHROICr1LQLiS50LTriSUTyTWsMjzLurlo1JYezVriqKS4t5JpIUlR5oePr&#xA;RqwLJyFV5Abio6VxVUxViTW1pLqPmPyxqLNbx+YQ81i6EKZYJrSO3uViZuQMsTxs7CmysppTFUbp&#xA;t7e6XHfrrLzrp1jykOs37WUSMgA2ijtacY1ANTKFavYjoql/5dafBLBqPmdi7XnmC6mlPqDi0dtD&#xA;NIltDxoCrLHu/L4uRIOwAEIwAJPeklmGTQkWt+c9G0bzBoeg3gnN/wCYZJo9P9KF5Erbx+o5kdQQ&#xA;goR+s7AkKteZ/LsuoA31jJ6epwwSQpFJxNtdRyEM1tdKyvWJ+PGo+JakjFUgtvJ2q3JZVt00i0kl&#xA;tw5uLq41C+WKzlWdBDJJLJFEplT4YxVaUZhX4MVZ47oiM7sFRQSzE0AA3JJOKvg/z3/zlD+Z2t+Y&#xA;7m60TVZdE0ZJCNPsbdUBEQPwtKxVmd2G7VNPAYq+jv8AnGf84NW/MTyzfxa7wfXNEkijubmNQgmi&#xA;nVjFIyLRVesbhuIptXFXp2vavPYpBbWMIudWv3MVjbseKVVSzyysKlYo13Y/JR8TAYqxWCK71V5H&#xA;t21LXXjZkl1Nb+XR9PMiEq8VtHaOruqtUcmRx/xYxGKpH5p/MKH8uhDqOqHUrPR1ZlvbDUJUvzMS&#xA;h9MadO8rzySvJuQ8vBEVuSoSnJV6jpOqWGraXaapp8onsb6GO5tZgCA8Uqh0ahoRVT3xVFYq7FXY&#xA;q7FXYq7FUBrOsxaXBC7QS3U1zMtvbWsHD1JJWDNxBkaNB8KMaswG2KpUPPWmorRXNnfRanExE+lJ&#xA;bS3FwqhiPVAgEitEVHJXViG+yPj+HFU80/UbLUbOK9sZlntZgSkidNiVYEHcMrAqyncHY74q8I/5&#xA;zG85a7onkjTdI0xpLeDXbiSPULuM8T6MCq3ochuPVL1NDuFI6E4q+U/JX5ZeefOt16Hl3SZrxQaS&#xA;XRHC3Q0r8czURajpU4qnuq/84/fmrYeYbnQ00K5vJrdXkW5t42eCSONS3OOT7JDAfD3J+GnP4cVf&#xA;Uf8AziR5c1jQ/wArbiPVbd7Wa71a7mjhlHF1WNYrZgy9VIlt3FDvir2vFUj00eh5t1u3XaO4gsr8&#xA;9amaQS2z9qbR2keKqfk4fVLS70Ntjo1y9vAvb6o9JrQKP5UhkWL5ocVRlh5b0yx1W71SBXFzeV9T&#xA;k1VXkeT8R/lMKmtfagxVV1zX9E0HTZdT1q+g07T4R+8ubh1jQHsAWO7Hso3PbFXinmb/AJyq/Ja7&#xA;l/Q5trnXLeWSNVuDbrHaBidpOc7JKnpnfkI6jqMVer6L5N0eGz02a+j/AEjf2kMJW5uZ5rxFmVAD&#xA;LB9YZwlSKhlAxV4tr3/OUeleQPNep+UbrRl1WCwvblm1LT7tSoFxcPcCL0miVQ8Ky+m49T7akYqy&#xA;zyp/zlX+UGvzrbzX0+iXDsqoupxCJGLf8XRNNEoHi7Lir16KWKWJJYnWSKRQ0cikMrKwqCCNiCMV&#xA;XYqsuLiC3gkuLiRYoIVaSWVyFVUUVZmJ2AAG+KvlT8xP+cz7xL6ax8iadC1rGSg1a/Ds0lNuUUCl&#xA;OI8C5Nf5Rir5clkEkryBFQOxbgmyrU1ota7DFX25/wA4g6P5Ts/y5nvtHvje6rf3AOth19NoJY1p&#xA;HBwqfhVWLK/7XI/IKvQvODul1rcqGVbyDy7dNpjRD4wWLG4Me4PPlHb/AIYqyywhs4bG3hsVRbKK&#xA;JEtVipwESqAgSm3HjSmKvOP+civKem+afy5k0q4njttQku4G0eeSOeWlyrEuAltHPM1bf1fsofE0&#xA;ArleXLHHHimaj3llGJkaCN/IPRb3Q/yr0fSbu6gvZLNrqJbi3WdVIF1L8JW5jglVkaqEMg6ZKExI&#xA;CUTYKCCDReg5JDsVdirsVdirsVeP+c/OcnlTyPfecNQSa981WF89pZaZeSN9WtL67JWNVSH4GjS1&#xA;uOSufiZNqoWICqRap5p/O/8ALZtD8wed9bsde0HUruGw1TTIbaOCW1e4LFXgkiRPUMap+0SDuPBs&#xA;VesaLNeaTrMXlm4a3uIZoLu/sriNjHOsUdxEPTlgIYGhuv71X3p9kYqk/wCeHkK287/lvqmlOD9b&#xA;t1+vac6gswubdSyhVB39RC0ff7XSuKoT8l7GPSvy6fy9oes2OtDRpZ7bT9QiB9Mlx66i4iRiyssk&#xA;xDDlWgr3xVlWtXV7FrFhZtcy21jqaPAtzAI+UV5ERNGtXWTaaJJV+IU+ED7TDFV3lpGtrzW9PoRD&#xA;BfvcW1f993qLcyb/APMRJN9GKp5iqSXA9PzrYMNvrGnXiyeBMM9sYx9HqviqWeb9a07yjqMPmvUp&#xA;Gg0aaIafq8yRySlCHL2UpWNXegkeSL4VqWlXsMVeYecv+cxfIOjm4tdE0+91jUYXMdJE+pwBlJDc&#xA;mlBmBUjp6X3Yq+WvzK/Njzj+YmqLe6/cj0IKiz06AFLaAHrwQliWPdmJY+NABirDcVTe284ebbXT&#xA;m0211u/g05xxeyiupkgZT2MasEI38MVSjFXYq+pP+cPfzYvTfSfl5qsxlt5I3udBdySY3jBea3HX&#xA;4WSsi+FG/mxV9YYqxL82tB1PzB+XGv6Npl1b2V3fWxi+t3kjQ28cXJTMZZEWQqvpBv2fntir5D8m&#xA;/wDOLXmXzIttIdf0yzS5gjukhdbwXBhlFQ6RzQW6ypvTnG7IezHFWfWv/OMv5aweU9Sgi1e51XzP&#xA;d28yaJqN1DNYae1zGrSJ9XZgIpeYQ7+q4K1ZRtXFUr/5wnGsw+cvMtsUdNOFgn1xWBFLlJwsIIp1&#xA;4mbFX1P5g0u9na21LSyi6vpxc26ykrHNFLT1raRgCVWTgpDAHi6q1CBxKrDJPMs3lmOO304SxQEy&#xA;hPLWo27LNb8LeSbjaXKP6ckCNH9lPVC14qyqAoBOyoGP/EvmjUVnt5zfXKB4rfUvq7W+l2SPs8sC&#xA;uZDcykCnwu/8vKNWavKyxartAgZI+FhG9dS7ESx4QeE8Unp2kaVaaTpdrptoCLe0jWKMsas1Buzn&#xA;9pmO7Hud86mEREADkHXk3ui8kh2KuxV2KuxV2KvNvNXlq0v/AC15h8v+atOvLjStUvWubnX7V7YC&#xA;OMsjW9wVMglT6okccbEREUTkQVLYqxNvykaz1jRY/PXnnUfNGnaGVvbHQ0sJWUGFgI5bswG6LICp&#xA;A5heVCAaBhir1LyYEuE1LVRAwS/vJJLS+lFJbi1opiajAOsakssan9kBhs2KsjxV5+bHSfJXn651&#xA;CxtJxZebIprzXPQQyxwXFk0SLdcEBZRL9aIlIB3o5oAxxVdH5j8lDXptWvtW0TUJ1ZBpYsB6t+Gl&#xA;rGimKOS4aSTi4RWRATWlANsVZL5at9QIvdT1GI29zqcwmSzZgzW8CRrHFE5Ulefwl341AZioLAA4&#xA;qjRpcI1g6r61x6xtxam39aT6txDmTn6FfT9SppzpyptWmKpT5wvI9LfSdcnBFlYXZXUZxv6VrcQv&#xA;CZG3HwJM0TO37Kgt0GKvAP8AnKb87dDaGz8n6BdpfyRTi81a4tpFaJJIATbQFlJViJ+Mkg7cQOpN&#xA;FXyfLLLNK80rmSWRi8jsaszMakknuTiqN0jT1vFvmYMRaWklxVdqFSqivtVsVbaPy645rPd25JH7&#xA;kwxT8R3/AHvqQcv+AGKtyQeXAyenfXjKT+8LWkSkD2AuWr+GKqcyaKkTejNczzEHgHijhUGuxJEk&#xA;xO3agxVfe6dbxaNpt/CzFrozxXAYqVEsLKaKBuP3cqHfFU3/ACu1/wDw/wDmN5b1hpDFFaahbtcO&#xA;pofQaQJMPpjZgcVfpZiqWeZtLn1TQb2wt2RbiaP9z6tfSLqQyrJSp9NivF6fsk4q820Hy1qevWfk&#xA;Sa50ppdDsIA92L82krCKbS/q6R2yxtVYRIiyMX/ecqbfyqp9pXl3Um9Ly5dG2nstKntJ5pzcmaT0&#xA;bVFS1RLTggtjKLcNKK8d348gx4qsQ/J7z9ouufmd5r0BDBAdAku4vL8NvUJNa3N4015JuW5ESrGR&#xA;8VACeKqKjFXtuKuxV2KtNIilQzBSxooJpU+AxVvFXYq7FXYq7FXYqsngguIJIJ41lglUpLE4DI6M&#xA;KMrKdiCNiDiqE0vQ9J0oSjT7Zbf1ipk41NeA4qBUmigdANvvxVKvMXnGPTLsabYWx1HVygla35+l&#xA;FDGxIV7ibjJwDFSFCozH+WgJGv1/aWLSxufM8h1LdhwSyHZIJdX85XX99qkVitahbC2TkB14s90b&#xA;kN4VCL9Gctm9qsp+iIHv3/U7GHZ0epU/KmvwW/ma+h8xazNc3sSRQ6bcXqwwxCO4Cs8QaGKCH1Xk&#xA;hrQ/ER9nYHOj7G109Th45/VfRwdVhGOVBkH5kTrD5L1GdLtbS7hVLjTZCEcveW7rcW0ao4YSNJLE&#xA;qhQKntvm1ldbOMEk0zz35ihtobu+tYdW06ZElE1ijW90iMoIJt5HlSXY1bjIp/lUnbOZ03tLAy4M&#xA;seA8r5h2GTQGribZxpupWOp2EN/YTLPaXC84pVqKjoQQaFWB2ZSKg7HfOmjIEWOTgEUrXFvBcQSW&#xA;9xGs1vMrRzQyKGR0YUZWU1BBBoQcKHnuof8AOPH5LX9wZ5/KlojtWot2mtk3FNo4HjQfdiqWT/8A&#xA;OOv/ADj7Zz28NxoFvDPeuYrWKW9vA0rhSxWNWnqxC7/DirHPzs/Lv8ufKf5Oeax5Y0axsdUSC1Ek&#xA;kaq92sMl5CrVkcvKFZa96HFXxx+n79zWdYLkttI81vC8j71q0pX1SfflXFVh1GzJqNLtQOPGga5p&#xA;Wn2t5uv4e2KtPqiekY4LG2tyy8XkCNKzDcf7vaUKd+qUxVHV+seSKbj9GalX2P6Qgp/wv6P/ABxV&#xA;JUZkdXU0ZSCD7jFX6geWdWOs+W9K1cp6Z1Gzt7sx/wAvrxLJT6OWKofzr5lh8r+UdY8wzJ6iaXaS&#xA;3IirTm0akolf8pqLir5M/Kj/AJy01jy7btpXmex/S1nLcPLBcwssMsPryNJItCOLIHaqjaletABi&#xA;r3L8x7rzZof5V67feUNLsfL1tHbG6U2p5XLiTiJGSOKOKOJhGa+pzY0FABswVfCWm6xqul6lFqmn&#xA;Xk1nqMLGSK7gdo5VY9SHUg713xV67oP/ADlx+cOnXMb313a6xbqAr291bRx8h487cQty9zX5Yq+0&#xA;/JvmW380eVNJ8w28TQRapaxXQgY1MZkUFkJovLiaitN+uKpndyyQ2s0sUZmljRmSFersoJCivids&#xA;VSvTND0maxgubq1hu7q4SKea5nRJZHcH1EJcrv6bN8HZR9mmKqvl8tHFdWQf1YNPn+rWzsZnk9NY&#xA;o2pJJNUyOrORyDMDTryqAqmmKuxV2KuxVpWVhVSCKkVG+4NCPvxVvFULqupW+maXealc1+r2MElz&#xA;Nx3PCFC7U+hcBNC1edaPa3UVqZ74h9UvXN1qMvXlPIByAP8ALGAI08EUDtnlXaGrOozSmfh7uj0W&#xA;HEIRAVkvoX1CaxAPrQRRTuduPGdpFWm9a1hauYpgRES6EkfKv1tl70j/AC9p0N/qmsW8rOiG2sjV&#xA;CNyXu1+JWDI4ofsupX2zufZU/uJf1/0B1PaP1j3JpYfl9oNjdfWrVVgnLVeWC2sreRh3Uy29vFKA&#xA;x3PFgffOndew3ygJR5T0UTV9X6ha+pXry9Fa1+nPJdbXjTr+dL73pMX0D3Jv5Wvv0P5jFnzppWus&#xA;zwr+zFfqpduPgtzGrMe3Nf5pDnW+zXaBkDglzH0+7u+Drdfgr1h6DnWutUL++s7CyuL69lWCztY3&#xA;muJ3NFSONSzsx8ABXFXmWsaTqOoan5U1C6vZbHWNfuZ/3Sr+8tYhp888NurV/dpGE4zFfieRuQZS&#xA;sfFV4/508k67fWXmz01nii0/S7u51bkrBXa34yxxyLzHFmKeqKqSaci9xUSqq+X8VdirsVZR5A0j&#xA;WvMGqS+VtHsV1C+1pEjgikf00jeCVJzKxFNhFG6HcUVicVZD5s/KfXdAupNK13ToNH1cIZ7T0Jne&#xA;CeHu3KRpQwBG5VwUG7KV5Mir7z8maXcaT5P0LS7gAXFhp9razAdOcMCRtT6VxVIfzqs1vvyt8xae&#xA;H43F9atb2abkyXMhAhiUANu8lF/E0G+V5csccTKRoBMYkmg+cvLH/OM+i6V+j9R84XMt/biZP0nZ&#xA;WStSKJgw5Bl5O4VynqUXZeVM5zT+0kMmcQI4cfefxs509CYwvmX0tqnnPyK2kSadDcQ65FPAbf8A&#xA;RVgy3ckkUilODhWKojLsXlZV8Wze59bhxR4pyADiQxSkaAeSSfkT+XeoafIt/ocFpeXBdy1i7p9X&#xA;Dn4Y422V/TWi8mT4j8VBXOG1HtDnOYyxmodAXbw0UOGiN3gn5t/kfqnkn/cnYO2oeX3biZ6fvICT&#xA;8KzAbU7Bxsfaozpuye24an0y9OT7/d+pwNTpDj3G8Xrf/OKP536jdXOnflpqdqJYY4ZjpOooaOix&#xA;BpjFMp2ZePLiy9KAUPUb1w31RiqVx6AlueFjeT2NpzRxZW4gEICszSIoaJ2VZS3x8WB/lKnFUdY2&#xA;VvZWkVpbKVggUJGGZpGoO7O5Z2Y92YknviqtirsVdirsVY15C/L7QfI+mXenaK9y9ve3k1/KbuZp&#xA;3Es1KhWb9kBQN9z1Yk74qyXFWMfmNJ/zrX1Yfavbuzt+BNOcbXMbTL9MKvmv7Vy8Gmmf6JbtPG8g&#xA;HmkueWPQpRo/7zVdbuCNxcx28bbUMcVtE1B8pJZMyM20IDyv5k/oAYR5lk3kWr6zr0vPkE+qQBKf&#xA;Z4I8v4+tncezEa0xPfI/odT2gfX8GQ+Y70WPl7VL0niLW0nmLV409OJmry7dOudFI0HBDALdRpeh&#xA;RK/2bG1UNyIG0Me9W6fs9c8jl68n9Y/e9KNh7kDaaXcP5PsLGKX0723tLZrW4c8uFzbqjwyH+bjK&#xA;isfHMmGqOLU+KOkyfhf6ms4+LHwnueiWXmzSpvLFr5gupBZ21xEjujmrpK/wmDitS0qyVj4KCS2w&#xA;Fc9ShMSiJDkXnyKNIM2d3rri+1xPqOg25E9vpUpAeUx/EJ779lVX7SQ1oKcn+KipJCyBtX8zp9ct&#xA;7g6Voj7WM8USm+uIWArMsknJYI5f2R6fPiA3JSaBVE615Vs38kav5d0yFYI76xu7ZFqSWkuYnUu7&#xA;tyZ3ZnqzMSSdzir8zCCCQeo64qrWthfXZYWlvLcFBVxEjPQHx4g4qqfonVf+WOf/AJFv/TFX0b/z&#xA;iLo+gaJe6r5r8yX9ppc/AWOlxX00UDtWjzyKsrKwoOK16HkcVevfmBcflh518z+W4L3X9L+reX5/&#xA;0rPcm6tir/EqpZhmehExTlIBWiqAR8anFXq9jf2OoWkd5YXMV3aS1MVxA6yRsASp4uhKmhFMVYb5&#xA;0m+t+Z9MsahotOt5b+ZCOk05+r2zj/nmtyM5f2p1HDijjH8R+wftp2HZ8LkT3JBp/mG0mhLXUi27&#xA;evcRRs4KRssVzJAnF2+BmYRg0Dd+m4zjMmnIO2+w+0Au0jMdUQmv6C7cU1K1ZtzxE0ZO3XYNkTgy&#xA;D+E/JPHHvU7rXbIW0r2ztOQhaOSGOSaOtAVq6KyU+Id8McEr32+xTMKiw2msaIsV5Gtxa39uonjI&#xA;+F0lTf764LOOdx2MStCQ36sL/wCcd/yN07yv5s1/zFdXAubuxuJNP0mCm8MEqJL6zkgVkkikVRx2&#xA;A5Dc/Z9Q7O1Y1GGM+p5+/q8/nxcEiH0AtxbvPJAkqNPEFaWIMC6q9eBZeoDcTTxpma1KmKuxV2Ku&#xA;xV2KuxV2KoDQ9e0jXdOTUdJuVu7KRmVJlDAEoxU0DBTTbY9xuNjirHPP0vqaloFiK8lmuL9vDhBA&#xA;bcg/7K9U5z/tLl4dLX86QH6f0OboI3kvuQGeeO6Sjyt8Wkm4ptdXN1coTSpjmuZHiJp/xWVzI1X1&#xA;13AD5AX9rDHyZX+XgYxa5NWscupn0jUkUjtLaF6bClJI2Geg+z8OHSR87+90utN5CjPzBl4eTNWj&#xA;Bo13B9SQ9DzvGFstNxvylGbLV5ODFKXdEtGONyAYP5xlki8pay8SvJN9SuBDHGvJ2kaJgiotDVmY&#xA;gDPLtFDizwHfIfe9BlNQJ8kU+pwHS4b2z4zQ3AhFqw+wRcMqRtt+z8YJ9sr8I8ZjLYi7+DLi2sJz&#xA;+XnlzT/0dFr00TSXN3Pc3dgJXaSO3huJXZHt42JSIzxt6jsoBYsamm2eodnYjj08InmIh5/PISmS&#xA;O9GyA+bbsxD/AJRa0kImO4/SE8TEFB/y7ROvxf79bb7APqZrUynFXYq+JvN//OJ/nhtW1W48ovBq&#xA;9jDeywraySLbXSVAlUH1isTAJIvxB9/5RirX5R+SPzm/LPz/AGetXfle/GmDlDq4hVZ1Nq394aws&#xA;4Yp9tRXqMVfa8M0M8Mc0LrJDKoeORTVWVhUMCOoIxV01xBAoaaRYlJ4hnYKCT23xVfirHrZjpPmu&#xA;WyI42GuK13an9lL2IAXEQ8PWj4yqB1KyscVYna3n6U1LUtcB5Q303p2LH/ljth6URU90lcSTL7SZ&#xA;5z7Q6vxdQQOUNvj1/Hk7zRY+GF96UeV21QaBYiA28qwRC3ltnDxOk0H7qZXlBl5MsqMD+73zX6ng&#xA;8Q3e5u/I7jbbp5t2O+EJwkmqkHnbwKamgWdzt26xDMYiHefl+1s3WIdZkKrLDbQIaeqRI89RU1UA&#xA;pD1Hev0YTwDkSfs/SUbofymx/wAN6dEx5S2sK2k5P+/bb9xL/wAPGcnqv72R7zfwO4Rj+kJtoFz+&#xA;j/OkBJpBrVubN/e5tedxb08KxNccj7LnUeyuq3liP9Yfcf0Ov7Rx8pMts/LemWmtXWsQq/1u6BDg&#xA;tVAX4eoVHi/ox1r/AC7Uq1ezdWmmKpTpXmzy5q2saro+nX0dzqWiPHHqlsnKsLTKWQEkBTUA/ZJo&#xA;djviqbYq7FXYq7FXYqtjjjjXjGoRak8VAAqxqTt4k1xV5t+bF/qFlrOjzWcSlxaXkYlZiTSWa1Uq&#xA;kShmeQuI0QBWqzCinoef7ew+KMcNzcunfX9pc3Rz4bPkhbTyj5+e0jufqkX10Kzf6bqM0T+oRtzt&#xA;raO4tqf5IenyzXj2ZmecoxHcI3/sju3HXjuPz/Qq6dpev6PpdrYSaFeGCwgSATxNbTKywoFBVI5j&#xA;Magf77zD1Ps5qTKUgYmzfPv94bceuxgAbpx5L8xaPpXl2KDVpJdKnaa6uZv0jBPZohuLiS44+rcJ&#xA;HGeCy0qGptnZaLCcWGEDzjEB1eWXFInzUfPfm7y5d6XZ2VlqdtePdX1s0i2kouJFS2YXnLhAXahM&#xA;Kr0p8QHcZT2rGctPOMBxSkK+bPTkCYJ5JNdXtpe3lhpichePqFgz2k8bQy+ktyk7M0Uyo/Bo4X34&#xA;0NM47srs7Ni1cPEiY8z9js9RnjLEaK/zT5W1nR9ajutNtnu/L8kktwsMKSTPa3MxBYGCIM7xc6uh&#xA;VWKksvwrTNz2v2OZyOTEN5cx+O9xdNqqHDLomnlg6l5h8t6Zo8drdaTodla21tqU9yrwXNy0USB7&#xA;a3BIdY6jhLN33VP516eJ2cAs9gggt4I4II1igiUJFEgCoiKKKqqNgANgBhQlOsanJBqNlaNcpp1v&#xA;P8f1yXjxkkRhS1Tn8POROR68qA8R1IVRui3k17o9jeThBNcwRyyCMSKnJ1DHisyxyAb7B1DeOKoH&#xA;QAw1bzKSrAHUoyCTUEfo6zFVHYdqeOKp1irHPK7nTb+/8sS/CllS60nwawnY8Yx/zDyhouI6J6Z/&#xA;axVV8zeWTrE1ldQm0F3Y+qsX1+0+uw8J1CyfuhLAQ3wijBulR0JxVMdD0waVo1jpgkMwsoI4BKRT&#xA;kI1C1pU06dMVQHnXy8+v+XLvT4JGgvihexuEdo2jnCkLSRPjQOCUcrvxY0yMhYISC8y13znpWheT&#xA;F1wBbaDjHDBBIAvpyMfT9NkBXeKjckqPskVGeaabsyeXVeDPmCeI/p+PT3u+yZxHHxD4Jb+Xeq+T&#xA;dWjvFvdSu9K1qab15dTW4f0JGkBUkxyI1nGtEVVMsSs2wTkOLv3cux9NKAgYAgCvP583TjU5Abt6&#xA;A3lXzjAQIp9P1GMnaR/WsmC7bkKt4GNPDiD7Zpc3spAn0TI94v8AU5ce0T1Cw6F51SnqafZOCxB9&#xA;C9kYhexPqW0I+iuY0vZOfTIPl+1mO0R3JBbaJ5/sZ75YdEcWk9w1xAiNaTcPUVWlryvLc/FKHfp1&#xA;b23cns3mIG8SQK5ke7+E9KHwWOviL5/j4pZ+ltY/TVhBOruU1XTkdDA8M8DyXcankjLyjjaPmAWD&#xA;K4rxl6LlfZ+ilg1cBIcEt+vMV9vwqv5vVlnyieM1uPx+P0vcM7l1DsVUYbGyhuJ7mG3jjuboqbqd&#xA;EVXlKLwQyMBVuK7CvQYqrYq7FXYqpXTXS20jWkaS3IUmGKVzEjN2DOqSlR7hD8sVST675/8A+rNp&#xA;X/cVuf8AvHYq7675/wD+rNpX/cVuf+8diqR+YND88atqmi6qNJ0dLzRZ3li9TUrqSN45U4yRsosE&#xA;oeSo6NvxZQaHpkTEEg9ybT5tY81RKok8verJ+2ba8heMH2aYW7H/AIAZJCodS80MYxFosa8vtme8&#xA;VAn/ACLjmr9GKqTXvn3i/HR9KLA/uwdUuACviT+jzQ+2+KofU9T/ADDgsJ5bbQ9OlnRHMaRahLM/&#xA;Kh4lYntbVZN6EoZkr05Yq8Wg82/mJqXmzR9d1DRb03Mc0gsfTtZpoYVWR4J4Q0cPNEkNV5sgYIT6&#xA;ql4oWZpXuH13z/8A9WbSv+4rc/8AeOxV313z/wD9WbSv+4rc/wDeOxV313z/AP8AVm0r/uK3P/eO&#xA;xVprrz44o2iaSwBBodUuDupqD/xzuxGKt/XfP/8A1ZtK/wC4rc/947FUJZD8wLa51CY6TpLfXbhZ&#xA;wv6UuRx4wRQ8f+Ofv/c1+nFUX9d8/wD/AFZtK/7itz/3jsVSrV7P8w7u/wBN1K10rSIb7TZHozap&#xA;clZbeZeM1uxGn1CuVRwezIp3G2Ko39I/md/1YNE/7jV3/wB4rFXfpH8zv+rBon/cau/+8Virv0j+&#xA;Z3/Vg0T/ALjV3/3isVeUeefyl/O7X9ce/wBF1DRNF06RzO+izzNqVqbiQfvZSk+mqrc2+Pi6tRyW&#xA;FDmMNHi8XxeEeJ3s/Flw8N7ICw/KL/nJGwvHvbXW/K0d06LGZPquyqsYipGn1L04gUUBhGqg98yW&#xA;D0+PynrUUUa2/lrSLGZFAabTdWvNPZj3J+q2EXU70NRiq9LX847Vx9TfSriGvxRaleSzsFH7KSW9&#xA;hZsPnJzOKp8mteZ7eMfpHy+0j8eTNpd1Fcxig3H+k/UZD/sUOKsb8z6Vrev+Y9G1DTNHZF0xi94+&#xA;oyrZxTqkkU8EYaNbqYtHPErisPGnL4gTlOTBGcoyPOBsfIhlGZAI72RfXfP/AP1ZtK/7itz/AN47&#xA;LmLvrvn/AP6s2lf9xW5/7x2KpppcusSQM2q2tvaXAaiR2tw90hSg3LyQ2xBrXbifniqMxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2Kv//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:c9ac82bb-56de-b745-b2e1-2a25723bf3e2"
    stRef:documentID="xmp.did:c9ac82bb-56de-b745-b2e1-2a25723bf3e2"
    stRef:originalDocumentID="uuid:11571bd5-2104-4f08-856d-3b1328b858e8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:b26e10a1-cb6f-db4b-bb08-8bf3c8a1fd86"
      stEvt:when="2021-12-04T11:35:52+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.0 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:c9ac82bb-56de-b745-b2e1-2a25723bf3e2"
      stEvt:when="2022-06-24T10:39:57+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:08957e0d-e8ec-ec44-91b3-c0114616e00e"
      stEvt:when="2022-06-24T10:40:04+09:00"
      stEvt:softwareAgent="Adobe Illustrator 26.3 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2206.w039.n003.266B.p1.266</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmpTPg:MaxPageSize
    stDim:w="750.000000"
    stDim:h="400.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                               
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
750 400 li
750 0 li
cp
clp
750 400 mo
0 400 li
0 0 li
750 0 li
750 400 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
374.081 135.227 mo
376.082 143.816 375.714 154.419 375.714 154.419 cv
367.937 157.44 li
367.937 157.44 363.168 177.049 393.225 171.04 cv
399.065 169.873 415.971 157.034 415.971 157.034 cv
402.602 153.211 li
402.602 153.211 401.321 133.777 400.811 124.122 cv
393.786 127.394 382.511 132.596 374.081 135.227 cv
cp
f
375.714 154.419 mo
375.718 154.419 li
375.714 154.419 li
cp
368.399 157.83 mo
368.179 159.044 367.505 164.172 370.974 167.779 cv
374.811 171.769 382.262 172.691 393.121 170.52 cv
398.036 169.538 411.302 159.85 414.797 157.25 cv
402.456 153.721 li
402.241 153.659 402.088 153.469 402.073 153.246 cv
402.06 153.057 400.853 134.717 400.323 124.934 cv
394.358 127.711 383.107 132.902 374.706 135.586 cv
376.579 144.058 376.248 154.332 376.245 154.437 cv
376.237 154.649 376.104 154.836 375.907 154.913 cv
368.399 157.83 li
cp
382.972 172.719 mo
377.17 172.719 372.894 171.313 370.202 168.507 cv
365.862 163.984 367.355 157.585 367.421 157.315 cv
367.462 157.146 367.583 157.008 367.745 156.945 cv
375.193 154.052 li
375.233 152.156 375.324 142.902 373.564 135.348 cv
373.501 135.077 373.657 134.803 373.923 134.721 cv
382.645 131.998 394.763 126.354 400.587 123.641 cv
400.747 123.566 400.933 123.576 401.084 123.667 cv
401.236 123.758 401.332 123.918 401.341 124.094 cv
401.806 132.9 402.927 150.059 403.107 152.803 cv
416.117 156.523 li
416.31 156.579 416.455 156.738 416.492 156.936 cv
416.529 157.133 416.452 157.335 416.292 157.456 cv
415.598 157.984 399.221 170.383 393.329 171.561 cv
389.465 172.333 386.009 172.719 382.972 172.719 cv
cp
0 0 0 rgb
f
355.667 81.1505 mo
352.922 81.8071 350.181 79.0277 350.126 76.0886 cv
350.071 73.1496 352.133 70.4898 354.666 69.1996 cv
357.199 67.9093 360.12 67.7613 362.963 67.3524 cv
361.891 64.5024 363.248 61.0733 365.614 59.248 cv
367.98 57.4227 371.108 56.9878 374.022 57.3455 cv
375.935 57.5804 377.863 58.1571 379.373 59.4021 cv
380.883 60.647 381.91 62.6497 381.829 64.797 cv
384.374 61.5877 388.484 59.4304 392.36 60.3589 cv
396.236 61.2874 399.159 66.0233 399.453 69.2823 cv
401.339 66.9676 403.804 65.0653 406.709 65.222 cv
412.473 65.5329 413.774 70.4322 411.18 76.7354 cv
414.248 75.2247 418.822 76.5454 420.28 81.0036 cv
421.366 84.3232 420.149 89.6052 417.837 92.202 cv
417.435 92.6533 416.854 93.092 416.143 93.4892 cv
415.244 98.4191 414.123 103.581 412.426 110.087 cv
411.2 114.789 409.073 119.999 406.583 124.283 cv
405.411 126.298 404.498 127.277 402.138 128.377 cv
402.007 126.336 399.88 125.323 399.55 123.293 cv
399.144 120.797 400.75 118.599 399.245 116.388 cv
396.379 112.176 394.427 107.556 393.511 102.816 cv
392.758 98.9246 392.731 94.8295 394.568 91.2368 cv
395.222 89.9571 396.154 88.7573 397.291 87.7242 cv
396.785 86.7122 396.391 85.6809 396.071 84.6719 cv
394.384 87.5713 393.147 89.566 388.919 90.9523 cv
385.834 91.9641 382.165 90.7361 381.127 87.7937 cv
380.469 90.7628 375.852 94.9549 372.951 95.2491 cv
370.05 95.5434 368.961 94.2057 367.793 91.4218 cv
365.217 93.7029 363.287 96.0295 360.659 97.0273 cv
356.642 98.552 351.673 96.0371 350.343 91.8064 cv
349.013 87.5756 351.577 82.4429 355.667 81.1505 cv
cp
1 .831373 .180392 rgb
f
396.071 84.1414 mo
396.09 84.1414 396.109 84.1425 396.129 84.1445 cv
396.337 84.1675 396.513 84.3114 396.576 84.5112 cv
396.928 85.6165 397.317 86.5898 397.766 87.4866 cv
397.872 87.6994 397.824 87.9569 397.648 88.1168 cv
396.562 89.1033 395.66 90.2656 395.04 91.4783 cv
393.487 94.5162 393.157 98.192 394.031 102.716 cv
394.939 107.413 396.841 111.912 399.684 116.09 cv
400.709 117.596 400.461 119.082 400.222 120.519 cv
400.076 121.395 399.926 122.3 400.073 123.208 cv
400.21 124.05 400.725 124.714 401.269 125.417 cv
401.776 126.072 402.297 126.744 402.538 127.59 cv
404.382 126.63 405.149 125.693 406.124 124.016 cv
408.569 119.811 410.679 114.685 411.913 109.953 cv
413.477 103.955 414.655 98.6935 415.621 93.394 cv
415.649 93.2382 415.746 93.1032 415.884 93.026 cv
416.546 92.6561 417.085 92.2492 417.441 91.849 cv
419.671 89.343 420.785 84.2521 419.776 81.1684 cv
419.161 79.2894 417.889 77.8612 416.193 77.1471 cv
414.624 76.4867 412.838 76.5103 411.414 77.2113 cv
411.217 77.3089 410.979 77.2738 410.817 77.1229 cv
410.656 76.9721 410.605 76.7374 410.689 76.5335 cv
412.177 72.9168 412.33 69.8695 411.12 67.9529 cv
410.269 66.6053 408.775 65.8648 406.68 65.7518 cv
404.354 65.6218 402.056 66.9265 399.864 69.6174 cv
399.727 69.7849 399.503 69.8522 399.297 69.7897 cv
399.091 69.7265 398.944 69.5447 398.924 69.3298 cv
398.661 66.4053 395.99 61.7738 392.236 60.8748 cv
388.857 60.0657 384.935 61.7343 382.244 65.1266 cv
382.102 65.3064 381.86 65.3745 381.645 65.2945 cv
381.43 65.2151 381.29 65.0061 381.298 64.7769 cv
381.369 62.9226 380.501 61.02 379.035 59.8115 cv
377.791 58.7854 376.082 58.1328 373.957 57.872 cv
370.79 57.4838 367.943 58.1214 365.938 59.6679 cv
363.597 61.4739 362.531 64.6973 363.459 67.1657 cv
363.516 67.3161 363.501 67.4842 363.419 67.6225 cv
363.337 67.7608 363.197 67.8546 363.038 67.8776 cv
362.509 67.9537 361.977 68.0209 361.445 68.0881 cv
359.102 68.3838 356.888 68.663 354.907 69.6723 cv
352.752 70.7698 350.602 73.1762 350.656 76.0788 cv
350.683 77.5174 351.433 78.9786 352.613 79.8923 cv
353.532 80.6032 354.571 80.8672 355.544 80.6346 cv
355.822 80.5684 356.102 80.7337 356.178 81.0088 cv
356.255 81.2841 356.099 81.5705 355.827 81.6565 cv
352.031 82.856 349.612 87.7113 350.849 91.6473 cv
351.456 93.5757 352.916 95.2215 354.856 96.1626 cv
356.693 97.0539 358.74 97.1884 360.471 96.5313 cv
362.346 95.8194 363.857 94.3857 365.606 92.7257 cv
366.19 92.1711 366.794 91.5978 367.442 91.0246 cv
367.57 90.9111 367.745 90.8667 367.912 90.9045 cv
368.078 90.9427 368.217 91.0588 368.283 91.2166 cv
369.388 93.852 370.319 94.9837 372.897 94.7214 cv
375.603 94.447 379.999 90.432 380.609 87.6788 cv
380.66 87.4478 380.858 87.2785 381.095 87.2642 cv
381.335 87.2488 381.548 87.3941 381.627 87.6172 cv
382.605 90.3878 386.102 91.3176 388.754 90.4481 cv
392.884 89.0941 394.028 87.1272 395.612 84.4051 cv
395.708 84.2407 395.883 84.1414 396.071 84.1414 cv
cp
402.138 128.908 mo
402.044 128.908 401.95 128.883 401.867 128.833 cv
401.717 128.744 401.62 128.586 401.608 128.411 cv
401.551 127.513 401.007 126.811 400.43 126.067 cv
399.829 125.29 399.206 124.487 399.026 123.378 cv
398.85 122.298 399.016 121.305 399.175 120.345 cv
399.399 119.001 399.592 117.841 398.807 116.686 cv
395.882 112.389 393.925 107.757 392.99 102.917 cv
392.069 98.1517 392.43 94.2522 394.095 90.9954 cv
394.716 89.7808 395.593 88.6152 396.643 87.6042 cv
396.392 87.0761 396.16 86.5228 395.943 85.9351 cv
394.531 88.2811 393.051 90.1559 389.085 91.4563 cv
385.995 92.4692 382.738 91.4361 381.208 89.1352 cv
379.785 92.1247 375.78 95.4954 373.004 95.7769 cv
370.068 96.0766 368.755 94.8022 367.603 92.3077 cv
367.167 92.707 366.747 93.1059 366.336 93.4952 cv
364.581 95.1618 362.922 96.7358 360.847 97.5233 cv
358.844 98.2833 356.492 98.1353 354.393 97.1173 cv
352.191 96.0491 350.531 94.1715 349.837 91.9654 cv
348.636 88.1443 350.364 83.7133 353.565 81.5813 cv
353.011 81.4085 352.471 81.1235 351.964 80.7313 cv
350.536 79.6257 349.628 77.8505 349.596 76.0985 cv
349.533 72.7374 351.976 69.9742 354.425 68.7269 cv
356.572 67.6336 358.981 67.3294 361.312 67.0353 cv
361.631 66.9951 361.951 66.9547 362.27 66.9124 cv
361.561 64.129 362.786 60.7594 365.29 58.8279 cv
367.517 57.1092 370.642 56.3961 374.086 56.8189 cv
376.415 57.1047 378.307 57.8361 379.71 58.9929 cv
381.096 60.1353 382.006 61.7473 382.278 63.472 cv
385.171 60.4358 389.06 59.0227 392.484 59.8431 cv
396.081 60.7047 398.996 64.6294 399.793 68.0798 cv
401.994 65.701 404.328 64.5636 406.738 64.6921 cv
409.161 64.8229 410.987 65.7546 412.017 67.3864 cv
413.284 69.392 413.303 72.3617 412.091 75.832 cv
413.54 75.4475 415.154 75.5586 416.605 76.1693 cv
418.588 77.0044 420.072 78.6627 420.784 80.8385 cv
421.912 84.2862 420.72 89.7609 418.233 92.5547 cv
417.835 93.0018 417.293 93.4289 416.62 93.8266 cv
415.658 99.0708 414.487 104.288 412.939 110.221 cv
411.682 115.042 409.533 120.264 407.042 124.549 cv
405.868 126.567 404.914 127.668 402.362 128.858 cv
402.291 128.891 402.214 128.908 402.138 128.908 cv
cp
0 0 0 rgb
f
360.125 97.6588 mo
360.125 97.5094 360.127 97.3563 360.129 97.2008 cv
360.307 97.1496 360.484 97.0936 360.659 97.0273 cv
363.287 96.0295 365.217 93.7029 367.793 91.4218 cv
368.961 94.2057 370.05 95.5434 372.951 95.2491 cv
375.852 94.9549 380.469 90.7628 381.127 87.7937 cv
382.165 90.7361 385.834 91.9641 388.919 90.9523 cv
393.147 89.566 394.384 87.5713 396.071 84.6719 cv
396.993 87.5751 398.495 90.6665 401.665 92.9335 cv
402.826 93.7634 404.088 94.3291 405.382 94.6878 cv
405.428 95.257 405.479 95.8099 405.539 96.3373 cv
405.762 98.2894 406.269 102.535 405.815 106.828 cv
409.106 104.096 411.831 104.553 413.875 106.622 cv
415.918 108.691 415.75 111.956 413.75 113.991 cv
411.75 116.026 408.239 116.797 405.154 116.145 cv
404.352 121.342 403.159 131.752 399.548 136.353 cv
395.708 141.246 388.915 144.378 381.891 144.495 cv
374.867 144.611 367.797 141.708 363.514 136.949 cv
358.649 131.544 357.566 124.391 357.975 117.688 cv
358.385 110.985 360.104 104.377 360.125 97.6588 cv
cp
1 1 1 rgb
f
360.125 97.6588 mo
360.128 97.6588 li
360.125 97.6588 li
cp
360.655 97.5922 mo
360.655 97.615 360.655 97.6376 360.655 97.66 cv
360.655 97.6602 360.655 97.6604 360.655 97.6604 cv
360.643 101.49 360.079 105.329 359.532 109.043 cv
359.114 111.884 358.682 114.823 358.505 117.72 cv
358.017 125.717 359.834 132.068 363.908 136.594 cv
368.102 141.254 374.988 144.074 381.882 143.964 cv
388.768 143.85 395.378 140.809 399.131 136.026 cv
402.283 132.009 403.587 123.132 404.366 117.828 cv
404.46 117.192 404.547 116.6 404.63 116.064 cv
404.652 115.92 404.733 115.791 404.852 115.708 cv
404.973 115.625 405.12 115.596 405.264 115.626 cv
408.302 116.268 411.561 115.461 413.372 113.619 cv
415.237 111.722 415.292 108.812 413.497 106.995 cv
411.388 104.861 408.918 104.941 406.154 107.236 cv
405.988 107.374 405.755 107.397 405.565 107.296 cv
405.374 107.194 405.265 106.987 405.288 106.772 cv
405.725 102.629 405.253 98.5077 405.027 96.5268 cv
405.012 96.3976 li
404.967 96.008 404.926 95.5875 404.883 95.0949 cv
403.592 94.6977 402.408 94.1166 401.357 93.365 cv
398.293 91.1743 396.795 88.261 395.942 85.9373 cv
394.53 88.2821 393.05 90.1562 389.085 91.4563 cv
385.995 92.4692 382.738 91.4361 381.208 89.1352 cv
379.785 92.1247 375.78 95.4954 373.004 95.7769 cv
370.068 96.0766 368.755 94.8022 367.603 92.3077 cv
367.167 92.707 366.747 93.1059 366.336 93.4952 cv
364.581 95.1618 362.922 96.7358 360.847 97.5233 cv
360.785 97.5468 360.722 97.5696 360.655 97.5922 cv
cp
381.481 145.028 mo
374.43 145.029 367.428 142.091 363.12 137.304 cv
358.848 132.558 356.939 125.947 357.446 117.656 cv
357.626 114.713 358.061 111.752 358.483 108.888 cv
359.023 105.212 359.583 101.411 359.594 97.6573 cv
359.594 97.5055 359.596 97.3502 359.598 97.1925 cv
359.602 96.9592 359.758 96.7556 359.982 96.691 cv
360.146 96.6437 360.309 96.5924 360.471 96.5313 cv
362.346 95.8194 363.857 94.3857 365.606 92.7257 cv
366.19 92.1711 366.794 91.5978 367.442 91.0246 cv
367.57 90.9111 367.745 90.8667 367.912 90.9045 cv
368.078 90.9427 368.217 91.0588 368.283 91.2166 cv
369.388 93.8518 370.317 94.9844 372.897 94.7214 cv
375.603 94.447 379.999 90.432 380.609 87.6788 cv
380.66 87.4478 380.858 87.2785 381.095 87.2642 cv
381.331 87.2488 381.548 87.3941 381.627 87.617 cv
382.605 90.3878 386.102 91.3176 388.754 90.4481 cv
392.884 89.0941 394.028 87.1272 395.612 84.4051 cv
395.718 84.2236 395.921 84.1219 396.129 84.1445 cv
396.337 84.1675 396.513 84.3114 396.576 84.5114 cv
397.305 86.806 398.658 90.1308 401.974 92.5018 cv
403.019 93.2498 404.214 93.8133 405.523 94.1767 cv
405.737 94.2361 405.892 94.423 405.91 94.6445 cv
405.963 95.288 406.012 95.8068 406.066 96.2772 cv
406.081 96.4061 li
406.29 98.236 406.705 101.859 406.445 105.694 cv
409.276 103.804 412.017 103.986 414.252 106.249 cv
416.459 108.484 416.404 112.048 414.128 114.363 cv
412.185 116.34 408.816 117.274 405.596 116.766 cv
405.539 117.149 405.479 117.556 405.416 117.982 cv
404.57 123.741 403.292 132.443 399.966 136.681 cv
396.02 141.709 389.098 144.906 381.9 145.025 cv
381.761 145.027 381.62 145.028 381.481 145.028 cv
cp
0 0 0 rgb
f
366.357 107.386 mo
366.263 106.56 366.894 105.81 367.767 105.712 cv
368.639 105.613 369.422 106.203 369.516 107.029 cv
369.61 107.855 368.979 108.605 368.107 108.704 cv
367.234 108.802 366.451 108.212 366.357 107.386 cv
cp
f
388.509 108.581 mo
388.416 107.755 389.047 107.005 389.919 106.907 cv
390.792 106.808 391.575 107.398 391.669 108.224 cv
391.763 109.05 391.132 109.8 390.259 109.899 cv
389.387 109.997 388.603 109.407 388.509 108.581 cv
cp
f
381.922 134.548 mo
381.238 134.548 380.554 134.463 379.888 134.287 cv
379.604 134.212 379.435 133.922 379.51 133.639 cv
379.585 133.355 379.876 133.186 380.159 133.261 cv
382.769 133.951 385.7 133.038 387.453 130.99 cv
387.644 130.768 387.979 130.742 388.201 130.932 cv
388.424 131.123 388.45 131.458 388.259 131.68 cv
386.694 133.508 384.312 134.548 381.922 134.548 cv
cp
f
378.15 126.224 mo
377.099 126.224 375.98 126.014 374.811 125.594 cv
374.193 125.373 373.493 125.068 372.987 124.486 cv
372.339 123.74 372.109 122.638 372.357 121.462 cv
372.533 120.631 372.903 119.884 373.262 119.161 cv
373.422 118.835 li
375.331 114.922 376.328 110.554 376.306 106.202 cv
376.305 105.909 376.541 105.67 376.834 105.668 cv
376.835 105.668 376.836 105.668 376.837 105.668 cv
377.128 105.668 377.366 105.904 377.367 106.196 cv
377.39 110.71 376.356 115.242 374.376 119.3 cv
374.212 119.632 li
373.868 120.326 373.543 120.982 373.396 121.681 cv
373.219 122.516 373.366 123.304 373.788 123.79 cv
374.134 124.188 374.68 124.42 375.168 124.595 cv
376.595 125.107 377.921 125.274 379.107 125.092 cv
380.454 124.885 381.652 124.176 382.311 123.195 cv
382.475 122.951 382.804 122.887 383.048 123.05 cv
383.291 123.214 383.356 123.543 383.192 123.786 cv
382.358 125.028 380.928 125.886 379.268 126.141 cv
378.904 126.196 378.531 126.224 378.15 126.224 cv
cp
f
405.461 110.775 mo
405.438 110.775 405.415 110.774 405.391 110.771 cv
405.101 110.732 404.896 110.466 404.935 110.175 cv
405.176 108.342 405.266 107.37 405.428 105.605 cv
405.455 105.313 405.711 105.095 406.005 105.125 cv
406.297 105.152 406.511 105.41 406.485 105.702 cv
406.321 107.481 406.231 108.46 405.987 110.314 cv
405.951 110.581 405.724 110.775 405.461 110.775 cv
cp
f
354.44 93.1882 mo
354.394 93.1882 354.348 93.1704 354.313 93.1348 cv
352.811 91.5933 352.261 89.1877 352.946 87.149 cv
352.977 87.0566 353.077 87.0074 353.17 87.0376 cv
353.262 87.0687 353.312 87.169 353.281 87.2616 cv
352.638 89.1779 353.154 91.4389 354.566 92.8878 cv
354.634 92.9578 354.633 93.0699 354.563 93.1379 cv
354.529 93.1714 354.484 93.1882 354.44 93.1882 cv
cp
f
413.055 91.1159 mo
413.006 91.1159 412.957 91.0957 412.922 91.0562 cv
412.857 90.9829 412.864 90.8712 412.938 90.8064 cv
415.468 88.5722 416.458 84.786 415.345 81.5993 cv
415.313 81.5071 415.361 81.4062 415.453 81.3739 cv
415.546 81.3418 415.647 81.3905 415.679 81.4825 cv
416.837 84.8015 415.806 88.7446 413.172 91.0717 cv
413.138 91.1012 413.096 91.1159 413.055 91.1159 cv
cp
f
274.337 201.708 mo
271.046 185.378 269.331 156.257 264.761 140.003 cv
260.468 135.766 256.021 128.983 254.289 122.825 cv
253.585 120.319 253.61 119.298 255.284 117.613 cv
256.508 116.382 258.659 116.796 260.016 117.63 cv
259.395 116.053 257.895 114.617 259.854 113.021 cv
260.736 112.302 261.989 111.926 262.949 112.538 cv
262.445 109.349 266.014 107.48 268.001 110.552 cv
266.492 106.615 265.106 103.086 263.54 99.4429 cv
262.571 97.1883 261.637 94.4929 263.049 93.5801 cv
264.858 92.4099 266.683 94.9251 268.688 98.7224 cv
272.108 105.201 273.242 107.358 277.023 113.206 cv
280.582 118.709 283.466 128.824 280.697 132.542 cv
280.862 139.143 295.975 180.445 301.878 189.573 cv
304.033 192.905 301.226 195.067 299.76 198.755 cv
297.99 203.209 291.124 218.757 280.523 210.948 cv
277.519 208.734 274.534 202.685 274.337 201.708 cv
cp
1 1 1 rgb
f
257.349 117.372 mo
256.697 117.372 256.091 117.554 255.661 117.987 cv
254.161 119.496 254.13 120.297 254.8 122.681 cv
256.613 129.129 261.296 135.837 265.134 139.625 cv
265.199 139.69 265.247 139.77 265.272 139.859 cv
267.957 149.41 269.639 163.207 271.265 176.549 cv
272.413 185.96 273.496 194.849 274.858 201.603 cv
274.858 201.603 274.858 201.603 274.858 201.603 cv
275.035 202.484 277.959 208.4 280.838 210.52 cv
283.366 212.383 285.856 212.983 288.235 212.301 cv
293.704 210.736 297.495 203.019 299.267 198.559 cv
299.693 197.487 300.236 196.528 300.715 195.682 cv
301.929 193.536 302.806 191.985 301.432 189.861 cv
295.649 180.918 280.345 139.679 280.166 132.555 cv
280.163 132.436 280.2 132.32 280.271 132.225 cv
282.768 128.872 280.292 119.237 276.578 113.494 cv
272.812 107.67 271.673 105.514 268.295 99.1142 cv
268.219 98.97 li
267.148 96.9423 265.57 94.2064 264.237 93.8582 cv
263.925 93.7765 263.639 93.8301 263.337 94.0256 cv
262.125 94.8091 263.557 98.1391 264.027 99.2335 cv
265.687 103.093 267.156 106.863 268.496 110.362 cv
268.593 110.616 268.483 110.902 268.241 111.025 cv
267.998 111.148 267.703 111.068 267.555 110.84 cv
266.831 109.72 265.821 109.272 264.856 109.641 cv
264.026 109.958 263.239 110.975 263.473 112.455 cv
263.505 112.661 263.414 112.867 263.239 112.981 cv
263.064 113.095 262.839 113.097 262.663 112.985 cv
261.917 112.509 260.883 112.867 260.189 113.432 cv
259.035 114.373 259.335 115.096 260.014 116.399 cv
260.188 116.732 260.367 117.076 260.509 117.436 cv
260.593 117.648 260.531 117.891 260.356 118.037 cv
260.181 118.184 259.932 118.201 259.738 118.082 cv
259.041 117.654 258.16 117.372 257.349 117.372 cv
cp
286.299 213.637 mo
284.293 213.637 282.253 212.881 280.209 211.375 cv
277.058 209.054 274.04 202.916 273.818 201.813 cv
273.818 201.813 li
272.448 195.018 271.362 186.109 270.212 176.678 cv
268.598 163.437 266.929 149.749 264.288 140.281 cv
260.37 136.377 255.628 129.547 253.779 122.968 cv
253.024 120.282 253.081 119.078 254.908 117.239 cv
255.92 116.22 257.487 116.123 258.9 116.553 cv
258.314 115.391 257.809 114.003 259.519 112.61 cv
260.237 112.025 261.327 111.539 262.376 111.746 cv
262.446 110.334 263.239 109.123 264.477 108.65 cv
265.12 108.403 265.926 108.36 266.723 108.708 cv
265.601 105.81 264.388 102.759 263.053 99.6525 cv
261.937 97.0577 261.03 94.2539 262.761 93.1346 cv
263.315 92.7763 263.902 92.6744 264.505 92.8315 cv
265.883 93.1914 267.23 94.8262 269.157 98.4747 cv
269.233 98.6189 li
272.595 104.987 273.728 107.133 277.469 112.918 cv
280.931 118.271 284.061 128.538 281.234 132.7 cv
281.645 139.397 296.31 179.986 302.323 189.285 cv
304.046 191.948 302.876 194.016 301.638 196.204 cv
301.154 197.06 300.653 197.946 300.254 198.951 cv
298.409 203.592 294.432 211.631 288.527 213.321 cv
287.79 213.532 287.047 213.637 286.299 213.637 cv
cp
0 0 0 rgb
f
262.636 127.168 mo
262.153 127.168 261.645 127.015 261.186 126.716 cv
260.551 126.302 260.103 125.7 259.707 125.168 cv
257.869 122.7 li
257.694 122.464 257.743 122.132 257.978 121.957 cv
258.212 121.782 258.545 121.83 258.72 122.066 cv
260.558 124.534 li
260.918 125.017 261.289 125.517 261.765 125.827 cv
262.215 126.12 262.736 126.189 263.093 126.004 cv
263.527 125.777 263.703 125.19 263.683 124.741 cv
263.655 124.143 263.377 123.556 263.095 123.007 cv
262.044 120.96 261.749 120.604 260.876 119.546 cv
260.551 119.151 260.145 118.66 259.597 117.956 cv
259.417 117.725 259.458 117.392 259.69 117.212 cv
259.92 117.032 260.254 117.073 260.434 117.304 cv
260.973 117.996 261.373 118.481 261.694 118.87 cv
262.597 119.964 262.935 120.373 264.039 122.522 cv
264.36 123.147 264.705 123.881 264.743 124.692 cv
264.787 125.67 264.332 126.553 263.584 126.944 cv
263.296 127.094 262.972 127.168 262.636 127.168 cv
cp
f
267.099 126.07 mo
266.432 126.07 265.808 125.718 265.269 125.354 cv
264.752 125.004 264.237 124.634 263.74 124.257 cv
263.507 124.079 263.462 123.747 263.639 123.513 cv
263.816 123.28 264.149 123.235 264.382 123.412 cv
264.864 123.778 265.362 124.136 265.864 124.475 cv
266.354 124.806 266.867 125.098 267.299 124.983 cv
267.839 124.839 268.12 124.072 268.118 123.388 cv
268.116 122.332 267.163 119.677 262.636 113.021 cv
262.509 112.836 li
262.345 112.593 262.408 112.263 262.651 112.099 cv
262.893 111.934 263.223 111.997 263.387 112.24 cv
263.513 112.425 li
267.322 118.024 269.175 121.61 269.179 123.385 cv
269.182 124.477 268.686 125.712 267.572 126.008 cv
267.412 126.05 267.254 126.07 267.099 126.07 cv
cp
f
270.047 130.788 mo
269.815 130.788 269.602 130.635 269.537 130.4 cv
268.73 127.535 270.44 125.146 271.689 123.402 cv
272.19 122.702 272.876 121.744 272.725 121.493 cv
272.24 120.685 269.589 119.88 268.315 119.493 cv
267.598 119.275 267.273 119.174 267.09 119.068 cv
265.749 118.287 265.312 117.389 265.182 116.773 cv
265.068 116.232 265.155 115.696 265.414 115.338 cv
265.766 114.853 266.939 113.87 267.721 113.785 cv
269.293 113.614 273.036 114.59 275.273 115.173 cv
275.648 115.271 275.973 115.356 276.226 115.419 cv
277.198 115.661 280.276 117.534 280.379 118.912 cv
280.4 119.204 280.181 119.458 279.889 119.48 cv
279.597 119.501 279.342 119.282 279.32 118.99 cv
279.278 118.421 277.024 116.711 275.97 116.449 cv
275.714 116.385 275.385 116.299 275.005 116.2 cv
272.98 115.672 269.209 114.688 267.836 114.839 cv
267.509 114.875 266.574 115.546 266.273 115.962 cv
266.218 116.037 266.158 116.258 266.22 116.554 cv
266.291 116.886 266.566 117.535 267.624 118.151 cv
267.726 118.205 268.203 118.35 268.623 118.478 cv
270.807 119.141 272.993 119.878 273.635 120.947 cv
274.144 121.795 273.441 122.777 272.551 124.02 cv
271.366 125.676 269.89 127.738 270.558 130.113 cv
270.637 130.395 270.473 130.688 270.191 130.768 cv
270.143 130.781 270.095 130.788 270.047 130.788 cv
cp
f
270.228 115.05 mo
270.005 115.05 269.797 114.907 269.724 114.683 cv
269.532 114.092 268.801 112.861 268.213 111.872 cv
267.903 111.351 267.611 110.86 267.414 110.492 cv
267.276 110.234 267.373 109.912 267.631 109.774 cv
267.89 109.636 268.211 109.733 268.349 109.991 cv
268.535 110.338 268.822 110.82 269.125 111.33 cv
269.771 112.418 270.505 113.652 270.733 114.355 cv
270.824 114.634 270.671 114.933 270.392 115.024 cv
270.338 115.041 270.283 115.05 270.228 115.05 cv
cp
f
269.546 124.668 mo
269.266 124.668 268.995 124.611 268.752 124.493 cv
268.489 124.365 268.379 124.048 268.507 123.784 cv
268.635 123.521 268.953 123.411 269.216 123.539 cv
269.491 123.673 269.996 123.623 270.392 123.268 cv
270.991 122.731 271.09 121.741 270.664 120.552 cv
270.565 120.276 270.709 119.972 270.985 119.873 cv
271.26 119.774 271.564 119.918 271.663 120.194 cv
272.485 122.489 271.543 123.661 271.1 124.058 cv
270.658 124.455 270.087 124.668 269.546 124.668 cv
cp
f
469.237 225.079 mo
465.058 203.121 465.027 179.551 447.339 164.786 cv
438.848 157.699 418.72 154.639 406.92 153.882 cv
406.198 165.306 395.03 168.023 387.882 167.564 cv
375.944 166.798 373.82 164.451 370.787 155.387 cv
368.108 156.454 351.984 157.264 341.512 166.619 cv
322.075 183.983 298.308 182.373 299.953 183.438 cv
301.432 184.396 296.127 208.633 281.301 211.604 cv
273.51 213.165 316.909 219.595 346.667 211.719 cv
345.552 227.292 351.144 272.722 354.373 290.211 cv
385.413 311.857 449.254 287.381 449.254 287.381 cv
449.254 287.381 444.372 273.011 444.372 262.173 cv
444.372 256.798 456.985 268.701 459.481 269.144 cv
460.31 269.291 462.908 267.44 463.239 266.665 cv
465.338 261.757 473.081 245.28 469.237 225.079 cv
cp
f
299.585 183.806 mo
299.585 183.806 li
299.585 183.806 299.585 183.807 299.585 183.806 cv
cp
354.855 289.899 mo
370.745 300.842 395.414 299.476 413.346 296.393 cv
431.031 293.352 445.799 288.09 448.59 287.062 cv
447.743 284.441 443.842 271.849 443.842 262.173 cv
443.842 261.091 444.307 260.627 444.697 260.428 cv
446.38 259.571 449.912 261.981 454.715 265.479 cv
456.751 266.962 458.856 268.495 459.574 268.622 cv
460.14 268.7 462.481 267.091 462.751 266.457 cv
462.848 266.232 462.955 265.983 463.073 265.712 cv
465.611 259.855 472.354 244.298 468.716 225.179 cv
467.929 221.045 467.28 216.796 466.652 212.686 cv
463.854 194.363 461.211 177.056 446.999 165.193 cv
439.237 158.714 420.95 155.369 407.408 154.446 cv
406.943 159.42 404.412 163.285 400.064 165.645 cv
395.259 168.254 389.921 168.227 387.848 168.094 cv
376.01 167.334 373.49 164.96 370.451 156.051 cv
369.753 156.24 368.715 156.427 367.395 156.664 cv
361.293 157.762 349.935 159.805 341.866 167.014 cv
326.652 180.605 309.028 182.643 302.393 183.409 cv
301.717 183.488 301.065 183.563 300.64 183.63 cv
300.773 184.184 300.787 185.24 300.391 187.319 cv
298.951 194.871 293.129 209.775 281.405 212.124 cv
281.374 212.13 281.344 212.137 281.316 212.143 cv
286.011 214.114 320.883 217.994 346.531 211.206 cv
346.697 211.162 346.874 211.201 347.006 211.31 cv
347.137 211.419 347.208 211.586 347.196 211.757 cv
346.108 226.954 351.568 271.969 354.855 289.899 cv
cp
389.386 299.679 mo
386.929 299.679 384.551 299.596 382.255 299.43 cv
370.712 298.594 361.229 295.638 354.069 290.646 cv
353.955 290.566 353.876 290.444 353.851 290.307 cv
350.611 272.756 345.21 228.422 346.091 212.416 cv
319.331 219.252 282.35 214.979 280.082 212.603 cv
279.874 212.384 279.801 212.112 279.882 211.855 cv
280.033 211.378 280.631 211.197 281.197 211.084 cv
288.656 209.589 293.361 202.661 295.995 197.113 cv
298.981 190.821 299.975 184.74 299.6 183.837 cv
299.295 183.6 299.336 183.299 299.357 183.208 cv
299.481 182.678 299.907 182.628 302.272 182.355 cv
308.815 181.599 326.196 179.59 341.159 166.223 cv
349.452 158.814 361.002 156.736 367.207 155.62 cv
368.798 155.334 370.055 155.108 370.591 154.894 cv
370.726 154.84 370.878 154.844 371.01 154.906 cv
371.143 154.967 371.244 155.08 371.29 155.219 cv
374.269 164.122 376.159 166.28 387.917 167.035 cv
389.896 167.162 394.995 167.19 399.558 164.713 cv
403.781 162.42 406.08 158.764 406.391 153.848 cv
406.4 153.708 406.464 153.577 406.57 153.484 cv
406.675 153.39 406.817 153.342 406.954 153.352 cv
420.704 154.235 439.62 157.652 447.679 164.379 cv
462.2 176.499 464.996 194.814 467.701 212.526 cv
468.328 216.626 468.975 220.866 469.758 224.98 cv
473.458 244.42 466.62 260.195 464.046 266.133 cv
463.929 266.404 463.822 266.651 463.727 266.874 cv
463.328 267.809 460.512 269.868 459.389 269.667 cv
458.476 269.505 456.781 268.296 454.091 266.337 cv
451.22 264.246 446.415 260.741 445.178 261.374 cv
444.996 261.467 444.903 261.736 444.903 262.173 cv
444.903 272.797 449.707 287.067 449.756 287.21 cv
449.848 287.48 449.71 287.774 449.444 287.876 cv
449.283 287.938 433.207 294.053 413.543 297.436 cv
404.867 298.928 396.773 299.679 389.386 299.679 cv
cp
f
437.205 244.796 mo
436.983 244.796 436.775 244.654 436.701 244.432 cv
430.367 225.25 426.784 213.117 426.784 186.817 cv
426.784 186.524 427.021 186.287 427.314 186.287 cv
427.607 186.287 427.845 186.524 427.845 186.817 cv
427.845 212.954 431.409 225.021 437.709 244.099 cv
437.801 244.377 437.65 244.677 437.372 244.769 cv
437.317 244.787 437.26 244.796 437.205 244.796 cv
cp
f
347.021 211.323 mo
347.021 211.324 347.021 211.324 347.021 211.324 cv
347.021 211.324 347.021 211.324 347.021 211.323 cv
cp
346.667 212.249 mo
346.541 212.249 346.415 212.205 346.313 212.114 cv
346.002 211.836 345.991 211.535 345.935 207.65 cv
345.893 204.772 345.823 199.955 345.552 192.638 cv
345.542 192.345 345.77 192.099 346.063 192.088 cv
346.359 192.07 346.602 192.306 346.613 192.599 cv
346.884 199.928 346.954 204.752 346.996 207.635 cv
347.026 209.716 347.046 211.115 347.12 211.441 cv
347.239 211.636 347.223 211.893 347.062 212.072 cv
346.958 212.189 346.813 212.249 346.667 212.249 cv
cp
f
380.111 201.536 mo
368.196 201.536 357.373 200.482 351.664 197.577 cv
351.577 197.533 351.543 197.426 351.587 197.339 cv
351.631 197.252 351.738 197.217 351.825 197.262 cv
363.61 203.261 397.458 201.299 417.334 198.516 cv
417.428 198.505 417.52 198.57 417.534 198.667 cv
417.547 198.764 417.48 198.853 417.383 198.867 cv
407.052 200.313 392.948 201.536 380.111 201.536 cv
cp
1 1 1 rgb
f
392.833 218.27 mo
377.013 218.27 362.549 215.753 351.703 213.102 cv
351.608 213.079 351.55 212.983 351.573 212.888 cv
351.596 212.793 351.691 212.735 351.787 212.758 cv
368.429 216.826 393.617 220.58 419.102 215.368 cv
419.199 215.348 419.291 215.41 419.311 215.506 cv
419.33 215.601 419.269 215.695 419.173 215.715 cv
410.239 217.542 401.338 218.27 392.833 218.27 cv
cp
f
467.589 254.165 mo
467.529 254.165 467.47 254.135 467.437 254.079 cv
461.735 244.475 452.454 239.639 443.785 241.753 cv
443.691 241.776 443.595 241.718 443.572 241.623 cv
443.548 241.528 443.606 241.432 443.701 241.409 cv
452.519 239.253 461.957 244.157 467.741 253.898 cv
467.791 253.982 467.763 254.091 467.679 254.14 cv
467.651 254.157 467.62 254.165 467.589 254.165 cv
cp
f
465.343 258.089 mo
465.305 258.089 465.268 258.077 465.236 258.053 cv
464.178 257.25 463.445 256.119 462.737 255.026 cv
462.49 254.644 462.234 254.25 461.97 253.877 cv
460.348 251.594 458.136 249.793 455.571 248.667 cv
455.482 248.628 455.441 248.523 455.48 248.434 cv
455.52 248.345 455.625 248.305 455.713 248.343 cv
458.336 249.494 460.6 251.337 462.258 253.672 cv
462.527 254.051 462.785 254.449 463.034 254.834 cv
463.726 255.902 464.441 257.005 465.449 257.771 cv
465.527 257.83 465.543 257.941 465.484 258.019 cv
465.449 258.065 465.396 258.089 465.343 258.089 cv
cp
f
299.953 200.235 mo
299.931 200.235 299.908 200.231 299.886 200.222 cv
299.796 200.185 299.753 200.082 299.79 199.991 cv
301.749 195.206 302.71 189.944 302.57 184.774 cv
302.568 184.677 302.645 184.596 302.742 184.593 cv
302.84 184.593 302.921 184.667 302.924 184.765 cv
303.065 189.983 302.094 195.295 300.117 200.125 cv
300.089 200.194 300.023 200.235 299.953 200.235 cv
cp
f
306.63 190.579 mo
306.617 190.579 306.604 190.578 306.591 190.575 cv
306.496 190.553 306.436 190.458 306.458 190.363 cv
306.876 188.523 306.993 186.638 306.805 184.76 cv
306.796 184.663 306.867 184.576 306.964 184.566 cv
307.063 184.556 307.148 184.628 307.158 184.725 cv
307.349 186.641 307.229 188.564 306.803 190.441 cv
306.784 190.524 306.711 190.579 306.63 190.579 cv
cp
f
438.776 245.935 mo
438.543 245.935 438.329 245.78 438.265 245.543 cv
433.977 229.779 431.051 213.572 429.566 197.37 cv
429.54 197.078 429.754 196.82 430.046 196.793 cv
430.34 196.767 430.596 196.981 430.623 197.273 cv
432.102 213.413 435.017 229.56 439.288 245.265 cv
439.365 245.548 439.199 245.839 438.916 245.916 cv
438.869 245.929 438.823 245.935 438.776 245.935 cv
cp
f
345.387 215.195 mo
345.384 215.195 345.382 215.195 345.379 215.195 cv
345.086 215.19 344.852 214.949 344.857 214.656 cv
345.129 196.743 li
345.134 196.45 345.38 196.222 345.668 196.221 cv
345.961 196.225 346.195 196.466 346.191 196.759 cv
345.918 214.672 li
345.913 214.963 345.676 215.195 345.387 215.195 cv
cp
f
441.279 250.081 mo
443.592 247.856 447.981 248.7 450.878 250.081 cv
452.304 250.761 463.766 261.356 459.577 270.226 cv
455.972 277.86 453.593 280.736 434.516 308.939 cv
433.807 309.988 433.066 311.067 431.991 311.735 cv
428.571 313.859 424.103 310.581 422.622 306.837 cv
419.484 298.902 423.663 290.15 427.512 282.535 cv
431.41 274.822 438.966 252.306 441.279 250.081 cv
cp
f
441.279 250.081 mo
441.283 250.081 li
441.279 250.081 li
cp
445.286 249.251 mo
443.851 249.251 442.542 249.602 441.647 250.464 cv
441.647 250.464 li
440.442 251.622 437.452 259.353 434.56 266.83 cv
432.182 272.979 429.722 279.337 427.985 282.774 cv
424.597 289.477 419.958 298.656 423.115 306.642 cv
424.019 308.926 426.033 310.925 428.126 311.617 cv
429.034 311.917 430.393 312.103 431.711 311.284 cv
432.709 310.664 433.436 309.59 434.077 308.642 cv
438.081 302.722 441.39 297.859 444.048 293.952 cv
454.162 279.087 456.267 275.993 459.097 270 cv
463.215 261.28 451.553 250.991 450.65 250.56 cv
449.029 249.788 447.061 249.251 445.286 249.251 cv
cp
429.643 312.936 mo
429.043 312.936 428.423 312.832 427.793 312.625 cv
425.418 311.84 423.141 309.592 422.129 307.032 cv
418.796 298.603 423.56 289.178 427.038 282.296 cv
428.751 278.906 431.201 272.572 433.57 266.447 cv
437.283 256.849 439.63 250.932 440.911 249.699 cv
443.291 247.41 447.746 248.001 451.106 249.602 cv
452.885 250.45 464.401 261.253 460.056 270.453 cv
457.191 276.522 455.078 279.627 444.925 294.548 cv
442.267 298.455 438.959 303.317 434.955 309.237 cv
434.255 310.272 433.461 311.446 432.271 312.186 cv
431.468 312.685 430.579 312.936 429.643 312.936 cv
cp
0 0 0 rgb
f
571.663 194.288 mo
571.442 203.971 577.368 213.858 586.513 217.046 cv
591.493 218.782 596.952 218.536 602.054 219.869 cv
607.157 221.201 612.358 225.042 612.391 230.316 cv
612.413 233.819 610.426 241.765 620.915 246.42 cv
629.568 250.26 627.501 271.035 600.705 279.77 cv
592.495 282.447 597.786 275.714 589.252 274.4 cv
580.825 273.104 573.18 268.338 567.366 262.101 cv
561.552 255.864 557.438 248.218 554.232 240.317 cv
550.541 231.219 547.959 221.168 550.242 211.619 cv
552.524 202.069 560.943 193.441 571.663 194.288 cv
cp
f
570.212 194.761 mo
560.199 194.761 552.776 203.296 550.758 211.742 cv
548.849 219.727 550.109 228.744 554.724 240.118 cv
558.418 249.224 562.681 256.296 567.754 261.739 cv
573.941 268.376 581.605 272.687 589.333 273.876 cv
593.664 274.543 594.703 276.611 595.462 278.121 cv
596.241 279.672 596.67 280.528 600.54 279.266 cv
617.93 273.597 624.546 262.906 624.927 255.473 cv
625.134 251.437 623.514 248.154 620.7 246.905 cv
611.189 242.684 611.574 235.868 611.804 231.796 cv
611.836 231.23 611.863 230.741 611.861 230.32 cv
611.828 225.267 606.685 221.626 601.92 220.382 cv
599.695 219.801 597.346 219.518 595.074 219.245 cv
592.17 218.895 589.167 218.533 586.338 217.547 cv
577.44 214.445 571.107 204.926 571.126 194.785 cv
570.82 194.769 570.514 194.761 570.212 194.761 cv
cp
597.628 280.928 mo
595.859 280.928 595.204 279.972 594.514 278.597 cv
593.787 277.149 592.962 275.508 589.171 274.925 cv
581.209 273.699 573.327 269.273 566.978 262.462 cv
561.814 256.923 557.485 249.745 553.741 240.516 cv
549.039 228.928 547.763 219.706 549.726 211.495 cv
550.919 206.505 553.658 201.944 557.44 198.654 cv
561.592 195.042 566.528 193.349 571.705 193.759 cv
571.985 193.781 572.2 194.019 572.194 194.3 cv
571.967 204.184 578.063 213.539 586.688 216.545 cv
589.408 217.493 592.353 217.848 595.201 218.191 cv
597.508 218.469 599.894 218.756 602.188 219.355 cv
607.333 220.699 612.886 224.701 612.922 230.313 cv
612.925 230.768 612.895 231.296 612.863 231.855 cv
612.649 235.654 612.289 242.012 621.13 245.935 cv
624.356 247.367 626.217 251.042 625.987 255.527 cv
625.588 263.296 618.771 274.439 600.869 280.274 cv
599.482 280.727 598.438 280.928 597.628 280.928 cv
cp
f
519.279 172.169 mo
522.102 185.929 524.829 200.737 519.194 213.603 cv
517.363 217.785 514.7 221.591 513.195 225.901 cv
511.407 231.025 511.35 236.595 511.84 241.999 cv
512.765 252.215 515.833 262.696 523.017 270.018 cv
530.2 277.341 542.22 280.533 551.082 275.367 cv
558.859 270.835 562.41 261.096 561.921 252.108 cv
561.432 243.12 557.596 234.685 553.549 226.645 cv
543.827 207.33 532.494 188.826 519.279 172.169 cv
cp
f
539.177 239.28 mo
539.429 231.945 538.525 227.837 538.229 222.352 cv
541.189 220.87 544.385 219.839 547.655 219.311 cv
549.124 219.074 550.779 218.982 551.91 219.869 cv
552.618 220.425 555.973 217.466 556.32 218.281 cv
558.709 223.88 558.912 231.862 561.3 237.461 cv
561.484 237.892 569.851 237.116 570.036 237.55 cv
570.814 239.374 570.161 254.554 569.582 254.939 cv
538.968 275.293 524.222 246.182 524.222 246.182 cv
524.222 246.182 529.775 242.778 539.177 239.28 cv
cp
1 1 1 rgb
f
539.177 239.28 mo
539.18 239.28 li
539.177 239.28 li
cp
524.935 246.379 mo
526.163 248.533 532.106 258.038 542.762 260.84 cv
550.81 262.955 559.697 260.846 569.181 254.568 cv
569.695 253.016 570.184 240.281 569.615 237.969 cv
568.977 237.903 567.093 237.979 565.679 238.035 cv
561.307 238.211 561.021 238.159 560.813 237.67 cv
559.596 234.817 558.932 231.337 558.289 227.971 cv
557.674 224.744 557.038 221.41 555.921 218.7 cv
555.586 218.811 554.937 219.19 554.484 219.456 cv
553.217 220.198 552.216 220.783 551.582 220.286 cv
550.578 219.499 549 219.632 547.739 219.835 cv
544.624 220.338 541.612 221.292 538.779 222.673 cv
538.878 224.362 539.032 225.904 539.194 227.529 cv
539.529 230.902 539.876 234.389 539.707 239.298 cv
539.7 239.513 539.563 239.702 539.362 239.777 cv
531.591 242.668 526.415 245.525 524.935 246.379 cv
cp
548.975 262.698 mo
546.761 262.698 544.595 262.42 542.482 261.864 cv
530.034 258.584 523.81 246.543 523.749 246.422 cv
523.624 246.176 523.709 245.875 523.945 245.73 cv
524 245.696 529.515 242.34 538.658 238.908 cv
538.796 234.254 538.461 230.89 538.138 227.634 cv
537.971 225.962 537.799 224.233 537.7 222.381 cv
537.688 222.17 537.803 221.973 537.992 221.878 cv
541.012 220.366 544.234 219.326 547.57 218.788 cv
549.025 218.553 550.858 218.414 552.181 219.409 cv
552.498 219.39 553.4 218.861 553.948 218.54 cv
555.121 217.853 555.81 217.472 556.35 217.65 cv
556.559 217.719 556.722 217.869 556.808 218.073 cv
558.025 220.925 558.69 224.406 559.332 227.772 cv
559.947 230.997 560.583 234.33 561.699 237.039 cv
562.312 237.108 564.213 237.032 565.636 236.975 cv
570.029 236.798 570.314 236.85 570.524 237.342 cv
571.078 238.642 570.912 244.911 570.848 246.802 cv
570.573 254.917 570.085 255.242 569.876 255.38 cv
562.551 260.25 555.549 262.698 548.975 262.698 cv
cp
0 0 0 rgb
f
516.112 175.546 mo
517.012 182.338 518.385 189.464 516.628 196.227 cv
515.67 199.916 515.76 218.665 530.805 224.005 cv
538.713 226.811 547.797 226.232 555.955 221.285 cv
561.488 217.93 568.206 207.503 566.87 197.153 cv
571.449 198.424 575.975 195.336 576.028 191.217 cv
576.058 188.844 573.442 185.869 570.675 186.005 cv
568.535 186.11 568.28 186.132 566.651 187.375 cv
565.539 182.52 564.864 177.578 564.954 171.992 cv
559.75 166.26 551.408 163.331 543.063 162.081 cv
540.304 161.667 537.473 161.412 534.671 161.762 cv
526.661 162.762 515.187 168.571 516.112 175.546 cv
cp
1 1 1 rgb
f
516.638 175.477 mo
516.747 176.3 516.863 177.128 516.979 177.959 cv
517.831 184.035 518.711 190.316 517.141 196.361 cv
516.482 198.898 515.652 218.064 530.982 223.505 cv
539.236 226.434 548.007 225.484 555.68 220.831 cv
560.877 217.68 567.665 207.458 566.344 197.222 cv
566.321 197.045 566.388 196.869 566.522 196.753 cv
566.656 196.636 566.839 196.594 567.012 196.642 cv
569.156 197.238 571.463 196.823 573.182 195.533 cv
574.632 194.445 575.476 192.869 575.497 191.211 cv
575.511 190.145 574.894 188.879 573.887 187.908 cv
572.929 186.983 571.765 186.487 570.701 186.535 cv
568.608 186.637 568.483 186.644 566.973 187.797 cv
566.83 187.906 566.64 187.936 566.471 187.874 cv
566.301 187.813 566.174 187.67 566.134 187.494 cv
564.901 182.115 564.356 177.246 564.421 172.195 cv
558.756 166.08 549.652 163.605 542.984 162.605 cv
540.701 162.263 537.701 161.918 534.737 162.288 cv
529.276 162.97 521.637 166.071 518.239 170.473 cv
516.957 172.134 516.418 173.818 516.638 175.477 cv
516.638 175.477 li
cp
540.553 226.236 mo
537.229 226.236 533.889 225.662 530.627 224.505 cv
515.594 219.17 514.943 200.603 516.114 196.094 cv
517.631 190.255 516.766 184.079 515.929 178.107 cv
515.812 177.272 515.695 176.442 515.586 175.616 cv
515.586 175.616 li
515.327 173.667 515.937 171.718 517.399 169.825 cv
520.973 165.195 528.932 161.944 534.606 161.236 cv
537.698 160.849 540.792 161.204 543.142 161.556 cv
550.035 162.589 559.483 165.177 565.347 171.635 cv
565.438 171.735 565.487 171.866 565.485 172.001 cv
565.407 176.791 565.887 181.408 566.991 186.464 cv
568.177 185.631 568.715 185.57 570.649 185.475 cv
572.007 185.405 573.455 186.017 574.624 187.144 cv
575.834 188.312 576.576 189.875 576.558 191.224 cv
576.533 193.215 575.534 195.094 573.819 196.381 cv
572.039 197.717 569.717 198.24 567.48 197.836 cv
568.47 208.386 561.68 218.434 556.23 221.738 cv
551.31 224.723 545.951 226.236 540.553 226.236 cv
cp
0 0 0 rgb
f
548.52 182.634 mo
548.183 182.634 547.845 182.656 547.507 182.699 cv
542.765 183.312 539.462 188.109 540.144 193.394 cv
540.476 195.965 541.689 198.262 543.559 199.864 cv
545.414 201.452 547.695 202.163 549.982 201.869 cv
552.269 201.574 554.294 200.305 555.685 198.298 cv
557.087 196.274 557.677 193.744 557.344 191.174 cv
557.344 191.174 li
557.013 188.603 555.8 186.306 553.93 184.704 cv
552.349 183.351 550.459 182.634 548.52 182.634 cv
cp
548.965 202.996 mo
546.774 202.996 544.644 202.19 542.869 200.67 cv
540.799 198.897 539.458 196.362 539.092 193.53 cv
538.335 187.665 542.049 182.334 547.371 181.647 cv
549.961 181.313 552.534 182.112 554.62 183.898 cv
556.69 185.671 558.031 188.207 558.397 191.038 cv
558.397 191.038 li
558.762 193.869 558.109 196.662 556.557 198.902 cv
554.993 201.16 552.706 202.587 550.118 202.921 cv
549.733 202.971 549.348 202.996 548.965 202.996 cv
cp
f
521.317 183.881 mo
520.985 183.881 520.65 183.902 520.313 183.946 cv
515.571 184.558 512.268 189.356 512.95 194.641 cv
513.632 199.926 518.046 203.729 522.788 203.115 cv
527.53 202.503 530.832 197.705 530.151 192.42 cv
530.151 192.42 li
529.516 187.511 525.663 183.881 521.317 183.881 cv
cp
521.784 204.241 mo
516.912 204.241 512.601 200.221 511.898 194.777 cv
511.14 188.912 514.854 183.581 520.177 182.894 cv
525.498 182.205 530.445 186.419 531.203 192.284 cv
531.203 192.284 li
531.96 198.15 528.246 203.481 522.924 204.168 cv
522.542 204.217 522.161 204.241 521.784 204.241 cv
cp
f
572.878 134.044 mo
570.099 124.9 560.434 119.739 551.289 122.518 cv
542.145 125.296 536.984 134.962 539.763 144.107 cv
542.542 153.251 552.207 158.412 561.352 155.633 cv
570.496 152.855 575.657 143.189 572.878 134.044 cv
cp
f
566.055 188.085 mo
561.666 181.273 558.979 176.368 557.537 168.077 cv
541.323 177.678 525.931 179.171 510.408 178.579 cv
510.079 175.938 510.634 170.094 511.731 167.591 cv
514.423 161.455 517.777 156.143 527.15 151.954 cv
533.718 149.018 542.559 147.065 549.667 148.089 cv
556.731 149.106 562.804 152.925 567.747 157.512 cv
571.68 161.162 575.004 167.146 576.173 173.061 cv
577.175 178.127 575.934 181.864 573.664 187.025 cv
572.39 186.339 571.192 185.644 569.715 185.929 cv
568.238 186.214 567.286 186.964 566.055 188.085 cv
cp
f
542.531 214.031 mo
541.373 214.031 540.303 213.673 539.459 212.969 cv
539.233 212.782 539.203 212.447 539.391 212.222 cv
539.578 211.997 539.912 211.967 540.138 212.154 cv
541.261 213.09 542.935 213.229 544.62 212.526 cv
546.495 211.744 548.034 210.233 548.953 208.271 cv
549.077 208.006 549.392 207.89 549.658 208.016 cv
549.924 208.14 550.038 208.456 549.914 208.721 cv
548.882 210.923 547.148 212.622 545.029 213.506 cv
544.185 213.858 543.337 214.031 542.531 214.031 cv
cp
f
548.288 192.747 mo
548.179 191.897 547.363 191.302 546.467 191.418 cv
545.571 191.534 544.933 192.316 545.043 193.166 cv
545.153 194.016 545.968 194.611 546.865 194.496 cv
547.761 194.38 548.398 193.597 548.288 192.747 cv
cp
f
524.068 194.021 mo
523.959 193.171 523.143 192.576 522.247 192.692 cv
521.351 192.807 520.714 193.59 520.823 194.44 cv
520.933 195.29 521.748 195.885 522.645 195.769 cv
523.541 195.654 524.178 194.871 524.068 194.021 cv
cp
f
533.159 203.875 mo
533.096 203.875 533.032 203.864 532.97 203.84 cv
530.761 203.001 li
530.497 202.901 530.006 202.714 529.819 202.227 cv
529.592 201.639 529.983 201.114 530.194 200.831 cv
531.865 198.586 532.422 195.678 531.684 193.051 cv
531.605 192.769 531.769 192.476 532.051 192.396 cv
532.332 192.318 532.626 192.482 532.706 192.764 cv
533.532 195.705 532.911 198.958 531.045 201.464 cv
530.892 201.67 530.813 201.804 530.812 201.862 cv
530.825 201.866 530.898 201.918 531.137 202.008 cv
533.347 202.848 li
533.621 202.952 533.758 203.259 533.655 203.533 cv
533.574 203.745 533.372 203.875 533.159 203.875 cv
cp
f
530.282 190.7 mo
529.993 190.7 529.756 190.468 529.752 190.178 cv
529.726 188.687 531.182 187.645 532.637 187.275 cv
535.017 186.667 537.722 187.29 539.525 188.861 cv
539.746 189.054 539.769 189.389 539.577 189.61 cv
539.384 189.831 539.049 189.854 538.828 189.661 cv
537.28 188.313 534.953 187.78 532.898 188.303 cv
531.851 188.57 530.798 189.294 530.813 190.16 cv
530.818 190.453 530.584 190.695 530.291 190.7 cv
530.288 190.7 530.285 190.7 530.282 190.7 cv
cp
f
557.293 188.127 mo
557.001 188.127 556.764 187.89 556.763 187.598 cv
556.762 187.305 556.999 187.067 557.292 187.066 cv
565.306 187.042 li
565.306 187.042 565.307 187.042 565.307 187.042 cv
565.6 187.042 565.837 187.279 565.838 187.571 cv
565.839 187.864 565.602 188.102 565.309 188.103 cv
557.295 188.127 li
557.294 188.127 557.294 188.127 557.293 188.127 cv
cp
f
566.768 193.67 mo
566.767 193.67 566.765 193.67 566.763 193.67 cv
566.47 193.667 566.235 193.427 566.238 193.134 cv
566.259 191.174 565.865 189.183 565.1 187.378 cv
564.986 187.108 565.112 186.797 565.382 186.683 cv
565.65 186.568 565.963 186.694 566.077 186.964 cv
566.899 188.903 567.321 191.04 567.299 193.145 cv
567.296 193.436 567.059 193.67 566.768 193.67 cv
cp
f
625.476 301.906 mo
618.391 282.538 614.479 263.429 597.763 249.476 cv
589.74 242.779 580.062 238.027 568.911 237.312 cv
568.229 248.107 555.687 255.221 548.966 256.024 cv
545.308 256.461 531.72 258.269 531.72 242.249 cv
527.287 244.015 512.533 245.827 506.617 264.004 cv
504.198 271.438 499.864 299.892 485.577 316.384 cv
482.203 320.278 479.085 294.36 474.229 296.086 cv
469.465 297.779 463.978 300.613 463.62 305.657 cv
463.342 309.588 466.58 313.011 470.2 314.566 cv
477.979 317.908 480.892 334.103 489.276 335.285 cv
497.991 336.514 511.91 339.727 522.446 306.789 cv
527.83 312.174 531.305 317.958 537.344 321.213 cv
554.751 330.597 612.669 341.134 622.105 342.808 cv
622.888 342.947 624.667 342.305 624.98 341.574 cv
626.963 336.935 632.151 320.155 625.476 301.906 cv
cp
1 .831373 .180392 rgb
f
522.446 306.259 mo
522.585 306.259 522.721 306.313 522.821 306.414 cv
524.568 308.161 526.11 309.944 527.602 311.668 cv
530.679 315.225 533.586 318.585 537.596 320.746 cv
554.777 330.008 611.085 340.314 622.198 342.285 cv
622.826 342.392 624.305 341.803 624.492 341.365 cv
624.819 340.601 632.411 322.408 624.977 302.088 cv
623.736 298.693 622.579 295.27 621.46 291.959 cv
616.132 276.191 611.099 261.298 597.424 249.883 cv
588.781 242.669 579.355 238.632 569.398 237.878 cv
568.81 243.867 564.825 248.213 561.533 250.831 cv
557.732 253.852 552.824 256.098 549.029 256.551 cv
548.905 256.565 li
546.409 256.865 539.775 257.661 535.359 253.744 cv
532.729 251.409 531.331 247.798 531.2 243.002 cv
530.696 243.172 530.117 243.347 529.48 243.539 cv
523.416 245.371 512.13 248.78 507.122 264.168 cv
506.65 265.617 506.105 267.878 505.414 270.74 cv
502.658 282.153 497.528 303.4 485.978 316.731 cv
485.469 317.318 484.962 317.358 484.625 317.288 cv
483.071 316.964 481.974 313.68 480.17 307.903 cv
478.73 303.292 476.938 297.553 475.115 296.642 cv
474.869 296.519 474.645 296.501 474.407 296.585 cv
467.772 298.944 464.417 301.923 464.15 305.694 cv
463.881 309.491 467.206 312.702 470.409 314.079 cv
474.185 315.701 476.831 320.169 479.389 324.491 cv
482.335 329.465 485.116 334.163 489.349 334.76 cv
489.64 334.801 489.936 334.844 490.238 334.888 cv
498.861 336.143 511.892 338.042 521.941 306.628 cv
521.997 306.452 522.141 306.318 522.321 306.274 cv
522.362 306.264 522.404 306.259 522.446 306.259 cv
cp
622.331 343.355 mo
622.215 343.355 622.108 343.347 622.012 343.33 cv
610.871 341.353 554.416 331.019 537.092 321.68 cv
532.911 319.426 529.943 315.995 526.799 312.362 cv
525.497 310.857 524.156 309.307 522.682 307.785 cv
518.195 321.481 512.745 330.054 506.034 333.978 cv
500.169 337.406 494.578 336.592 490.085 335.938 cv
489.785 335.894 489.49 335.851 489.202 335.811 cv
484.463 335.143 481.42 330.003 478.477 325.032 cv
476.004 320.857 473.448 316.539 469.991 315.054 cv
466.335 313.483 462.784 309.957 463.091 305.619 cv
463.392 301.383 466.977 298.1 474.052 295.586 cv
474.565 295.403 475.082 295.44 475.589 295.693 cv
477.816 296.805 479.528 302.286 481.183 307.587 cv
482.297 311.153 483.822 316.036 484.842 316.249 cv
484.946 316.271 485.081 316.146 485.176 316.036 cv
496.557 302.9 501.647 281.817 504.382 270.491 cv
505.079 267.606 505.629 265.328 506.113 263.84 cv
511.292 247.924 523.369 244.277 529.173 242.523 cv
530.115 242.239 530.929 241.993 531.524 241.756 cv
531.687 241.691 531.872 241.711 532.018 241.81 cv
532.164 241.908 532.251 242.073 532.251 242.249 cv
532.251 247.105 533.534 250.705 536.064 252.95 cv
540.122 256.55 546.411 255.796 548.779 255.512 cv
548.904 255.497 li
555.348 254.727 567.717 247.792 568.382 237.278 cv
568.391 237.138 568.455 237.007 568.561 236.914 cv
568.666 236.82 568.804 236.774 568.945 236.782 cv
579.324 237.448 589.134 241.582 598.103 249.069 cv
612.009 260.676 617.088 275.706 622.465 291.619 cv
623.582 294.924 624.737 298.341 625.974 301.723 cv
632.023 318.26 628.502 334.684 625.468 341.782 cv
625.077 342.696 623.365 343.355 622.331 343.355 cv
cp
0 0 0 rgb
f
604.692 320.588 mo
588.794 319.702 572.799 318.606 556.804 317.507 cv
555.371 317.271 548.256 316.253 546.5 315.995 cv
545.012 315.776 543.592 315.228 542.227 314.598 cv
537.47 312.402 527.262 308.091 524.986 309.366 cv
519.738 310.909 514.982 314.697 511.264 319.493 cv
509.178 322.186 507.468 326.645 508.331 327.411 cv
508.881 327.899 509.71 328.1 510.318 327.594 cv
512.793 322.294 517.202 317.923 522.524 315.495 cv
520.048 316.893 517.741 318.591 515.67 320.539 cv
513.571 322.513 511.642 324.893 511.17 327.735 cv
511.133 327.957 511.11 328.199 511.226 328.391 cv
511.512 328.862 512.238 328.587 512.672 328.248 cv
513.522 327.583 524.458 318.701 526.502 318.936 cv
523.785 319.962 514.097 327.823 514.057 328.66 cv
514.038 329.06 514.115 329.481 514.366 329.792 cv
514.709 330.218 515.318 330.354 515.858 330.265 cv
516.398 330.176 516.885 329.897 517.353 329.613 cv
520.48 327.714 523.344 325.332 526.722 323.926 cv
528.409 323.224 530.469 322.819 531.969 323.863 cv
528.955 325.005 526.135 326.667 523.772 328.839 cv
523.395 329.185 523.078 329.594 522.828 330.042 cv
522.457 330.707 522.038 331.669 522.554 332.218 cv
523.397 333.116 524.11 332.664 524.834 332.241 cv
527.733 330.329 530.695 328.753 533.793 327.519 cv
534.755 327.135 535.901 326.8 536.773 327.358 cv
537.528 327.841 541.178 330.107 548.678 330.496 cv
551.238 330.629 553.706 331.295 556.906 332.177 cv
599.059 343.793 611.651 348.428 621.862 344.038 cv
623.861 343.178 624.535 342.129 623.869 338.697 cv
622.089 329.533 620.35 324.325 604.692 320.588 cv
cp
1 1 1 rgb
f
535.688 326.533 mo
536.163 326.533 536.632 326.637 537.06 326.911 cv
538.312 327.713 541.953 329.616 548.706 329.966 cv
551.383 330.105 554.008 330.828 557.047 331.665 cv
562.666 333.214 567.834 334.659 572.393 335.934 cv
602.748 344.422 612.975 347.282 621.652 343.55 cv
623.295 342.844 623.998 342.145 623.348 338.798 cv
621.582 329.704 619.946 324.783 604.615 321.115 cv
588.548 320.219 572.392 319.109 556.768 318.036 cv
556.751 318.035 556.734 318.033 556.718 318.03 cv
555.67 317.857 551.5 317.255 548.741 316.856 cv
547.729 316.709 546.889 316.588 546.423 316.52 cv
544.737 316.272 543.176 315.62 542.005 315.079 cv
534.873 311.788 526.927 308.888 525.245 309.829 cv
525.21 309.848 525.174 309.863 525.135 309.875 cv
520.337 311.285 515.56 314.817 511.684 319.819 cv
509.483 322.658 508.295 326.489 508.69 327.022 cv
509.01 327.303 509.513 327.485 509.895 327.246 cv
512.422 321.915 516.937 317.461 522.303 315.012 cv
522.563 314.893 522.867 315.001 522.997 315.254 cv
523.125 315.507 523.032 315.817 522.784 315.957 cv
520.346 317.335 518.075 319.006 516.033 320.925 cv
513.451 323.354 512.072 325.546 511.693 327.822 cv
511.657 328.039 511.672 328.1 511.68 328.116 cv
511.739 328.135 512.048 328.063 512.345 327.83 cv
512.41 327.779 512.534 327.68 512.71 327.54 cv
524.458 318.165 526.04 318.348 526.563 318.409 cv
526.806 318.437 526.998 318.628 527.028 318.871 cv
527.058 319.114 526.919 319.346 526.689 319.432 cv
524.119 320.403 515.286 327.559 514.584 328.758 cv
514.582 329.052 514.65 329.299 514.779 329.459 cv
514.998 329.731 515.436 329.797 515.772 329.742 cv
516.214 329.668 516.641 329.424 517.077 329.16 cv
518.108 328.534 519.131 327.84 520.121 327.169 cv
522.134 325.805 524.216 324.394 526.518 323.436 cv
528.164 322.751 530.499 322.193 532.272 323.427 cv
532.434 323.54 532.52 323.732 532.496 323.928 cv
532.472 324.123 532.341 324.289 532.157 324.359 cv
529.079 325.526 526.378 327.164 524.131 329.229 cv
523.802 329.532 523.519 329.892 523.292 330.3 cv
522.862 331.069 522.734 331.635 522.941 331.855 cv
523.453 332.401 523.774 332.247 524.514 331.814 cv
524.566 331.783 li
527.544 329.819 530.506 328.257 533.596 327.026 cv
534.228 326.775 534.965 326.533 535.688 326.533 cv
cp
613.307 346.22 mo
605.238 346.22 593.74 343.005 572.107 336.956 cv
567.549 335.681 562.383 334.236 556.765 332.689 cv
553.785 331.867 551.212 331.158 548.651 331.025 cv
541.644 330.662 537.81 328.652 536.487 327.805 cv
535.815 327.374 534.799 327.689 533.989 328.012 cv
530.966 329.216 528.067 330.745 525.126 332.684 cv
525.05 332.73 li
524.345 333.142 523.279 333.766 522.167 332.582 cv
521.311 331.669 522.104 330.249 522.365 329.783 cv
522.648 329.276 523.001 328.827 523.414 328.448 cv
525.469 326.559 527.883 325.014 530.603 323.843 cv
529.391 323.579 527.995 323.971 526.925 324.416 cv
524.722 325.333 522.686 326.713 520.716 328.048 cv
519.716 328.726 518.681 329.427 517.628 330.067 cv
517.121 330.375 516.573 330.684 515.945 330.788 cv
515.154 330.918 514.388 330.665 513.953 330.125 cv
513.646 329.745 513.498 329.229 513.527 328.635 cv
513.534 328.481 513.659 328.251 513.9 327.949 cv
513.726 328.087 513.55 328.227 513.372 328.37 cv
513.192 328.513 513.065 328.614 512.999 328.666 cv
512.616 328.966 512.017 329.249 511.482 329.153 cv
511.177 329.097 510.932 328.929 510.772 328.666 cv
510.646 328.458 510.61 328.234 510.609 328.041 cv
509.864 328.62 508.792 328.529 507.979 327.808 cv
506.594 326.578 509.082 321.443 510.845 319.168 cv
514.901 313.935 519.72 310.375 524.785 308.872 cv
527.504 307.502 538.026 312.074 542.449 314.116 cv
543.556 314.626 545.025 315.242 546.577 315.47 cv
547.042 315.538 547.882 315.659 548.893 315.805 cv
551.635 316.202 555.767 316.799 556.865 316.979 cv
572.494 318.053 588.655 319.163 604.721 320.058 cv
604.753 320.06 604.784 320.065 604.815 320.072 cv
620.791 323.885 622.588 329.319 624.389 338.596 cv
625.059 342.042 624.495 343.482 622.071 344.525 cv
619.422 345.664 616.66 346.22 613.307 346.22 cv
cp
0 0 0 rgb
f
499.46 341.117 mo
512.654 341.4 525.848 341.683 539.043 341.966 cv
539.094 335.243 li
495.037 334.167 li
499.46 341.117 li
cp
f
386.983 279.729 mo
473.031 280.201 li
502.689 341.116 li
417.449 340.901 li
386.983 279.729 li
cp
1 1 1 rgb
f
417.777 340.371 mo
501.84 340.583 li
472.698 280.73 li
387.842 280.265 li
417.777 340.371 li
cp
502.689 341.646 mo
502.689 341.646 502.688 341.646 502.688 341.646 cv
417.447 341.431 li
417.246 341.431 417.063 341.317 416.974 341.137 cv
386.508 279.966 li
386.426 279.801 386.435 279.605 386.533 279.449 cv
386.63 279.293 386.8 279.199 386.983 279.199 cv
386.984 279.199 386.985 279.199 386.986 279.199 cv
473.034 279.67 li
473.236 279.671 473.42 279.787 473.508 279.969 cv
503.166 340.884 li
503.247 341.048 503.236 341.242 503.139 341.397 cv
503.042 341.552 502.872 341.646 502.689 341.646 cv
cp
0 0 0 rgb
f
441.41 304.55 mo
438.967 304.311 436.298 304.964 435.303 307.207 cv
434.308 309.451 435.071 312.262 436.884 313.917 cv
438.696 315.571 441.377 316.104 443.771 315.565 cv
445.064 315.274 446.346 314.647 447.09 313.55 cv
447.607 312.789 447.826 311.854 447.832 310.934 cv
447.853 307.913 446.475 305.047 441.41 304.55 cv
cp
1 1 1 rgb
f
440.489 305.037 mo
439.057 305.037 436.699 305.37 435.788 307.422 cv
434.914 309.392 435.525 311.959 437.241 313.525 cv
438.849 314.993 441.307 315.576 443.655 315.048 cv
445.008 314.743 446.072 314.105 446.651 313.253 cv
447.181 312.47 447.298 311.559 447.302 310.931 cv
447.326 307.387 445.381 305.473 441.358 305.079 cv
441.358 305.079 li
441.153 305.058 440.85 305.037 440.489 305.037 cv
cp
441.939 316.299 mo
439.902 316.299 437.937 315.597 436.526 314.309 cv
434.483 312.444 433.765 309.367 434.818 306.992 cv
435.782 304.819 438.269 303.711 441.462 304.022 cv
447.2 304.585 448.382 308.094 448.363 310.938 cv
448.355 312.048 448.067 313.055 447.529 313.848 cv
446.593 315.229 445.032 315.825 443.887 316.083 cv
443.241 316.228 442.586 316.299 441.939 316.299 cv
cp
0 0 0 rgb
f
595.207 320.567 mo
594.984 320.567 594.777 320.425 594.703 320.203 cv
588.716 302.074 585.329 290.607 585.329 265.749 cv
585.329 265.456 585.566 265.218 585.859 265.218 cv
586.152 265.218 586.39 265.456 586.39 265.749 cv
586.39 290.444 589.758 301.845 595.711 319.87 cv
595.802 320.148 595.651 320.448 595.373 320.54 cv
595.318 320.558 595.261 320.567 595.207 320.567 cv
cp
f
522.446 307.32 mo
522.279 307.32 522.113 307.241 522.01 307.092 cv
514.296 295.996 516.383 287.866 518.401 280.004 cv
519.412 276.068 520.457 271.997 520.292 267.544 cv
520.281 267.251 520.509 267.005 520.802 266.994 cv
521.099 266.976 521.341 267.212 521.352 267.505 cv
521.523 272.112 520.458 276.258 519.429 280.268 cv
517.38 288.25 515.445 295.789 522.881 306.487 cv
523.049 306.727 522.989 307.058 522.749 307.225 cv
522.657 307.289 522.551 307.32 522.446 307.32 cv
cp
f
547.602 280.025 mo
539.789 280.025 531.97 279.319 524.378 277.417 cv
524.284 277.393 524.226 277.297 524.25 277.202 cv
524.274 277.107 524.37 277.05 524.464 277.074 cv
543.729 281.902 564.51 278.992 582.846 276.425 cv
582.939 276.412 583.032 276.479 583.045 276.576 cv
583.059 276.673 582.991 276.762 582.895 276.776 cv
571.741 278.337 559.681 280.025 547.602 280.025 cv
cp
f
554.645 295.043 mo
543.165 295.043 531.682 293.682 520.57 290.966 cv
520.476 290.943 520.417 290.847 520.441 290.752 cv
520.464 290.658 520.56 290.6 520.655 290.623 cv
541.048 295.607 562.7 296.018 583.268 291.811 cv
583.365 291.791 583.458 291.853 583.477 291.949 cv
583.497 292.044 583.435 292.138 583.34 292.158 cv
573.927 294.083 564.286 295.043 554.645 295.043 cv
cp
f
626.791 325.535 mo
626.741 325.535 626.691 325.513 626.657 325.472 cv
619.447 316.986 607.696 312.711 596.721 314.586 cv
596.628 314.604 596.534 314.538 596.517 314.442 cv
596.501 314.345 596.565 314.254 596.662 314.238 cv
607.759 312.345 619.638 316.664 626.926 325.243 cv
626.989 325.318 626.98 325.429 626.906 325.492 cv
626.872 325.521 626.832 325.535 626.791 325.535 cv
cp
f
625.478 317.707 mo
625.456 317.707 625.434 317.703 625.412 317.694 cv
624.245 317.225 623.296 316.376 622.378 315.555 cv
622.057 315.269 621.726 314.973 621.392 314.699 cv
619.347 313.023 616.883 311.932 614.267 311.544 cv
614.17 311.53 614.103 311.441 614.118 311.344 cv
614.132 311.247 614.224 311.181 614.319 311.195 cv
616.998 311.592 619.522 312.709 621.617 314.426 cv
621.956 314.704 622.29 315.003 622.613 315.291 cv
623.509 316.092 624.435 316.92 625.544 317.366 cv
625.634 317.402 625.678 317.505 625.642 317.596 cv
625.614 317.665 625.548 317.707 625.478 317.707 cv
cp
f
625.511 341.399 mo
625.219 341.399 624.982 341.163 624.981 340.871 cv
624.979 340.578 625.216 340.339 625.508 340.338 cv
646.478 340.233 666.939 340.233 688.06 340.338 cv
688.353 340.339 688.59 340.578 688.588 340.871 cv
688.587 341.163 688.35 341.399 688.058 341.399 cv
688.057 341.399 688.056 341.399 688.055 341.399 cv
666.938 341.294 646.48 341.294 625.514 341.399 cv
625.513 341.399 625.512 341.399 625.511 341.399 cv
cp
f
588.11 341.613 mo
588.11 341.613 li
407.544 341.508 224.447 341.508 43.9036 341.613 cv
43.6105 341.613 43.3729 341.375 43.3727 341.082 cv
43.3725 340.789 43.61 340.552 43.9029 340.552 cv
224.446 340.447 407.544 340.447 588.11 340.552 cv
588.403 340.552 588.641 340.789 588.641 341.082 cv
588.64 341.375 588.403 341.613 588.11 341.613 cv
cp
f
359.602 341.36 mo
359.588 341.36 359.574 341.359 359.56 341.358 cv
359.268 341.336 359.05 341.081 359.072 340.789 cv
359.762 331.812 358.659 317.998 357.594 304.639 cv
357.101 298.472 356.637 292.646 356.344 287.327 cv
356.328 287.035 356.553 286.784 356.845 286.768 cv
357.131 286.751 357.388 286.976 357.404 287.269 cv
357.695 292.575 358.16 298.394 358.651 304.555 cv
359.72 317.954 360.826 331.81 360.13 340.87 cv
360.109 341.148 359.876 341.36 359.602 341.36 cv
cp
f
207.835 198.287 mo
205.834 206.876 205.81 218.838 205.81 218.838 cv
210.852 220.891 li
210.852 220.891 215.621 240.5 185.563 234.491 cv
179.724 233.324 162.817 220.484 162.817 220.484 cv
176.186 216.661 li
176.186 216.661 177.468 197.227 177.977 187.572 cv
185.003 190.845 199.405 195.655 207.835 198.287 cv
cp
1 1 1 rgb
f
163.991 220.701 mo
167.486 223.301 180.753 232.988 185.667 233.971 cv
196.527 236.142 203.978 235.22 207.814 231.23 cv
211.288 227.617 210.608 222.48 210.388 221.275 cv
205.61 219.329 li
205.41 219.248 205.279 219.053 205.28 218.837 cv
205.28 218.719 205.325 207.158 207.209 198.647 cv
197.969 195.751 185.283 191.445 178.466 188.379 cv
177.936 198.16 176.728 216.507 176.716 216.696 cv
176.701 216.92 176.547 217.11 176.332 217.172 cv
163.991 220.701 li
cp
195.817 236.17 mo
192.779 236.17 189.325 235.784 185.459 235.011 cv
179.568 233.834 163.191 221.434 162.496 220.907 cv
162.337 220.785 162.259 220.584 162.296 220.387 cv
162.333 220.189 162.478 220.029 162.671 219.974 cv
175.681 216.254 li
175.861 213.51 176.983 196.35 177.447 187.544 cv
177.457 187.368 177.553 187.208 177.704 187.117 cv
177.855 187.027 178.042 187.017 178.201 187.091 cv
184.874 190.2 198.421 194.792 207.993 197.781 cv
208.259 197.863 208.415 198.137 208.352 198.407 cv
206.58 206.015 206.368 216.434 206.344 218.482 cv
211.052 220.399 li
211.21 220.464 211.327 220.6 211.367 220.766 cv
211.433 221.036 212.927 227.435 208.587 231.958 cv
205.895 234.763 201.617 236.169 195.817 236.17 cv
cp
0 0 0 rgb
f
193.13 126.195 mo
179.675 125.667 166.573 134.335 167.594 141.391 cv
161.168 139.5 153.807 151.821 154.063 157.592 cv
154.393 165.007 168.84 189.454 171.923 193.343 cv
173.371 195.17 174.414 196.008 176.908 196.759 cv
176.745 194.72 178.706 193.412 178.742 191.357 cv
178.786 188.828 175.38 184.413 178.054 184.479 cv
190.781 184.791 189.148 187.671 213.312 164.159 cv
216.391 161.163 218.412 153.917 219.091 148.451 cv
219.753 143.13 215.941 127.089 193.13 126.195 cv
cp
f
166.243 141.729 mo
164.613 141.729 163.09 142.62 162.012 143.464 cv
157.705 146.838 154.432 153.939 154.594 157.569 cv
154.917 164.85 169.184 189.035 172.338 193.014 cv
173.544 194.534 174.436 195.351 176.4 196.037 cv
176.517 195.165 176.936 194.426 177.344 193.705 cv
177.782 192.931 178.196 192.201 178.211 191.347 cv
178.226 190.478 177.738 189.241 177.307 188.15 cv
176.702 186.618 176.179 185.296 176.737 184.497 cv
177.001 184.118 177.445 183.936 178.067 183.949 cv
179.435 183.982 180.649 184.046 181.72 184.102 cv
190.599 184.569 191.527 184.616 212.942 163.779 cv
215.857 160.942 217.866 154.004 218.565 148.385 cv
218.851 146.083 218.253 140.387 213.942 135.31 cv
209.415 129.978 202.406 127.089 193.11 126.725 cv
183.2 126.332 174.512 130.808 170.623 135.127 cv
168.707 137.254 167.841 139.394 168.119 141.315 cv
168.145 141.494 168.078 141.674 167.942 141.792 cv
167.805 141.911 167.618 141.951 167.444 141.9 cv
167.041 141.781 166.639 141.729 166.243 141.729 cv
cp
176.908 197.289 mo
176.857 197.289 176.805 197.282 176.755 197.267 cv
174.059 196.455 172.957 195.502 171.507 193.673 cv
168.314 189.645 153.865 165.078 153.534 157.616 cv
153.338 153.216 157.14 145.932 161.358 142.628 cv
163.29 141.115 165.227 140.465 167.008 140.722 cv
166.969 138.689 167.935 136.526 169.834 134.417 cv
173.884 129.92 182.911 125.266 193.151 125.664 cv
202.621 126.036 210.09 129.134 214.751 134.623 cv
219.301 139.981 219.924 146.054 219.618 148.516 cv
218.896 154.318 216.781 161.523 213.681 164.54 cv
191.935 185.7 190.963 185.65 181.664 185.162 cv
180.6 185.106 179.394 185.043 178.041 185.01 cv
177.817 184.999 177.651 185.04 177.607 185.105 cv
177.375 185.436 177.928 186.835 178.293 187.76 cv
178.784 189.001 179.291 190.285 179.272 191.366 cv
179.252 192.489 178.751 193.373 178.267 194.228 cv
177.803 195.047 177.365 195.82 177.437 196.717 cv
177.451 196.891 177.378 197.062 177.241 197.171 cv
177.146 197.249 177.028 197.289 176.908 197.289 cv
cp
f
214.089 160.34 mo
214.067 160.192 209.483 160.776 205.606 155.266 cv
204.848 158.188 204.446 161.242 198.453 160.958 cv
195.54 160.82 191.274 156.079 190.197 153.235 cv
190.197 153.235 196.567 151.703 168.873 163.882 cv
168.908 164.451 168.937 165.006 168.953 165.536 cv
169.012 167.5 169.118 171.775 170.183 175.958 cv
166.534 173.726 163.903 174.569 162.176 176.91 cv
160.45 179.25 161.085 182.457 163.355 184.184 cv
165.626 185.912 169.211 186.172 172.171 185.085 cv
173.71 190.114 176.381 200.245 180.613 204.282 cv
185.115 208.574 192.286 210.701 199.255 209.81 cv
206.223 208.919 212.805 205.034 216.362 199.71 cv
220.402 193.664 220.45 186.43 219.084 179.855 cv
217.719 173.28 215.071 166.986 214.089 160.34 cv
cp
1 1 1 rgb
f
172.171 184.554 mo
172.252 184.554 172.333 184.573 172.407 184.609 cv
172.538 184.674 172.636 184.79 172.679 184.93 cv
172.837 185.448 173.008 186.02 173.191 186.635 cv
174.722 191.774 177.285 200.374 180.98 203.898 cv
185.379 208.093 192.356 210.158 199.187 209.284 cv
206.026 208.41 212.437 204.628 215.921 199.416 cv
219.304 194.352 220.194 187.807 218.565 179.963 cv
217.975 177.121 217.126 174.274 216.305 171.521 cv
215.271 168.052 214.202 164.469 213.625 160.82 cv
210.606 160.583 207.995 159.121 205.847 156.467 cv
205.167 159.065 204.096 161.754 198.428 161.488 cv
195.634 161.355 191.788 157.436 190.182 154.458 cv
189.577 154.826 188.684 155.308 187.377 155.967 cv
183.796 157.775 177.757 160.551 169.425 164.219 cv
169.452 164.705 169.472 165.133 169.484 165.521 cv
169.488 165.653 li
169.547 167.646 169.67 171.792 170.697 175.827 cv
170.75 176.037 170.671 176.257 170.497 176.385 cv
170.324 176.514 170.089 176.523 169.906 176.411 cv
166.841 174.536 164.384 174.81 162.603 177.224 cv
161.088 179.279 161.559 182.152 163.677 183.762 cv
165.733 185.327 169.073 185.658 171.988 184.587 cv
172.048 184.565 172.109 184.554 172.171 184.554 cv
cp
196.084 210.542 mo
190.034 210.542 184.174 208.411 180.247 204.666 cv
176.348 200.947 173.836 192.517 172.174 186.938 cv
172.051 186.526 171.934 186.133 171.822 185.762 cv
168.71 186.727 165.24 186.285 163.034 184.607 cv
160.45 182.641 159.886 179.122 161.75 176.594 cv
163.638 174.035 166.325 173.461 169.396 174.926 cv
168.59 171.17 168.482 167.526 168.427 165.685 cv
168.423 165.552 li
168.409 165.081 168.383 164.546 168.343 163.915 cv
168.33 163.693 168.456 163.485 168.659 163.396 cv
183.546 156.85 188.253 154.401 189.728 153.493 cv
189.719 153.469 189.71 153.446 189.701 153.423 cv
189.647 153.28 189.657 153.121 189.729 152.987 cv
189.8 152.852 189.925 152.755 190.074 152.719 cv
190.334 152.656 191.127 152.466 191.329 153.066 cv
191.41 153.304 191.434 153.504 191.057 153.844 cv
192.471 156.548 196.102 160.315 198.478 160.428 cv
203.698 160.676 204.284 158.34 204.964 155.635 cv
205.006 155.467 205.049 155.3 205.092 155.133 cv
205.144 154.933 205.307 154.781 205.511 154.744 cv
205.714 154.705 205.92 154.791 206.039 154.96 cv
208.147 157.956 210.775 159.575 213.849 159.772 cv
214.127 159.79 214.548 159.817 214.613 160.262 cv
214.613 160.262 li
215.162 163.975 216.26 167.657 217.322 171.218 cv
218.149 173.992 219.004 176.861 219.604 179.747 cv
221.293 187.88 220.35 194.696 216.803 200.005 cv
213.154 205.466 206.456 209.424 199.322 210.336 cv
198.243 210.474 197.16 210.542 196.084 210.542 cv
cp
0 0 0 rgb
f
209.314 170.859 mo
209.288 170.028 208.556 169.377 207.679 169.404 cv
206.801 169.432 206.11 170.128 206.136 170.959 cv
206.161 171.79 206.893 172.442 207.771 172.414 cv
208.648 172.387 209.339 171.691 209.314 170.859 cv
cp
f
187.561 175.215 mo
187.535 174.384 186.803 173.732 185.926 173.76 cv
185.048 173.787 184.357 174.483 184.383 175.314 cv
184.408 176.145 185.14 176.797 186.018 176.77 cv
186.895 176.742 187.586 176.046 187.561 175.215 cv
cp
f
196.599 200.057 mo
194.611 200.057 192.623 199.359 191.117 198.04 cv
190.896 197.847 190.874 197.512 191.067 197.291 cv
191.26 197.071 191.595 197.049 191.816 197.242 cv
193.844 199.018 196.876 199.501 199.36 198.445 cv
199.63 198.329 199.941 198.455 200.056 198.725 cv
200.171 198.995 200.045 199.306 199.775 199.421 cv
198.769 199.849 197.684 200.057 196.599 200.057 cv
cp
f
199.282 191.27 mo
199.262 191.27 199.242 191.27 199.222 191.27 cv
197.543 191.255 196.004 190.611 195.001 189.502 cv
194.804 189.285 194.821 188.949 195.038 188.753 cv
195.256 188.556 195.591 188.572 195.788 188.79 cv
196.581 189.667 197.868 190.197 199.231 190.209 cv
200.431 190.203 201.719 189.864 203.058 189.153 cv
203.516 188.91 204.023 188.602 204.309 188.158 cv
204.657 187.618 204.689 186.816 204.395 186.015 cv
204.149 185.345 203.734 184.743 203.295 184.106 cv
203.084 183.799 li
200.543 180.066 198.871 175.73 198.247 171.259 cv
198.206 170.969 198.409 170.701 198.699 170.66 cv
198.991 170.619 199.257 170.822 199.298 171.112 cv
199.899 175.423 201.512 179.603 203.961 183.202 cv
204.168 183.504 li
204.626 184.168 205.099 184.854 205.391 185.65 cv
205.805 186.778 205.736 187.902 205.201 188.733 cv
204.783 189.381 204.135 189.783 203.555 190.091 cv
202.08 190.874 200.643 191.27 199.282 191.27 cv
cp
f
171.022 179.82 mo
170.791 179.82 170.578 179.667 170.512 179.433 cv
170.006 177.639 169.776 176.681 169.359 174.94 cv
169.29 174.656 169.466 174.369 169.751 174.301 cv
170.035 174.234 170.322 174.408 170.39 174.693 cv
170.805 176.42 171.033 177.372 171.533 179.145 cv
171.613 179.427 171.449 179.72 171.167 179.8 cv
171.119 179.813 171.07 179.82 171.022 179.82 cv
cp
f
171.002 294.479 mo
174.447 264.318 174.345 234.496 171.868 217.333 cv
160.069 218.09 139.94 221.149 131.45 228.236 cv
113.761 243.001 113.73 266.572 109.552 288.53 cv
105.707 308.731 103.954 328.642 109.363 335.589 cv
109.88 336.253 113.853 338.884 114.682 338.737 cv
117.179 338.294 134.416 320.248 134.416 325.623 cv
134.416 336.462 133.053 340.829 133.053 340.829 cv
162.871 340.829 li
162.871 340.829 169.828 304.755 171.002 294.479 cv
cp
1 .831373 .180392 rgb
f
133.739 340.299 mo
162.433 340.299 li
163.222 336.189 169.386 303.953 170.475 294.419 cv
171.002 294.479 li
170.475 294.419 li
173.663 266.507 174.025 236.558 171.412 217.895 cv
157.867 218.815 139.558 222.16 131.79 228.644 cv
117.578 240.507 114.934 257.814 112.136 276.137 cv
111.509 280.246 110.86 284.496 110.073 288.629 cv
105.37 313.341 105.269 329.467 109.781 335.263 cv
110.285 335.909 113.922 338.212 114.604 338.212 cv
114.605 338.212 114.607 338.212 114.608 338.212 cv
115.348 338.079 118.521 335.319 121.321 332.883 cv
127.947 327.118 132.423 323.402 134.208 324.212 cv
134.545 324.366 134.947 324.735 134.947 325.623 cv
134.947 334.156 134.115 338.685 133.739 340.299 cv
cp
162.871 341.36 mo
133.053 341.36 li
132.885 341.36 132.726 341.279 132.626 341.144 cv
132.526 341.008 132.497 340.833 132.546 340.672 cv
132.56 340.629 133.885 336.222 133.885 325.623 cv
133.885 325.382 133.84 325.211 133.768 325.178 cv
132.474 324.589 125.928 330.282 122.017 333.684 cv
118.061 337.125 115.774 339.082 114.775 339.259 cv
113.584 339.47 109.395 336.494 108.944 335.915 cv
103 328.279 105.71 305.878 109.03 288.431 cv
109.813 284.316 110.461 280.077 111.087 275.976 cv
113.792 258.264 116.589 239.95 131.11 227.829 cv
139.169 221.103 158.084 217.685 171.834 216.803 cv
172.108 216.786 172.354 216.983 172.393 217.257 cv
175.093 235.966 174.754 266.301 171.529 294.539 cv
171.529 294.539 li
170.367 304.718 163.462 340.569 163.392 340.93 cv
163.344 341.18 163.126 341.36 162.871 341.36 cv
cp
0 0 0 rgb
f
261.035 325.159 mo
270.264 324.031 278.547 289.692 264.546 287.298 cv
262.614 286.968 254.464 254.232 238.058 233.588 cv
229.322 222.595 210.681 219.905 208.001 218.838 cv
220.037 239.657 201.016 340.829 201.016 340.829 cv
225.93 340.879 li
225.93 340.879 231.583 303.614 232.641 295.016 cv
233.444 299.884 239.722 310.915 246.822 319.349 cv
249.467 322.49 251.84 321.878 253.488 323.526 cv
255.396 325.434 258.917 325.417 261.035 325.159 cv
cp
1 .831373 .180392 rgb
f
201.654 340.3 mo
225.474 340.348 li
226.121 336.075 231.132 302.932 232.115 294.951 cv
232.147 294.689 232.367 294.491 232.63 294.486 cv
232.896 294.493 233.122 294.67 233.165 294.93 cv
233.984 299.899 240.424 310.926 247.228 319.007 cv
248.7 320.756 250.09 321.273 251.317 321.729 cv
252.237 322.071 253.107 322.395 253.863 323.151 cv
255.753 325.04 259.463 324.816 260.971 324.632 cv
265.918 324.028 271.224 312.271 271.486 301.336 cv
271.574 297.649 271.066 288.951 264.457 287.821 cv
263.624 287.679 263.027 286.252 260.353 279.034 cv
256.339 268.203 248.868 248.043 237.643 233.918 cv
230.563 225.009 216.607 221.574 210.648 220.107 cv
210.037 219.957 209.502 219.826 209.053 219.708 cv
213.533 229.218 213.701 252.073 209.549 287.702 cv
206.615 312.885 202.404 336.221 201.654 340.3 cv
cp
225.93 341.41 mo
225.93 341.41 225.929 341.41 225.929 341.41 cv
201.015 341.36 li
200.858 341.359 200.708 341.289 200.608 341.167 cv
200.507 341.046 200.466 340.886 200.495 340.731 cv
200.685 339.722 219.343 239.515 207.542 219.103 cv
207.429 218.908 207.452 218.662 207.6 218.491 cv
207.748 218.32 207.988 218.261 208.198 218.345 cv
208.637 218.52 209.636 218.766 210.902 219.077 cv
216.966 220.57 231.169 224.065 238.474 233.258 cv
249.804 247.516 257.313 267.779 261.347 278.665 cv
262.799 282.582 264.171 286.284 264.708 286.788 cv
269.891 287.719 272.746 293.025 272.547 301.361 cv
272.297 311.776 267.136 324.948 261.1 325.685 cv
261.035 325.159 li
261.1 325.685 li
259.036 325.936 255.253 326.041 253.113 323.901 cv
252.52 323.309 251.791 323.037 250.947 322.723 cv
249.665 322.246 248.069 321.653 246.416 319.69 cv
240.51 312.676 234.866 303.424 232.827 297.687 cv
231.245 309.362 226.507 340.617 226.455 340.959 cv
226.415 341.219 226.192 341.41 225.93 341.41 cv
cp
0 0 0 rgb
f
139.808 318.712 mo
139.764 318.712 139.719 318.707 139.674 318.695 cv
139.391 318.622 139.22 318.332 139.294 318.049 cv
141.741 308.611 143.227 298.845 145.283 285.33 cv
146.683 276.134 148.424 264.689 150.952 250.177 cv
151.002 249.888 151.276 249.692 151.565 249.745 cv
151.854 249.795 152.047 250.07 151.997 250.359 cv
149.471 264.86 147.731 276.298 146.332 285.489 cv
144.271 299.036 142.781 308.824 140.321 318.315 cv
140.259 318.554 140.044 318.712 139.808 318.712 cv
cp
f
232.288 294.621 mo
232.287 294.621 232.287 294.621 232.286 294.622 cv
232.287 294.621 232.287 294.621 232.288 294.621 cv
cp
232.286 294.622 mo
232.286 294.622 232.286 294.622 232.286 294.622 cv
232.286 294.622 232.286 294.622 232.286 294.622 cv
cp
232.641 295.547 mo
232.496 295.547 232.35 295.487 232.246 295.37 cv
232.099 295.206 232.073 294.976 232.162 294.789 cv
232.375 293.915 233.114 285.062 233.895 275.697 cv
234.379 269.886 234.928 263.3 235.434 257.639 cv
235.46 257.347 235.72 257.132 236.009 257.158 cv
236.301 257.183 236.517 257.441 236.49 257.733 cv
235.986 263.391 235.436 269.976 234.952 275.785 cv
233.341 295.102 233.288 295.149 232.995 295.412 cv
232.893 295.502 232.767 295.547 232.641 295.547 cv
cp
f
108.581 318.359 mo
108.535 318.359 108.49 318.341 108.455 318.306 cv
108.386 318.237 108.387 318.125 108.456 318.056 cv
115.272 311.277 126.379 307.864 136.752 309.359 cv
136.849 309.373 136.916 309.463 136.902 309.56 cv
136.888 309.656 136.799 309.723 136.701 309.709 cv
126.434 308.229 115.445 311.604 108.705 318.307 cv
108.671 318.341 108.626 318.359 108.581 318.359 cv
cp
f
109.425 321.618 mo
109.355 321.618 109.289 321.576 109.261 321.507 cv
109.225 321.416 109.269 321.313 109.359 321.277 cv
110.534 320.804 111.515 319.928 112.463 319.081 cv
112.805 318.775 113.159 318.458 113.518 318.164 cv
115.733 316.349 118.402 315.167 121.236 314.747 cv
121.333 314.734 121.423 314.8 121.437 314.896 cv
121.451 314.993 121.384 315.083 121.288 315.097 cv
118.517 315.508 115.908 316.663 113.742 318.438 cv
113.389 318.728 113.038 319.041 112.699 319.344 cv
111.728 320.212 110.724 321.109 109.491 321.605 cv
109.47 321.614 109.447 321.618 109.425 321.618 cv
cp
f
195.319 242.592 mo
189.841 242.592 184.358 241.337 179.448 238.913 cv
179.36 238.87 179.324 238.764 179.368 238.676 cv
179.411 238.589 179.516 238.553 179.604 238.596 cv
186.148 241.826 193.719 242.958 200.921 241.789 cv
204.736 241.168 207.417 239.932 209.117 238.011 cv
209.182 237.937 209.295 237.93 209.367 237.995 cv
209.44 238.06 209.447 238.171 209.382 238.245 cv
207.626 240.23 204.877 241.504 200.978 242.137 cv
199.108 242.441 197.214 242.592 195.319 242.592 cv
cp
f
300.974 259.823 mo
306.851 253.945 304.39 249.881 310.978 242.101 cv
313.722 238.861 316.368 236.054 318.796 233.492 cv
320.07 232.148 321.218 230.417 322.531 231.525 cv
324.096 232.846 322.376 236.415 321.597 237.561 cv
318.575 242.006 318.806 243.467 318.946 245.113 cv
324.134 241.109 332.183 235.776 338.418 233.757 cv
338.884 233.606 340.088 233.691 340.383 234.093 cv
340.801 234.661 340.405 236.121 339.491 236.771 cv
335.78 239.409 330.325 243.218 326.614 245.855 cv
333.327 241.596 342.148 236.205 343.557 237.965 cv
344.001 238.52 343.753 240.024 342.809 240.708 cv
338.78 243.625 333.481 247.265 329.452 250.182 cv
332.904 247.232 343.594 240.94 344.437 243.188 cv
345.283 245.444 335.41 251.671 331.239 254.202 cv
334.612 252.102 342.511 247.159 343.403 249.252 cv
344.076 250.829 341.707 252.272 340.909 252.891 cv
334.617 257.773 327.197 264.457 320.323 266.912 cv
318.682 267.498 316.187 267.766 314.779 268.793 cv
313.293 269.878 312.492 271.158 311.277 272.541 cv
277.452 311.066 266.74 324.15 260.645 322.853 cv
255.53 321.763 259.337 300.914 264.546 287.298 cv
267.317 287.402 288.504 272.293 300.974 259.823 cv
cp
1 1 1 rgb
f
264.93 287.783 mo
260.341 299.91 257.104 316.731 259.609 321.34 cv
259.919 321.91 260.294 322.235 260.755 322.334 cv
265.971 323.437 275.769 312.263 301.948 282.378 cv
304.732 279.2 307.703 275.808 310.879 272.191 cv
311.213 271.81 311.519 271.433 311.815 271.068 cv
312.6 270.1 313.342 269.186 314.466 268.365 cv
315.48 267.625 316.915 267.269 318.304 266.926 cv
318.977 266.76 319.612 266.603 320.145 266.412 cv
325.619 264.457 331.586 259.665 336.851 255.437 cv
338.15 254.394 339.376 253.409 340.584 252.471 cv
340.683 252.395 340.806 252.305 340.944 252.205 cv
341.782 251.595 343.341 250.46 342.915 249.46 cv
342.895 249.412 342.862 249.357 342.736 249.317 cv
341.332 248.877 336.693 251.498 333.582 253.382 cv
332.93 253.79 332.241 254.215 331.514 254.656 cv
331.264 254.807 330.94 254.729 330.787 254.48 cv
330.634 254.232 330.711 253.907 330.958 253.752 cv
331.048 253.696 li
331.669 253.31 332.287 252.928 332.899 252.557 cv
344.289 245.438 344.015 243.573 343.941 243.375 cv
343.932 243.352 343.916 243.309 343.783 243.275 cv
342.414 242.92 337.8 245.205 333.979 247.608 cv
332.503 248.649 331.059 249.674 329.763 250.612 cv
329.533 250.78 329.211 250.734 329.035 250.511 cv
328.859 250.287 328.891 249.964 329.107 249.779 cv
330.058 248.967 331.602 247.862 333.358 246.747 cv
334.177 246.17 335.005 245.588 335.823 245.012 cv
338.116 243.401 340.486 241.735 342.498 240.278 cv
342.947 239.953 343.167 239.389 343.224 238.97 cv
343.269 238.634 343.214 238.385 343.143 238.297 cv
343.032 238.158 342.228 237.594 337.318 240.124 cv
334.118 241.774 330.255 244.174 326.898 246.303 cv
326.656 246.458 326.334 246.39 326.174 246.151 cv
326.013 245.913 326.072 245.589 326.307 245.423 cv
328.157 244.108 330.441 242.502 332.726 240.895 cv
335.023 239.279 337.323 237.661 339.184 236.339 cv
339.646 236.01 339.926 235.407 339.998 234.956 cv
340.05 234.637 339.993 234.458 339.956 234.407 cv
339.794 234.252 338.916 234.154 338.581 234.262 cv
332.605 236.197 324.687 241.353 319.27 245.533 cv
319.116 245.652 318.91 245.676 318.732 245.598 cv
318.554 245.52 318.434 245.351 318.417 245.158 cv
318.405 245.012 li
318.258 243.325 318.12 241.731 321.158 237.263 cv
321.947 236.103 323.363 232.921 322.189 231.93 cv
321.569 231.407 321.037 231.796 319.752 233.232 cv
319.564 233.442 319.374 233.654 319.181 233.857 cv
316.576 236.605 314.02 239.329 311.383 242.444 cv
308.142 246.271 307.155 249.121 306.201 251.877 cv
305.256 254.605 304.364 257.183 301.349 260.198 cv
301.349 260.198 li
289.963 271.583 269.247 286.838 264.93 287.783 cv
cp
261.472 323.469 mo
261.149 323.469 260.837 323.436 260.534 323.371 cv
259.762 323.207 259.137 322.694 258.676 321.847 cv
255.939 316.809 259.312 299.496 264.051 287.108 cv
264.132 286.896 264.346 286.761 264.566 286.768 cv
264.574 286.768 264.582 286.768 264.59 286.768 cv
267.132 286.768 287.754 272.293 300.598 259.448 cv
300.974 259.823 li
300.598 259.448 li
303.441 256.605 304.255 254.253 305.198 251.529 cv
306.138 248.814 307.204 245.737 310.573 241.758 cv
313.228 238.623 315.796 235.887 318.411 233.127 cv
318.597 232.931 318.78 232.727 318.961 232.524 cv
320.031 231.33 321.362 229.845 322.873 231.119 cv
324.849 232.786 322.715 236.86 322.036 237.86 cv
319.727 241.256 319.386 242.819 319.409 244.091 cv
324.858 239.976 332.435 235.137 338.254 233.253 cv
338.79 233.079 340.311 233.098 340.811 233.779 cv
341.05 234.103 341.133 234.581 341.046 235.124 cv
340.942 235.775 340.559 236.663 339.798 237.204 cv
339.057 237.731 338.245 238.305 337.392 238.907 cv
341.223 236.989 343.194 236.663 343.971 237.634 cv
344.249 237.981 344.357 238.506 344.275 239.112 cv
344.164 239.938 343.732 240.694 343.121 241.137 cv
342.356 241.691 341.541 242.274 340.698 242.872 cv
342.118 242.328 343.317 242.06 344.048 242.247 cv
344.6 242.389 344.834 242.736 344.934 243.002 cv
345.123 243.505 345.585 244.741 340.609 248.584 cv
341.638 248.243 342.479 248.122 343.055 248.306 cv
343.449 248.43 343.738 248.685 343.891 249.044 cv
344.649 250.821 342.645 252.279 341.568 253.063 cv
341.44 253.156 341.327 253.239 341.235 253.31 cv
340.033 254.242 338.81 255.224 337.516 256.264 cv
332.185 260.545 326.144 265.397 320.501 267.412 cv
319.919 267.62 319.258 267.783 318.559 267.956 cv
317.27 268.275 315.937 268.605 315.092 269.222 cv
314.079 269.961 313.412 270.784 312.639 271.736 cv
312.337 272.109 312.024 272.495 311.676 272.891 cv
308.501 276.508 305.529 279.9 302.746 283.077 cv
276.945 312.53 267.363 323.468 261.472 323.469 cv
cp
0 0 0 rgb
f
318.607 259.048 mo
318.456 259.048 318.305 258.984 318.2 258.859 cv
318.012 258.634 318.041 258.299 318.266 258.111 cv
320.671 256.093 321.562 252.516 320.383 249.606 cv
320.158 249.05 319.868 248.525 319.562 247.968 cv
319.141 247.202 318.705 246.411 318.449 245.532 cv
318.367 245.251 318.529 244.957 318.81 244.874 cv
319.092 244.794 319.386 244.954 319.468 245.235 cv
319.691 246.002 320.08 246.708 320.491 247.456 cv
320.799 248.015 321.117 248.594 321.366 249.208 cv
322.713 252.533 321.696 256.619 318.947 258.924 cv
318.848 259.008 318.727 259.048 318.607 259.048 cv
cp
f
252.192 319.708 mo
252.107 319.708 252.031 319.646 252.018 319.559 cv
250.589 310.418 251.865 300.726 255.61 292.267 cv
255.65 292.178 255.754 292.137 255.844 292.177 cv
255.933 292.216 255.973 292.321 255.934 292.41 cv
252.216 300.808 250.949 310.43 252.367 319.504 cv
252.382 319.601 252.316 319.691 252.22 319.706 cv
252.211 319.708 252.201 319.708 252.192 319.708 cv
cp
f
248.061 318.224 mo
247.984 318.224 247.914 318.174 247.891 318.098 cv
246.931 314.856 246.829 311.402 247.595 308.109 cv
247.617 308.014 247.712 307.954 247.807 307.977 cv
247.902 307.999 247.961 308.094 247.939 308.189 cv
247.187 311.423 247.288 314.814 248.23 317.997 cv
248.258 318.091 248.205 318.189 248.111 318.217 cv
248.094 318.222 248.077 318.224 248.061 318.224 cv
cp
f
134.283 318.047 mo
150.897 320.854 167.66 323.466 184.425 326.075 cv
185.958 326.167 193.54 326.781 195.412 326.926 cv
196.999 327.049 198.593 326.815 200.149 326.484 cv
205.573 325.332 217.116 323.272 219.167 325.12 cv
224.221 327.941 228.243 332.964 230.957 338.783 cv
232.48 342.05 233.202 347.052 232.131 347.641 cv
231.45 348.016 230.547 348.03 230.038 347.365 cv
228.724 341.316 225.197 335.773 220.273 332.022 cv
222.501 334.044 224.484 336.336 226.166 338.831 cv
227.87 341.359 229.304 344.268 229.126 347.311 cv
229.112 347.548 229.079 347.804 228.914 347.975 cv
228.509 348.394 227.824 347.941 227.456 347.489 cv
226.734 346.604 217.527 334.878 215.362 334.642 cv
217.926 336.337 226.085 346.717 225.93 347.59 cv
225.856 348.007 225.678 348.423 225.346 348.686 cv
224.892 349.045 224.232 349.043 223.695 348.824 cv
223.159 348.606 222.721 348.205 222.305 347.802 cv
219.523 345.11 217.125 341.982 213.968 339.74 cv
212.391 338.621 210.359 337.721 208.567 338.447 cv
211.41 340.331 213.932 342.707 215.862 345.5 cv
216.17 345.947 216.401 346.443 216.554 346.963 cv
216.783 347.736 216.989 348.827 216.328 349.273 cv
215.248 350.002 214.618 349.37 213.97 348.763 cv
211.425 346.112 208.737 343.792 205.829 341.793 cv
204.926 341.172 203.821 340.558 202.791 340.93 cv
201.9 341.251 197.602 342.736 189.77 341.382 cv
187.098 340.92 184.395 341.03 180.886 341.191 cv
134.665 343.314 120.585 345.15 111.075 338.23 cv
109.214 336.875 108.763 335.634 110.254 332.248 cv
114.235 323.208 117.249 318.24 134.283 318.047 cv
cp
1 1 1 rgb
f
225.405 347.607 mo
225.405 347.607 li
225.405 347.607 li
cp
203.445 340.287 mo
204.423 340.287 205.369 340.833 206.13 341.356 cv
209.029 343.349 211.719 345.651 214.353 348.396 cv
214.379 348.42 li
215.054 349.051 215.354 349.29 216.031 348.834 cv
216.312 348.644 216.317 348.033 216.046 347.113 cv
215.905 346.635 215.696 346.194 215.425 345.802 cv
213.588 343.142 211.181 340.816 208.274 338.889 cv
208.11 338.78 208.019 338.59 208.039 338.394 cv
208.059 338.198 208.185 338.029 208.368 337.955 cv
210.473 337.102 212.742 338.22 214.275 339.307 cv
216.424 340.833 218.241 342.776 219.998 344.654 cv
220.863 345.578 221.757 346.534 222.674 347.421 cv
223.065 347.798 223.452 348.152 223.896 348.333 cv
224.313 348.503 224.753 348.478 225.017 348.27 cv
225.195 348.129 225.327 347.881 225.394 347.567 cv
224.991 346.273 217.479 336.677 215.07 335.085 cv
214.865 334.95 214.78 334.693 214.863 334.462 cv
214.946 334.232 215.178 334.089 215.42 334.115 cv
215.967 334.174 217.635 334.356 227.554 346.764 cv
227.705 346.952 227.811 347.086 227.867 347.154 cv
228.126 347.471 228.447 347.629 228.532 347.61 cv
228.547 347.591 228.581 347.531 228.596 347.281 cv
228.739 344.836 227.827 342.245 225.726 339.128 cv
224.068 336.668 222.113 334.409 219.917 332.414 cv
219.706 332.223 219.684 331.9 219.866 331.682 cv
220.048 331.464 220.369 331.427 220.595 331.599 cv
225.556 335.38 229.171 341.031 230.527 347.12 cv
230.877 347.475 231.459 347.405 231.876 347.176 cv
232.43 346.749 232.056 342.396 230.476 339.008 cv
227.644 332.933 223.536 328.166 218.908 325.583 cv
218.874 325.564 218.841 325.541 218.812 325.514 cv
217.29 324.142 208.397 325.274 200.26 327.003 cv
198.927 327.287 197.167 327.595 195.371 327.455 cv
194.859 327.416 193.922 327.341 192.798 327.252 cv
189.893 327.02 185.503 326.671 184.393 326.605 cv
184.377 326.604 184.36 326.602 184.343 326.599 cv
168 324.056 151.102 321.426 134.242 318.579 cv
117.539 318.776 114.696 323.477 110.74 332.462 cv
109.277 335.784 109.844 336.677 111.388 337.801 cv
119.478 343.688 130.703 343.13 164.023 341.475 cv
169.027 341.226 174.699 340.944 180.861 340.661 cv
184.193 340.508 187.069 340.376 189.861 340.859 cv
196.915 342.079 201.128 340.966 202.611 340.431 cv
202.889 340.33 203.169 340.287 203.445 340.287 cv
cp
215.421 350.131 mo
214.653 350.131 214.079 349.593 213.653 349.194 cv
213.608 349.151 li
211.004 346.439 208.368 344.182 205.528 342.23 cv
204.762 341.703 203.779 341.136 202.971 341.429 cv
201.409 341.993 196.986 343.168 189.68 341.905 cv
187.003 341.442 184.179 341.572 180.91 341.721 cv
174.75 342.004 169.079 342.286 164.076 342.534 cv
130.476 344.204 119.157 344.767 110.763 338.659 cv
108.521 337.027 108.279 335.417 109.769 332.034 cv
113.793 322.894 116.916 317.713 134.277 317.517 cv
134.308 317.516 134.34 317.519 134.372 317.524 cv
151.232 320.372 168.135 323.003 184.482 325.547 cv
185.638 325.617 189.821 325.95 192.882 326.194 cv
194.005 326.283 194.942 326.358 195.453 326.397 cv
197.115 326.526 198.776 326.234 200.039 325.966 cv
205.079 324.895 217.006 322.638 219.473 324.683 cv
224.342 327.417 228.479 332.214 231.438 338.559 cv
232.75 341.374 234.025 347.205 232.387 348.106 cv
231.372 348.664 230.233 348.492 229.617 347.687 cv
229.616 347.687 229.616 347.686 229.616 347.686 cv
229.572 347.918 229.484 348.15 229.296 348.344 cv
229.076 348.571 228.789 348.689 228.473 348.67 cv
227.909 348.646 227.365 348.218 227.045 347.824 cv
226.988 347.754 226.879 347.618 226.725 347.426 cv
226.513 347.161 226.305 346.901 226.1 346.647 cv
226.369 347.144 226.487 347.49 226.452 347.683 cv
226.344 348.295 226.075 348.786 225.675 349.102 cv
225.108 349.55 224.273 349.633 223.495 349.316 cv
222.876 349.063 222.386 348.618 221.937 348.184 cv
221 347.278 220.097 346.313 219.224 345.379 cv
217.502 343.539 215.723 341.637 213.661 340.173 cv
212.633 339.444 211.24 338.685 209.887 338.716 cv
212.452 340.571 214.605 342.748 216.298 345.199 cv
216.633 345.684 216.891 346.227 217.063 346.813 cv
217.222 347.35 217.704 348.984 216.625 349.713 cv
216.179 350.014 215.779 350.13 215.421 350.131 cv
cp
0 0 0 rgb
f
626.49 175.272 mo
621.825 174.664 617.316 172.573 613.732 168.989 cv
605.099 160.355 605.099 146.358 613.732 137.725 cv
621.683 129.773 634.181 129.151 642.852 135.846 cv
650.179 128.519 li
637.447 117.824 618.427 118.464 606.449 130.441 cv
593.793 143.097 593.793 163.616 606.449 176.272 cv
612.045 181.868 619.179 184.988 626.49 185.635 cv
626.49 175.272 li
cp
1 1 1 rgb
f
629.405 121.547 mo
621.182 121.547 612.974 124.666 606.824 130.816 cv
600.803 136.837 597.487 144.842 597.487 153.357 cv
597.487 161.872 600.803 169.876 606.824 175.897 cv
611.968 181.041 618.744 184.278 625.96 185.05 cv
625.96 175.733 li
621.155 175.009 616.806 172.813 613.357 169.364 cv
609.081 165.088 606.726 159.404 606.726 153.357 cv
606.726 147.31 609.081 141.625 613.357 137.35 cv
621.272 129.434 633.85 128.522 642.803 135.145 cv
649.391 128.557 li
643.591 123.865 636.492 121.547 629.405 121.547 cv
cp
626.49 186.166 mo
626.475 186.166 626.459 186.165 626.443 186.164 cv
618.765 185.484 611.53 182.104 606.074 176.647 cv
599.853 170.426 596.426 162.155 596.426 153.357 cv
596.426 144.559 599.853 136.287 606.074 130.066 cv
611.938 124.202 619.728 120.786 628.009 120.448 cv
636.245 120.113 644.236 122.834 650.52 128.113 cv
650.634 128.208 650.703 128.347 650.709 128.496 cv
650.715 128.644 650.659 128.789 650.554 128.894 cv
643.227 136.221 li
643.037 136.41 642.738 136.429 642.527 136.266 cv
633.974 129.663 621.757 130.45 614.107 138.1 cv
610.032 142.175 607.787 147.594 607.787 153.357 cv
607.787 159.12 610.032 164.538 614.107 168.614 cv
617.499 172.006 621.805 174.126 626.559 174.746 cv
626.823 174.781 627.021 175.005 627.021 175.272 cv
627.021 185.635 li
627.021 185.784 626.958 185.926 626.848 186.027 cv
626.75 186.116 626.622 186.166 626.49 186.166 cv
cp
0 0 0 rgb
f
646.875 139.869 mo
649.954 143.857 651.488 148.652 651.469 153.445 cv
661.745 154.625 li
662.049 146.802 659.535 138.891 654.202 132.542 cv
646.875 139.869 li
cp
f
651.997 152.972 mo
661.232 154.032 li
661.391 146.485 658.896 139.176 654.165 133.33 cv
647.576 139.918 li
650.357 143.682 651.915 148.283 651.997 152.972 cv
cp
661.744 155.155 mo
661.724 155.155 661.704 155.154 661.684 155.152 cv
651.409 153.973 li
651.14 153.942 650.938 153.714 650.939 153.443 cv
650.958 148.669 649.365 143.963 646.455 140.194 cv
646.292 139.983 646.311 139.683 646.5 139.494 cv
653.827 132.167 li
653.932 132.061 654.069 132.002 654.225 132.012 cv
654.374 132.018 654.513 132.087 654.608 132.201 cv
659.872 138.467 662.594 146.438 662.275 154.645 cv
662.269 154.793 662.202 154.932 662.09 155.027 cv
661.993 155.11 661.87 155.155 661.744 155.155 cv
cp
f
650.713 159.086 mo
649.744 162.713 647.842 166.143 644.996 168.989 cv
641.397 172.588 636.866 174.681 632.18 175.279 cv
632.18 185.64 li
639.511 185.005 646.668 181.883 652.279 176.272 cv
656.838 171.713 659.755 166.134 661.029 160.27 cv
650.713 159.086 li
cp
1 .831373 .180392 rgb
f
632.71 175.742 mo
632.71 185.056 li
639.949 184.295 646.745 181.056 651.904 175.897 cv
656.1 171.702 659.022 166.468 660.381 160.729 cv
651.103 159.664 li
650.045 163.32 648.07 166.666 645.371 169.364 cv
641.908 172.827 637.539 175.027 632.71 175.742 cv
cp
632.18 186.171 mo
632.047 186.171 631.919 186.121 631.821 186.031 cv
631.712 185.93 631.649 185.788 631.649 185.64 cv
631.649 175.279 li
631.649 175.012 631.848 174.787 632.112 174.753 cv
636.889 174.143 641.215 172.02 644.621 168.614 cv
647.296 165.939 649.225 162.597 650.201 158.949 cv
650.268 158.695 650.512 158.527 650.774 158.559 cv
661.09 159.743 li
661.238 159.76 661.373 159.839 661.461 159.961 cv
661.548 160.083 661.579 160.236 661.548 160.382 cv
660.208 166.545 657.133 172.169 652.655 176.647 cv
647.183 182.12 639.927 185.501 632.225 186.169 cv
632.21 186.17 632.195 186.171 632.18 186.171 cv
cp
0 0 0 rgb
f
228.413 119.304 mo
227.407 114.994 li
236.67 112.831 li
237.676 117.141 li
228.413 119.304 li
cp
f
228.044 115.39 mo
228.809 118.667 li
237.039 116.745 li
236.274 113.468 li
228.044 115.39 li
cp
228.413 119.835 mo
228.172 119.835 227.953 119.67 227.896 119.425 cv
226.89 115.115 li
226.858 114.978 226.882 114.834 226.956 114.714 cv
227.03 114.595 227.149 114.51 227.286 114.478 cv
236.549 112.314 li
236.834 112.25 237.12 112.425 237.187 112.71 cv
238.193 117.02 li
238.225 117.157 238.201 117.301 238.127 117.421 cv
238.053 117.54 237.934 117.626 237.797 117.658 cv
228.534 119.821 li
228.493 119.83 228.453 119.835 228.413 119.835 cv
cp
f
245.752 66.029 mo
242.663 52.801 229.288 44.6546 216.062 48.0742 cv
203.67 51.2783 195.844 63.775 198.377 76.3217 cv
199.763 83.1829 203.89 88.7434 209.363 92.1377 cv
215.36 95.8574 219.78 98.1728 221.384 105.045 cv
237.663 101.244 li
236.078 94.4558 238.848 90.4379 242.592 84.5584 cv
245.972 79.251 247.296 72.6408 245.752 66.029 cv
cp
1 1 1 rgb
f
222.193 47.8192 mo
220.196 47.8192 218.184 48.0735 216.195 48.5878 cv
204.003 51.7399 196.406 63.876 198.897 76.2166 cv
200.208 82.7079 204.024 88.202 209.643 91.6868 cv
210.029 91.9263 210.408 92.1598 210.781 92.3891 cv
215.987 95.5938 220.127 98.1426 221.773 104.409 cv
237.033 100.846 li
235.699 94.3769 238.26 90.3629 241.77 84.862 cv
242.145 84.2734 li
245.599 78.8483 246.697 72.411 245.235 66.1498 cv
245.235 66.1498 li
243.771 59.8787 239.93 54.5886 234.419 51.2539 cv
230.666 48.9825 226.464 47.8192 222.193 47.8192 cv
cp
221.384 105.576 mo
221.143 105.576 220.925 105.41 220.868 105.165 cv
219.417 98.9516 215.561 96.578 210.224 93.2927 cv
209.851 93.0628 209.47 92.8287 209.083 92.5886 cv
203.213 88.9477 199.226 83.2081 197.857 76.4267 cv
196.605 70.2252 197.783 63.8277 201.173 58.4128 cv
204.563 52.9985 209.803 49.1444 215.929 47.5605 cv
222.452 45.8741 229.213 46.8635 234.968 50.3462 cv
240.725 53.8301 244.739 59.3568 246.268 65.9084 cv
246.268 65.9084 246.268 65.9084 246.268 65.9085 cv
247.796 72.4506 246.649 79.175 243.04 84.8434 cv
242.664 85.4328 li
239.072 91.0626 236.699 94.7819 238.18 101.123 cv
238.212 101.26 238.188 101.404 238.114 101.524 cv
238.039 101.643 237.921 101.728 237.784 101.76 cv
221.505 105.562 li
221.465 105.571 221.424 105.576 221.384 105.576 cv
cp
0 0 0 rgb
f
220.656 108.682 mo
218.882 101.084 li
238.153 96.5843 li
239.927 104.182 li
241.17 109.504 237.863 114.825 232.541 116.068 cv
232.541 116.068 li
227.22 117.31 221.898 114.004 220.656 108.682 cv
cp
1 .831373 .180392 rgb
f
221.726 110.934 mo
222.147 112.736 223.244 114.266 224.816 115.243 cv
226.388 116.22 228.246 116.526 230.048 116.105 cv
234.793 114.997 li
238.513 114.128 240.833 110.395 239.965 106.675 cv
237.757 97.2215 li
219.519 101.48 li
221.726 110.934 li
cp
228.472 117.349 mo
224.845 117.349 221.553 114.856 220.693 111.175 cv
220.693 111.175 li
218.365 101.205 li
218.298 100.92 218.476 100.634 218.761 100.568 cv
238.033 96.0675 li
238.17 96.0359 238.314 96.0592 238.433 96.1336 cv
238.553 96.2079 238.638 96.3265 238.67 96.4635 cv
240.998 106.434 li
242 110.724 239.324 115.029 235.035 116.03 cv
230.289 117.138 li
229.681 117.28 229.072 117.349 228.472 117.349 cv
cp
0 0 0 rgb
f
221.899 104.225 mo
221.819 104.225 221.746 104.17 221.727 104.088 cv
221.705 103.993 221.764 103.898 221.859 103.876 cv
236.719 100.406 li
236.814 100.384 236.909 100.442 236.932 100.537 cv
236.954 100.633 236.895 100.728 236.8 100.75 cv
221.94 104.22 li
221.926 104.223 221.913 104.225 221.899 104.225 cv
cp
f
216.569 81.3987 mo
216.489 81.3987 216.416 81.3436 216.397 81.2621 cv
216.375 81.1669 216.434 81.0718 216.529 81.0497 cv
231.389 77.5798 li
231.484 77.5584 231.579 77.6167 231.602 77.7117 cv
231.624 77.8069 231.565 77.902 231.47 77.9241 cv
216.61 81.394 li
216.596 81.3971 216.583 81.3987 216.569 81.3987 cv
cp
f
214.407 38.9423 mo
214.166 38.9423 213.948 38.777 213.891 38.5321 cv
211.758 29.3953 li
211.691 29.11 211.869 28.8247 212.154 28.758 cv
212.438 28.6925 212.725 28.8687 212.791 29.1542 cv
214.925 38.291 li
214.991 38.5763 214.814 38.8616 214.529 38.9283 cv
214.488 38.9376 214.447 38.9423 214.407 38.9423 cv
cp
f
242.146 41.8499 mo
242.05 41.8499 241.953 41.8241 241.866 41.7699 cv
241.617 41.6153 241.541 41.2882 241.696 41.0394 cv
246.648 33.07 li
246.802 32.8209 247.129 32.7443 247.378 32.8993 cv
247.627 33.0539 247.703 33.381 247.549 33.6299 cv
242.597 41.5993 li
242.496 41.7611 242.323 41.8499 242.146 41.8499 cv
cp
f
256.96 62.1932 mo
256.719 62.1932 256.501 62.028 256.444 61.7832 cv
256.377 61.4978 256.555 61.2125 256.84 61.1458 cv
265.977 59.0123 li
266.261 58.9466 266.547 59.123 266.614 59.4083 cv
266.68 59.6937 266.503 59.979 266.218 60.0457 cv
257.081 62.1792 li
257.041 62.1886 257 62.1932 256.96 62.1932 cv
cp
f
192.255 53.4997 mo
192.16 53.4997 192.063 53.474 191.976 53.4197 cv
184.006 48.4677 li
183.757 48.3132 183.681 47.9861 183.836 47.7372 cv
183.99 47.4882 184.317 47.4115 184.566 47.5666 cv
192.536 52.5186 li
192.785 52.6731 192.861 53.0002 192.706 53.2491 cv
192.606 53.4109 192.433 53.4997 192.255 53.4997 cv
cp
f
178.845 80.4338 mo
178.604 80.4338 178.386 80.2685 178.329 80.0238 cv
178.263 79.7383 178.44 79.453 178.725 79.3864 cv
187.862 77.2528 li
188.147 77.1876 188.433 77.3634 188.499 77.6488 cv
188.566 77.9343 188.389 78.2196 188.104 78.2863 cv
178.967 80.4198 li
178.926 80.4291 178.885 80.4338 178.845 80.4338 cv
cp
f
224.977 99.7296 mo
224.745 99.7296 224.532 99.5759 224.467 99.3412 cv
224.42 99.1747 219.718 82.629 210.356 77.373 cv
210.1 77.2295 210.009 76.9062 210.153 76.6506 cv
210.296 76.3949 210.619 76.3039 210.875 76.4477 cv
220.624 81.9206 225.295 98.3596 225.489 99.0566 cv
225.567 99.3388 225.402 99.6313 225.12 99.7099 cv
225.073 99.7232 225.025 99.7296 224.977 99.7296 cv
cp
f
231.852 98.1243 mo
231.602 98.1243 231.379 97.947 231.331 97.6924 cv
231.196 96.9814 228.104 80.1739 234.421 70.9496 cv
234.587 70.7079 234.916 70.6462 235.158 70.8117 cv
235.4 70.9773 235.462 71.3075 235.296 71.5493 cv
229.226 80.4133 232.341 97.3251 232.373 97.4948 cv
232.428 97.7827 232.239 98.0603 231.951 98.1148 cv
231.917 98.1212 231.884 98.1243 231.852 98.1243 cv
cp
f
210.565 77.2285 mo
210.324 77.2285 210.106 77.0632 210.049 76.8185 cv
209.983 76.533 210.16 76.2477 210.445 76.1811 cv
211.238 75.9959 211.527 75.52 211.892 74.9176 cv
212.286 74.267 212.777 73.4574 214.005 73.1706 cv
215.233 72.8846 216.031 73.3923 216.673 73.8013 cv
217.267 74.1797 217.737 74.4783 218.53 74.2933 cv
219.322 74.1083 219.61 73.6325 219.975 73.0303 cv
220.369 72.3798 220.859 71.5702 222.087 71.2835 cv
223.314 70.9971 224.113 71.5056 224.754 71.9142 cv
225.348 72.2926 225.818 72.5918 226.61 72.4064 cv
227.403 72.2214 227.691 71.7456 228.056 71.1432 cv
228.449 70.4929 228.94 69.6832 230.167 69.3966 cv
231.393 69.1104 232.192 69.6186 232.833 70.0278 cv
233.427 70.4062 233.896 70.706 234.688 70.5201 cv
234.971 70.4549 235.259 70.6307 235.326 70.9161 cv
235.392 71.2016 235.215 71.4869 234.93 71.5536 cv
233.702 71.8392 232.904 71.3311 232.263 70.9224 cv
231.669 70.5441 231.199 70.2447 230.408 70.43 cv
229.616 70.615 229.328 71.0907 228.963 71.6929 cv
228.569 72.3435 228.079 73.1531 226.852 73.4398 cv
225.625 73.7255 224.826 73.2177 224.184 72.8091 cv
223.59 72.4307 223.121 72.1314 222.328 72.3169 cv
221.536 72.5019 221.248 72.9777 220.883 73.5799 cv
220.489 74.2304 219.998 75.04 218.771 75.3267 cv
217.542 75.6127 216.745 75.1046 216.103 74.6962 cv
215.509 74.3176 215.04 74.0185 214.246 74.204 cv
213.453 74.3891 213.165 74.8651 212.799 75.4675 cv
212.405 76.118 211.914 76.9277 210.687 77.2145 cv
210.646 77.2238 210.605 77.2285 210.565 77.2285 cv
cp
f
117.976 209.085 mo
114.759 206.965 li
110.681 204.277 105.163 206.099 103.487 210.686 cv
102.164 214.305 li
96.8592 213.612 97.7716 213.731 92.4667 213.038 cv
92.1185 209.2 li
91.6771 204.337 86.8128 201.158 82.1814 202.707 cv
78.5272 203.93 li
75.7617 199.35 76.2374 200.138 73.4719 195.558 cv
76.255 192.893 li
79.7824 189.516 79.2344 183.731 75.1355 181.076 cv
71.9016 178.981 li
73.7579 173.963 73.4386 174.826 75.2949 169.809 cv
79.1136 170.323 li
83.9536 170.975 88.1345 166.94 87.6548 162.08 cv
87.2763 158.245 li
92.3566 156.568 91.4828 156.857 96.5631 155.18 cv
98.5418 158.486 li
101.05 162.677 106.811 163.43 110.312 160.024 cv
113.074 157.337 li
117.553 160.264 116.782 159.76 121.261 162.687 cv
119.91 166.295 li
118.197 170.869 121.201 175.843 126.046 176.457 cv
129.868 176.941 li
130.373 182.267 130.286 181.351 130.791 186.677 cv
127.127 187.87 li
122.483 189.383 120.467 194.833 123.008 199.003 cv
125.013 202.294 li
121.163 206.009 121.826 205.37 117.976 209.085 cv
cp
1 1 1 rgb
f
92.9566 212.566 mo
101.812 213.724 li
102.988 210.504 li
103.844 208.164 105.691 206.374 108.056 205.594 cv
110.422 204.813 112.971 205.151 115.051 206.522 cv
117.913 208.408 li
124.339 202.207 li
122.555 199.279 li
121.259 197.152 121.012 194.592 121.876 192.256 cv
122.74 189.92 124.594 188.138 126.962 187.366 cv
130.222 186.304 li
129.38 177.414 li
125.979 176.983 li
123.508 176.67 121.352 175.267 120.064 173.135 cv
118.777 171.003 118.539 168.442 119.413 166.109 cv
120.615 162.898 li
113.139 158.014 li
110.682 160.405 li
108.896 162.141 106.456 162.952 103.986 162.63 cv
101.516 162.307 99.3657 160.896 98.0867 158.758 cv
96.326 155.817 li
87.8461 158.616 li
88.1827 162.028 li
88.4274 164.507 87.5399 166.921 85.7474 168.65 cv
83.9551 170.38 81.5116 171.181 79.0429 170.849 cv
75.6452 170.391 li
72.5466 178.766 li
75.4239 180.631 li
77.5146 181.985 78.8484 184.184 79.0833 186.663 cv
79.3181 189.143 78.4211 191.554 76.622 193.276 cv
74.1456 195.647 li
78.7617 203.292 li
82.013 202.204 li
84.3753 201.414 86.9261 201.742 89.0113 203.105 cv
91.0966 204.467 92.4218 206.671 92.6468 209.152 cv
92.9566 212.566 li
cp
102.164 214.835 mo
102.141 214.835 102.118 214.834 102.095 214.831 cv
92.3979 213.564 li
92.1517 213.531 91.9606 213.333 91.9384 213.085 cv
91.5902 209.248 li
91.3945 207.092 90.243 205.177 88.431 203.993 cv
86.619 202.809 84.4028 202.523 82.3495 203.21 cv
78.6956 204.433 li
78.46 204.511 78.2016 204.416 78.073 204.204 cv
73.0177 195.832 li
72.8894 195.62 72.9257 195.346 73.1049 195.175 cv
75.888 192.51 li
77.4514 191.013 78.231 188.918 78.0269 186.764 cv
77.8227 184.609 76.6637 182.698 74.8471 181.521 cv
71.6131 179.426 li
71.4047 179.291 71.3178 179.03 71.404 178.797 cv
74.7974 169.625 li
74.8836 169.392 75.1196 169.249 75.3657 169.283 cv
79.1845 169.798 li
81.3301 170.086 83.4533 169.39 85.0107 167.887 cv
86.5681 166.384 87.3394 164.286 87.1268 162.132 cv
86.7484 158.298 li
86.724 158.051 86.8743 157.82 87.11 157.742 cv
96.3968 154.676 li
96.6324 154.598 96.8907 154.694 97.0183 154.907 cv
98.9971 158.214 li
100.109 160.071 101.977 161.297 104.123 161.577 cv
106.272 161.858 108.391 161.153 109.942 159.644 cv
112.704 156.957 li
112.882 156.784 113.156 156.758 113.364 156.893 cv
121.551 162.243 li
121.759 162.378 121.845 162.64 121.758 162.873 cv
120.407 166.481 li
119.648 168.508 119.854 170.734 120.973 172.586 cv
122.091 174.439 123.965 175.658 126.112 175.93 cv
129.935 176.414 li
130.181 176.446 130.373 176.643 130.396 176.891 cv
131.319 186.627 li
131.342 186.874 131.191 187.105 130.955 187.181 cv
127.291 188.374 li
125.233 189.045 123.622 190.594 122.871 192.624 cv
122.12 194.654 122.335 196.879 123.461 198.727 cv
125.466 202.018 li
125.595 202.23 125.56 202.503 125.381 202.676 cv
118.344 209.467 li
118.166 209.639 117.891 209.664 117.684 209.528 cv
114.467 207.408 li
112.659 206.217 110.444 205.923 108.389 206.601 cv
106.333 207.28 104.728 208.835 103.985 210.868 cv
102.662 214.487 li
102.585 214.698 102.384 214.835 102.164 214.835 cv
cp
0 0 0 rgb
f
115.125 184.742 mo
115.125 192.352 108.956 198.521 101.346 198.521 cv
93.7361 198.521 87.567 192.352 87.567 184.742 cv
87.567 177.132 93.7361 170.963 101.346 170.963 cv
108.956 170.963 115.125 177.132 115.125 184.742 cv
cp
f
101.346 171.494 mo
94.0408 171.494 88.0975 177.437 88.0975 184.742 cv
88.0975 192.048 94.0408 197.991 101.346 197.991 cv
108.651 197.991 114.594 192.048 114.594 184.742 cv
114.594 177.437 108.651 171.494 101.346 171.494 cv
cp
101.346 199.052 mo
93.4557 199.052 87.0365 192.633 87.0365 184.742 cv
87.0365 176.852 93.4557 170.433 101.346 170.433 cv
109.236 170.433 115.656 176.852 115.656 184.742 cv
115.656 192.633 109.236 199.052 101.346 199.052 cv
cp
f
110.313 184.742 mo
110.313 189.695 106.298 193.709 101.346 193.709 cv
96.3937 193.709 92.379 189.695 92.379 184.742 cv
92.379 179.79 96.3937 175.775 101.346 175.775 cv
106.298 175.775 110.313 179.79 110.313 184.742 cv
cp
1 1 1 rgb
f
101.346 176.306 mo
96.6942 176.306 92.9096 180.09 92.9096 184.742 cv
92.9096 189.394 96.6942 193.179 101.346 193.179 cv
105.998 193.179 109.783 189.394 109.783 184.742 cv
109.783 180.09 105.998 176.306 101.346 176.306 cv
cp
101.346 194.24 mo
96.1091 194.24 91.8486 189.979 91.8486 184.742 cv
91.8486 179.505 96.1091 175.245 101.346 175.245 cv
106.583 175.245 110.844 179.505 110.844 184.742 cv
110.844 189.979 106.583 194.24 101.346 194.24 cv
cp
0 0 0 rgb
f
507.98 129.789 mo
504.734 127.962 li
502.555 128.603 501.364 128.954 499.185 129.595 cv
497.445 132.889 li
493.375 131.904 493.909 132.033 489.839 131.048 cv
489.798 127.324 li
488.153 125.757 487.254 124.901 485.609 123.334 cv
481.887 123.475 li
480.705 119.457 480.86 119.984 479.678 115.967 cv
482.883 114.069 li
483.417 111.861 483.709 110.655 484.243 108.447 cv
482.26 105.294 li
485.148 102.261 484.77 102.659 487.658 99.6266 cv
490.904 101.453 li
493.083 100.812 494.274 100.462 496.453 99.8205 cv
498.193 96.5265 li
502.263 97.5114 501.729 97.3822 505.799 98.367 cv
505.84 102.092 li
507.485 103.659 508.384 104.515 510.029 106.081 cv
513.751 105.941 li
514.933 109.958 514.778 109.431 515.96 113.448 cv
512.755 115.346 li
512.221 117.554 511.929 118.76 511.395 120.968 cv
513.378 124.122 li
510.49 127.154 510.868 126.757 507.98 129.789 cv
cp
1 1 1 rgb
f
490.365 130.63 mo
497.169 132.276 li
498.716 129.347 li
498.782 129.221 498.898 129.126 499.035 129.086 cv
504.584 127.453 li
504.723 127.413 504.87 127.43 504.994 127.5 cv
507.881 129.124 li
512.709 124.055 li
510.946 121.251 li
510.869 121.13 510.845 120.983 510.879 120.844 cv
512.239 115.221 li
512.273 115.082 512.362 114.963 512.485 114.89 cv
515.335 113.202 li
513.359 106.486 li
510.049 106.611 li
509.904 106.616 509.767 106.564 509.663 106.465 cv
505.474 102.476 li
505.37 102.377 505.311 102.241 505.309 102.098 cv
505.273 98.7857 li
498.469 97.1392 li
496.922 100.068 li
496.856 100.195 496.74 100.289 496.603 100.329 cv
491.054 101.963 li
490.917 102.004 490.768 101.986 490.644 101.916 cv
487.757 100.291 li
482.929 105.361 li
484.692 108.164 li
484.769 108.286 484.793 108.433 484.759 108.572 cv
483.398 114.194 li
483.365 114.333 483.276 114.453 483.153 114.526 cv
480.303 116.214 li
482.279 122.929 li
485.589 122.804 li
485.732 122.799 485.871 122.851 485.975 122.95 cv
490.164 126.939 li
490.267 127.038 490.327 127.174 490.329 127.318 cv
490.365 130.63 li
cp
497.445 133.419 mo
497.404 133.419 497.362 133.415 497.321 133.405 cv
489.714 131.564 li
489.479 131.507 489.311 131.297 489.309 131.054 cv
489.27 127.553 li
485.405 123.873 li
481.907 124.005 li
481.649 124.008 481.446 123.857 481.378 123.624 cv
479.168 116.117 li
479.1 115.884 479.198 115.634 479.407 115.511 cv
482.42 113.727 li
483.675 108.54 li
481.811 105.576 li
481.682 105.37 481.709 105.103 481.876 104.928 cv
487.274 99.2606 li
487.441 99.085 487.706 99.0451 487.918 99.1643 cv
490.969 100.881 li
496.089 99.3748 li
497.724 96.2788 li
497.837 96.0641 498.083 95.9538 498.317 96.0108 cv
505.923 97.8514 li
506.159 97.9086 506.326 98.1186 506.329 98.3612 cv
506.368 101.862 li
510.233 105.543 li
513.731 105.41 li
513.974 105.404 514.192 105.558 514.26 105.791 cv
516.469 113.298 li
516.538 113.531 516.44 113.781 516.231 113.905 cv
513.218 115.688 li
511.963 120.876 li
513.826 123.84 li
513.956 124.045 513.929 124.312 513.762 124.488 cv
508.365 130.155 li
508.198 130.33 507.932 130.37 507.721 130.251 cv
504.669 128.534 li
499.549 130.041 li
497.914 133.137 li
497.821 133.313 497.639 133.419 497.445 133.419 cv
cp
0 0 0 rgb
f
505.142 114.708 mo
505.142 118.752 501.864 122.031 497.819 122.031 cv
493.774 122.031 490.496 118.752 490.496 114.708 cv
490.496 110.663 493.774 107.384 497.819 107.384 cv
501.864 107.384 505.142 110.663 505.142 114.708 cv
cp
1 1 1 rgb
f
497.819 107.915 mo
494.073 107.915 491.026 110.962 491.026 114.708 cv
491.026 118.453 494.073 121.501 497.819 121.501 cv
501.564 121.501 504.612 118.453 504.612 114.708 cv
504.612 110.962 501.564 107.915 497.819 107.915 cv
cp
497.819 122.562 mo
493.488 122.562 489.965 119.038 489.965 114.708 cv
489.965 110.377 493.488 106.854 497.819 106.854 cv
502.15 106.854 505.673 110.377 505.673 114.708 cv
505.673 119.038 502.15 122.562 497.819 122.562 cv
cp
0 0 0 rgb
f
460.492 133.475 mo
462.271 133.475 463.713 134.917 463.713 136.696 cv
463.713 138.474 462.271 139.916 460.492 139.916 cv
458.714 139.916 457.272 138.474 457.272 136.696 cv
457.272 134.917 458.714 133.475 460.492 133.475 cv
cp
f
460.492 134.006 mo
459.009 134.006 457.803 135.212 457.803 136.696 cv
457.803 138.179 459.009 139.385 460.492 139.385 cv
461.975 139.385 463.182 138.179 463.182 136.696 cv
463.182 135.212 461.975 134.006 460.492 134.006 cv
cp
460.492 140.447 mo
458.424 140.447 456.742 138.764 456.742 136.696 cv
456.742 134.627 458.424 132.945 460.492 132.945 cv
462.56 132.945 464.243 134.627 464.243 136.696 cv
464.243 138.764 462.56 140.447 460.492 140.447 cv
cp
f
688.058 299.735 mo
689.836 299.735 691.278 301.177 691.278 302.955 cv
691.278 304.734 689.836 306.176 688.058 306.176 cv
686.279 306.176 684.837 304.734 684.837 302.955 cv
684.837 301.177 686.279 299.735 688.058 299.735 cv
cp
f
688.058 300.266 mo
686.575 300.266 685.368 301.472 685.368 302.955 cv
685.368 304.438 686.575 305.645 688.058 305.645 cv
689.541 305.645 690.748 304.438 690.748 302.955 cv
690.748 301.472 689.541 300.266 688.058 300.266 cv
cp
688.058 306.706 mo
685.99 306.706 684.307 305.023 684.307 302.955 cv
684.307 300.887 685.99 299.204 688.058 299.204 cv
690.126 299.204 691.809 300.887 691.809 302.955 cv
691.809 305.023 690.126 306.706 688.058 306.706 cv
cp
f
51.6536 257.912 mo
53.8201 257.912 55.5764 259.668 55.5764 261.835 cv
55.5764 264.001 53.8201 265.757 51.6536 265.757 cv
49.4871 265.757 47.7308 264.001 47.7308 261.835 cv
47.7308 259.668 49.4871 257.912 51.6536 257.912 cv
cp
f
51.6535 258.442 mo
49.783 258.442 48.2613 259.964 48.2613 261.835 cv
48.2613 263.705 49.783 265.227 51.6535 265.227 cv
53.524 265.227 55.0458 263.705 55.0458 261.835 cv
55.0458 259.964 53.524 258.442 51.6535 258.442 cv
cp
51.6535 266.288 mo
49.1981 266.288 47.2003 264.29 47.2003 261.835 cv
47.2003 259.379 49.1981 257.381 51.6535 257.381 cv
54.1091 257.381 56.1069 259.379 56.1069 261.835 cv
56.1069 264.29 54.1091 266.288 51.6535 266.288 cv
cp
f
305.335 93.5348 mo
306.199 93.5348 306.899 94.2349 306.899 95.0985 cv
306.899 95.9621 306.199 96.6621 305.335 96.6621 cv
304.472 96.6621 303.772 95.9621 303.772 95.0985 cv
303.772 94.2349 304.472 93.5348 305.335 93.5348 cv
cp
f
305.335 94.0653 mo
304.766 94.0653 304.302 94.5288 304.302 95.0984 cv
304.302 95.6681 304.766 96.1317 305.335 96.1317 cv
305.905 96.1317 306.368 95.6681 306.368 95.0984 cv
306.368 94.5288 305.905 94.0653 305.335 94.0653 cv
cp
305.335 97.1927 mo
304.181 97.1927 303.241 96.2532 303.241 95.0984 cv
303.241 93.9437 304.181 93.0042 305.335 93.0042 cv
306.49 93.0042 307.43 93.9437 307.43 95.0984 cv
307.43 96.2532 306.49 97.1927 305.335 97.1927 cv
cp
f
245.916 190.85 mo
246.78 190.85 247.48 191.551 247.48 192.414 cv
247.48 193.278 246.78 193.978 245.916 193.978 cv
245.052 193.978 244.352 193.278 244.352 192.414 cv
244.352 191.551 245.052 190.85 245.916 190.85 cv
cp
f
245.916 191.381 mo
245.347 191.381 244.883 191.844 244.883 192.414 cv
244.883 192.984 245.347 193.447 245.916 193.447 cv
246.486 193.447 246.949 192.984 246.949 192.414 cv
246.949 191.844 246.486 191.381 245.916 191.381 cv
cp
245.916 194.508 mo
244.761 194.508 243.822 193.569 243.822 192.414 cv
243.822 191.259 244.761 190.32 245.916 190.32 cv
247.071 190.32 248.01 191.259 248.01 192.414 cv
248.01 193.569 247.071 194.508 245.916 194.508 cv
cp
f
309.044 143.586 mo
309.044 141.173 311 139.217 313.413 139.217 cv
315.826 139.217 317.782 141.173 317.782 143.586 cv
317.782 145.999 315.826 147.955 313.413 147.955 cv
311 147.955 309.044 145.999 309.044 143.586 cv
cp
1 1 1 rgb
f
313.413 139.747 mo
311.296 139.747 309.574 141.469 309.574 143.586 cv
309.574 145.703 311.296 147.425 313.413 147.425 cv
315.53 147.425 317.252 145.703 317.252 143.586 cv
317.252 141.469 315.53 139.747 313.413 139.747 cv
cp
313.413 148.486 mo
310.711 148.486 308.513 146.288 308.513 143.586 cv
308.513 140.884 310.711 138.686 313.413 138.686 cv
316.115 138.686 318.313 140.884 318.313 143.586 cv
318.313 146.288 316.115 148.486 313.413 148.486 cv
cp
0 0 0 rgb
f
638.084 284.225 mo
638.084 281.812 640.04 279.855 642.453 279.855 cv
644.866 279.855 646.822 281.812 646.822 284.225 cv
646.822 286.638 644.866 288.594 642.453 288.594 cv
640.04 288.594 638.084 286.638 638.084 284.225 cv
cp
1 1 1 rgb
f
642.453 280.386 mo
640.336 280.386 638.614 282.108 638.614 284.225 cv
638.614 286.341 640.336 288.064 642.453 288.064 cv
644.57 288.064 646.292 286.341 646.292 284.225 cv
646.292 282.108 644.57 280.386 642.453 280.386 cv
cp
642.453 289.125 mo
639.751 289.125 637.553 286.927 637.553 284.225 cv
637.553 281.523 639.751 279.325 642.453 279.325 cv
645.155 279.325 647.353 281.523 647.353 284.225 cv
647.353 286.927 645.155 289.125 642.453 289.125 cv
cp
0 0 0 rgb
f
71.3152 302.542 mo
71.3152 300.991 72.5717 299.735 74.1218 299.735 cv
75.6718 299.735 76.9284 300.991 76.9284 302.542 cv
76.9284 304.092 75.6718 305.348 74.1218 305.348 cv
72.5717 305.348 71.3152 304.092 71.3152 302.542 cv
cp
1 1 1 rgb
f
74.1218 300.266 mo
72.8668 300.266 71.8458 301.286 71.8458 302.542 cv
71.8458 303.797 72.8668 304.818 74.1218 304.818 cv
75.3768 304.818 76.3978 303.797 76.3978 302.542 cv
76.3978 301.286 75.3768 300.266 74.1218 300.266 cv
cp
74.1218 305.879 mo
72.2817 305.879 70.7847 304.382 70.7847 302.542 cv
70.7847 300.701 72.2817 299.204 74.1218 299.204 cv
75.9619 299.204 77.4589 300.701 77.4589 302.542 cv
77.4589 304.382 75.9619 305.879 74.1218 305.879 cv
cp
0 0 0 rgb
f
676.716 212.553 mo
676.656 212.553 676.594 212.542 676.533 212.52 cv
675.253 212.049 673.91 211.756 672.543 211.651 cv
672.251 211.628 672.032 211.373 672.055 211.081 cv
672.078 210.789 672.334 210.561 672.625 210.593 cv
674.089 210.706 675.528 211.019 676.9 211.525 cv
677.175 211.626 677.316 211.931 677.214 212.206 cv
677.135 212.42 676.932 212.553 676.716 212.553 cv
cp
664.367 213.289 mo
664.175 213.289 663.988 213.183 663.895 212.999 cv
663.761 212.738 663.865 212.419 664.126 212.286 cv
665.432 211.619 666.822 211.136 668.259 210.85 cv
668.548 210.794 668.826 210.981 668.883 211.268 cv
668.94 211.555 668.753 211.834 668.466 211.891 cv
667.125 212.157 665.827 212.608 664.608 213.23 cv
664.531 213.27 664.449 213.289 664.367 213.289 cv
cp
683.499 217.477 mo
683.342 217.477 683.187 217.408 683.083 217.275 cv
682.234 216.201 681.242 215.249 680.136 214.446 cv
679.899 214.273 679.846 213.942 680.018 213.704 cv
680.19 213.468 680.522 213.415 680.759 213.587 cv
681.944 214.448 683.006 215.467 683.915 216.617 cv
684.097 216.847 684.058 217.18 683.828 217.362 cv
683.73 217.439 683.615 217.477 683.499 217.477 cv
cp
658.214 218.98 mo
658.12 218.98 658.024 218.955 657.937 218.902 cv
657.687 218.749 657.609 218.422 657.763 218.172 cv
658.528 216.925 659.462 215.788 660.539 214.791 cv
660.753 214.592 661.09 214.605 661.289 214.82 cv
661.488 215.035 661.475 215.371 661.259 215.57 cv
660.254 216.501 659.382 217.563 658.667 218.728 cv
658.567 218.891 658.393 218.98 658.214 218.98 cv
cp
686.713 225.214 mo
686.448 225.214 686.219 225.015 686.187 224.745 cv
686.026 223.385 685.679 222.056 685.154 220.795 cv
685.042 220.525 685.17 220.214 685.44 220.102 cv
685.712 219.989 686.022 220.117 686.134 220.388 cv
686.696 221.739 687.068 223.163 687.241 224.62 cv
687.275 224.912 687.067 225.176 686.777 225.21 cv
686.755 225.212 686.734 225.214 686.713 225.214 cv
cp
656.373 230.683 mo
656.134 230.683 655.917 230.52 655.858 230.276 cv
655.563 229.052 655.413 227.786 655.413 226.515 cv
655.413 225.043 655.613 223.585 656.007 222.182 cv
656.087 221.9 656.381 221.736 656.662 221.815 cv
656.944 221.894 657.108 222.187 657.029 222.469 cv
656.66 223.779 656.474 225.14 656.474 226.515 cv
656.474 227.702 656.613 228.884 656.889 230.028 cv
656.958 230.312 656.783 230.599 656.498 230.668 cv
656.456 230.678 656.415 230.683 656.373 230.683 cv
cp
685.414 233.493 mo
685.34 233.493 685.265 233.478 685.193 233.444 cv
684.927 233.322 684.81 233.007 684.933 232.741 cv
685.504 231.498 685.901 230.183 686.112 228.831 cv
686.158 228.541 686.432 228.346 686.718 228.388 cv
687.008 228.433 687.206 228.705 687.161 228.994 cv
686.935 230.443 686.509 231.853 685.896 233.184 cv
685.807 233.379 685.615 233.493 685.414 233.493 cv
cp
660.486 237.984 mo
660.351 237.984 660.215 237.932 660.112 237.829 cv
659.072 236.794 658.181 235.623 657.462 234.348 cv
657.318 234.092 657.409 233.769 657.664 233.625 cv
657.918 233.481 658.242 233.571 658.386 233.827 cv
659.058 235.017 659.89 236.111 660.861 237.078 cv
661.068 237.285 661.069 237.62 660.862 237.828 cv
660.758 237.932 660.622 237.984 660.486 237.984 cv
cp
679.979 239.872 mo
679.808 239.872 679.641 239.79 679.538 239.637 cv
679.375 239.394 679.44 239.065 679.683 238.901 cv
680.818 238.139 681.844 237.225 682.732 236.182 cv
682.923 235.96 683.257 235.934 683.48 236.123 cv
683.703 236.313 683.73 236.648 683.54 236.871 cv
682.589 237.987 681.49 238.966 680.274 239.782 cv
680.184 239.843 680.081 239.872 679.979 239.872 cv
cp
667.805 242.068 mo
667.764 242.068 667.723 242.064 667.681 242.053 cv
666.256 241.715 664.884 241.181 663.603 240.465 cv
663.347 240.322 663.256 239.999 663.399 239.743 cv
663.542 239.487 663.866 239.397 664.121 239.539 cv
665.316 240.207 666.596 240.705 667.927 241.021 cv
668.212 241.089 668.388 241.375 668.32 241.66 cv
668.263 241.904 668.045 242.068 667.805 242.068 cv
cp
672.014 242.472 mo
671.731 242.472 671.496 242.248 671.484 241.963 cv
671.473 241.67 671.701 241.423 671.993 241.411 cv
673.365 241.356 674.718 241.113 676.013 240.691 cv
676.292 240.598 676.591 240.751 676.682 241.03 cv
676.773 241.309 676.621 241.608 676.342 241.699 cv
674.954 242.152 673.505 242.412 672.036 242.471 cv
672.029 242.472 672.021 242.472 672.014 242.472 cv
cp
f
320.588 314.274 mo
320.384 314.274 320.19 314.156 320.102 313.958 cv
319.984 313.69 320.104 313.377 320.372 313.258 cv
321.38 312.811 322.455 312.584 323.567 312.584 cv
323.987 312.584 324.408 312.617 324.821 312.683 cv
325.11 312.729 325.307 313.001 325.261 313.29 cv
325.215 313.58 324.943 313.777 324.654 313.731 cv
324.296 313.674 323.931 313.645 323.567 313.645 cv
322.605 313.645 321.674 313.841 320.802 314.228 cv
320.733 314.259 320.659 314.274 320.588 314.274 cv
cp
330.681 319.127 mo
330.446 319.127 330.231 318.97 330.168 318.731 cv
329.833 317.454 329.136 316.307 328.151 315.414 cv
327.934 315.217 327.918 314.881 328.115 314.664 cv
328.312 314.448 328.647 314.432 328.864 314.628 cv
330.001 315.66 330.807 316.985 331.195 318.462 cv
331.269 318.745 331.1 319.035 330.816 319.11 cv
330.771 319.122 330.726 319.127 330.681 319.127 cv
cp
317.164 324.621 mo
316.979 324.621 316.8 324.524 316.702 324.352 cv
316.035 323.173 315.682 321.831 315.682 320.469 cv
315.682 318.935 316.123 317.448 316.957 316.168 cv
317.117 315.922 317.446 315.853 317.691 316.013 cv
317.937 316.174 318.006 316.502 317.846 316.748 cv
317.124 317.855 316.743 319.142 316.743 320.469 cv
316.743 321.648 317.048 322.81 317.625 323.829 cv
317.77 324.084 317.68 324.407 317.425 324.552 cv
317.343 324.599 317.253 324.621 317.164 324.621 cv
cp
328.161 326.745 mo
328.005 326.745 327.851 326.677 327.746 326.546 cv
327.563 326.317 327.6 325.983 327.829 325.8 cv
328.866 324.97 329.633 323.868 330.048 322.614 cv
330.14 322.335 330.44 322.184 330.718 322.276 cv
330.997 322.368 331.148 322.668 331.056 322.947 cv
330.576 324.397 329.69 325.67 328.492 326.629 cv
328.394 326.707 328.277 326.745 328.161 326.745 cv
cp
323.577 328.355 mo
323.574 328.355 323.57 328.355 323.567 328.355 cv
322.303 328.355 321.045 328.048 319.93 327.468 cv
319.67 327.333 319.569 327.013 319.704 326.753 cv
319.839 326.492 320.159 326.392 320.42 326.527 cv
321.401 327.037 322.469 327.31 323.577 327.294 cv
323.794 327.294 324.015 327.283 324.233 327.262 cv
324.523 327.233 324.784 327.447 324.812 327.739 cv
324.84 328.031 324.627 328.29 324.335 328.318 cv
324.083 328.342 323.828 328.355 323.577 328.355 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 26.3.1
%%For: ( ) ()
%%Title: (2206.w039.n003.272B.p1.272-temp_01.eps)
%%CreationDate: 6/24/2022 10:40 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Bj2M!o07Uera".M4b-"s1#bmQY1XB)R(,SEfjbR_,pEndS<NR&s4Zr<<:p[[b*_60d9n.b:Tq0-F`fJpZ.SD#WjTk*@e9'a
%N00O9%3smn7`P5\s%Q0LYAJua.r,igQ/5*bk\dhuQ*A^d2!`D0B0K8h;/Tpqb(oVbS9Yq%lcm1"MtM,PR+gV&S@qh&*gW8^PB&VB
%jpWlLp:0YY%^i#@n6VHb1b/0)2;G#$@<L[bSp0sd\&TT!_etg<8#)N?dFRktE\a";r_7gn$4gpCDS+]+2&i0b;)Q,Jb+RKtX"4d[
%1[9bp:!pjP0g$lYl<TfPVI,8<G,I.[@OAG/6:lr:\MTDirs\j%5+-k)&H/(Un\8Gur&_Pm)(T4?31HC+N1m&!CLh7:*\6'^4?!74
%VKe8SiD+XGWgC=@,LQ(PS<K@@L-^<P+/6o2*Nh@pUWkiSS+/UEK]24ZIADYUCZ/XlRHJ"h)R_M@oBkshm2s1gLkLRQ(N9!3@Jb2B
%eg4-a7tCYiX]Z,!Jiql%<%e?E8V#_VWj,K?+,4'qb\"Nnf["4.Ga.mXa_LWAf^;-J#(%;kYd)[4jb_9/3S3d'2rj`p42@S2Ss;#^
%94\1RNpu-*),iua1,a:DkR&>!6[1l@-ILa@]67:lbg3l/9)o?)9qTVr>.%.tT$$j!_L:VF`,?4cl:DWp]%sS&Xhn%aKscA*KWDLt
%4iYcEmps11XoX3uVhJ]0b\E9=]hp>)b;?A?R"V3K1Q+K/bW5t,=;G4K(U$,Tf0UW1[4M6`/3L<k4LH_c=t4N5C$*"*k.:?K\u=c&
%W91[f;UfClTM?&k:-_&!4:"b8#Z)!!n;:t7!ictBBNchB8YLYqV%TAc9!6@^9-mOcQ)'O9>,Ei,Otl&IRRYUTMjiZ:WaT1X75_.s
%>-0p)U@=%$=;5(em1D=R1"M%[I);WIMQR(adPVeo='duFTG["3Vufnc!NKRBGX\0$$"X^7Gk(oMJYdl(YL6BN0+3m+bNrbeSpZ3k
%W/CMG)V0^GF<ua-Q-1tC34qO7X>.T!J4:GeNHiDi/5YO1YBoaf_CMWpNHc1K$FpF]AHiu-U'7-96qJ!UA;UG8<"n1YY`[JZ!dO8k
%2&TQnNmK+QU*%n$![AW&!kGkC>TRC7GXXK`Ff\Hu,)u,M3`mL^O/P2#,QXNr+d=%1F$qhsh=9Q[A:u?T-Ac[ld$OP7lt'].*`"sd
%9XI!O5,q'39D?kc4I7-QH!s[GCr*db8@g5>O-"CSqkX`ZO1;[FB+_BEHm"XpnN`]Z\Tsg9,0oXe4+_Ss)jjP,:2\nn8Mo7:b0e;Y
%Yr"=4K7EAlMb6qJ-marNJ*"_Zj`CI*r(qITOeVh^q=-TCh#Alh^+Z+,59AY45P_rSlMm-A`C9UXs!p=`]NCDmra5J(>*@51^[bmQ
%5?c>7LNjR3b3.uPr5BS>?*KktYlq#jf0$`m`DY*f9;T:npIdqn8P2*8QUK*g_(0O@YQ"kSGc./:\iXe'mn3/=R[YY\H3G"WWj<D!
%BXh<H'S#7h6)d,_3G-,!(3t#oj"0JX9%(J5N[O&I0tkP6$):ED4':JX^7Mur&N+T.1n&.:#t?EZl*o%>oa3fWQ\eXA.;Og\NE2#k
%W(R5#6rWnSj"KNs?Fpk=*D#f$PkE*=YLSa-(;.:Id-&C1@3\;FRC#6O'T<o[oZj>ratXo*mt&DDh?fLX3E7LrlQnqt26T9\EWkj\
%XmV/IdMrXH6:,_.TQ@=E,;5eu!3$nY+]uTBPPCf>5UCQ?mmEZf\XlHJMp^f74A\P%#RU\e9i<g_U*^hS(a4p;(R(iB8%RtaVHq,\
%PUDRPd0V'*rGeUO4sD5oVA^dW40_'H"l>07-58;G'(:fFn=Vm<$Q?qqFn"V#Ed8@_C<Rff.%1OFcRsp?X!N`>VrRr\0rBkcGqAYL
%9p_.)aW%t^_!\BX)OjC[cSFU<X;rUC/#n3h^ao6'PDPl?eO#E@@sSi3TY19VdF@u1!g1l>1f8=l.aQA9Vc&\p,C*1EkY9ATL,o6Z
%79Os_MDR>&!>3UQ@mQEXUA@!`cN$S=<i2t]'TK5eQn6#i4p4cL[*]R\0e^qS7G\aU?il:So)(Zd`54!\h.SWR%M4VKc4n-:F_)Fu
%)*:/S"Eu]eO50aM#gb@Ls$1$3EF9WC5-GLeB[XOo?W2X,#B'`jShr\(97@sg8NJ!QAC?DDnar4RV7B&fWB[s@jM&Wr-[L/Ii5%f3
%@qqqLQ01g>7<nQsK'P#:*+B+]aCAcfH%XX]_Wh*cB*g/G^[^Af[bH*D6#rFBI1dk]Wb$9j;2[`3QHV]($'tQo_V0EqO'iSl)\&kO
%b'4Up!H'?h+^u'DO+e<<d?Lh)OB7V9Y%R@-$M!uc\0X@?;LLRST4EoR"L+Uh;0P<uB`02XTt(.R_Lcl&cOD(h+<kEcM<6e!-V;q&
%k#bSN1t[S1"<Urs7'Zr>5G+#eX=T9$e"P*fZ8C2l$!\qlQ)4JkUI?JKdMFA>lQR)[^:Nko,,e%$`a]9kMZeeTNNnV-7Zj!4W6!H#
%*M^j1@kfs,1Pi$K3@-0H/4%4[MMMLs<C2CTg<du@gN=F3MZR[VqKeFGpg(g7$'c9%*o_bj0(mV$/gb7/fX@$o2j'odieiTS'T>Hb
%b'U8fpmDn!BHBmHDj]e:@sKQ[CTJ3b?k_U0=i.0IaM;9V!(+S7e$s'PU+-f&f$I3%5/qs+O/Pe2b8"7oM(u721ga2dRr.MiPO2Ci
%qh?^ZYD6$%k*]=TF;<-MSDbg5"kG,G6R;303]b7KN009^?1?KJ'sj8+/:'soQjWBob/e`YM!@`+3B.5u3S*Wj%>0I!A1Sf#lmuTr
%`*?cWJ\d2`J3_tN#a6]W;4HT=8YZhi'LPcD,3P::jq-$1UIFM]fc#Bu@k'FGHT[EK/Dh;eW+;EA4D=\kKN7(W!*0]Z#(:r`WA,*Q
%qW+[lREUP#AEQ*';GrHfoLFq]@Y2'%;GBOt;1lk%Gl`pJc6IiCYn#=0%\kQ5+SC:$ThU.l2L/T*GoLPDRp&?!P2l5u(!6<*>pnQ<
%OQ>N:+;@"tI_n9K;?fWZ)c&3n=@iY)AtBW6J]7fa%D=eB+mD(40oPV`2#_pcDPQ,Z9AkOI0d@!M?Vd*bN9RF:TlJ5YNFh[DBR[(Z
%fX6k,BZ@aG(SbKRdB"$mrF/GsJ386jYVF/:\OZ68VCAlP9"4qNB0`MSBJKn=0&6YD/mUnVWrEjFeC1(39NDA3:pba--u%B^&4Np7
%\`E!X@D9]_5prQG<K@8^6IT]qJsa3`aLY9&P)-a1Obr5k?9GCor<9#]kR%o8'!t-W-bKZZfU=m?R">DWFM\BIr?)0@D^9$pFbF-V
%1\l]%G/.T/MsQ4nMOY8Ka@I)3f*6NW'Hm,24Q)T&H4c9c.)hd1&T\/<8um&Fm<2'V2>YrOZ!j9aZ.Kpm(5ir0BS#\+g`r39?n=^o
%/=%jjaJ>gInKoe#frW0,jTO'=TS-#8^JZQ;@e?D7Y*h!A(XIXa;@kSSHB+>)-&)=B\80g@pEd"62<Mt+m9LDMerFlX5JRrk6'&c_
%MLEUfL[<4^QtSbi&W=XAc&'!c'1cm)a0UGV/G.Pa5@m>4hCnO`f'k*+$laV*Ln9p2IV^VQGUBdG"Ik3"ne'pjI5rM[_#toa;)OZV
%k>\gsW-(cf(.eCX3+cJANf\p=ihA>AAA0Zl5$66CQ?ZT+!*Sb7U1@6gH6AFudJqWPg^5Trf.OQYl*1p+(bm74gSK?I^l=]>7)lji
%1(f5(72&781AZgP%J&smbQ6ZdL'<R[/<(OQUpXp*!)TcWo1%foYROD!LK7]<!cJ3q730;:qJP4/__60GKTR5[Z,k)<TIhJLFkSCe
%81^\RnDV/qQPc<KK]"'b6q#$d,ac7^4@QM7nd`$VA2)#cZTpj->0A=S=QJMX.N7fSIdkZZ/d@1:94@-Q>h]/iU3Xg:`@2A_S$;^_
%kWqH4(.7"RZpaE1Dq=rhI@3&Mj!4_trD>7[rR[%g38->(GnQ)h,a7R;R^Q>'M,6V)<4EIPMN)1!SVBKen:1:7)l:^/b'mg!;8o-6
%ITpKW+H<$-moOG9S+Yp;IbOh;caL`/YOt-5LZa9&od2Pp26\J-^].N)BE$b"]giU"gWa&?V/al[hu?F4X3LSsZPurVc$&KHYaX7t
%s%4B11K0f.P1aQ9/(=fPNpGcK[FXu#%SQJ843YcEC<I]o^M2C<_h2RuUu-`f/iC@uok#`%Z.)Fqj(?s3ZtKcRmnrZb=,K)SU-dj:
%WhGNGcu*B[W\oC\-)4aKBD\lQ[rSiZg[CpVY?l+2gLg^mj`QfE"T$J3`N]4t9qR,[]j<d:QWltf8nP?alPsJZRa$06r<:O-@?St3
%&R&L(."UFBT[p&rmEBaWed_N:1f%;rZ-$l)Q!5[)fA+(E/iFV]GL8`$7%@CI^>5&4.2Qq:UW'>f)MoNlVGXcP%%3$n3;k6H7i)]p
%-j$JrfViuQmc@rn?a-GmV4..>PPo+,eiDtj2c6k`DKfl]HFWpKdgZu-d+KX<OjjN?ZNG?'Bun3Zh;qP:hF6GX>l6cA:S6LHXfaU`
%+hu@4gZ9NDQS)gGr][;?W-l$o<3'*T+YEX9eL8uu85:\EJ%]ir)I]XOg[B:&%TcVt\J:9VnRK4RImAh:_l<TT-S2[CDnWAPq(\G.
%gSVE=_pc"4jV(qSa;N8LQ+iUN4fLkK3Rd<3)d6LE>9j)t<5m.uV)=^r>W^4$:A&s4Mehr[2CdPRpCqCABbm!#n#"[c%Qh@MGMmeY
%^%QoD,t6YGe8jVUMT,3Y"BI.UH>6#kkEjN:]Q-aPiQe(sj1,Vjc`]\/7aOK!F1Y-.k!7E]71D^X^Uou0ZV0K7?cmPuf<0eM@Z@6f
%<NU8)la]\u?!deT?baN4CjUBY)ZL951<b\s^uc(Ri"(KjP9&`&_2gFo3&SKG;:f0_CA0J@hd<!i(_^VLUjK_Q`EWW@K[#ft)1UNd
%[oWg;+ht=LYIBP7HY+anYMS&D;V9?qn8X(]o2/UO4;r$hV.Gae]3g]:/2hr_r6?%pK?V3RPnR4O'ebP/\Y8TTm#`YS]UmnE]1cV9
%Y;^6fOY8Zaj[Qu>aHmkAE[+q/jNBD6o]9!(1*^.DjNCggQb2Y.Fh6+4pq=[+M>SEmi,k#ImM>0@H^Bl9:q6b/NA[#Hf.ba(hSNDJ
%pH"jK\ZpB>#k,?#:`ZW.;mB$h"r1ipYjtApL)X)U.@IkpE6np'=4$8MA,3L[l^)mFK-BtBEr#+_rI5#\B9oa`8;!OaL=m</F],C%
%#)1];))c9-7E1BqjH[u%XjLEK@h%=Af>#f5;'-d[X906ZL9'eaG^g`>*Yg\F894/X78q8mma]MJ6F5)(Q5_9#RoG;,fB\EuYLbrd
%=2O>s3<]mk-0(QanYYiboQR@h#h.]`Pup$'m>tO6R.*T6Z?d`ok7[<uXms'(V:HaRg>'7+N^&\BY-FF(hn$@AG[n7,E,M9N353W(
%:IM&.?ip;^'O`"d^W1(V5<$$*b@Z!)4IA(;L;EeY%M.jeerX&[QJ8h8d7Mtb[q1#(1h45Mjl;>E6oEi3gkKV/qV.Y_DkG0G6$Ck<
%63"5LZPKt[6bqXk2.BHkj>q<uaRJ`C^e6Q@4!2I9RG26/OkcO2F[r`a(;oTLIJ]sJD>nYoc>05pb:Ug+8]`HW/>)sb`%P2-]trs$
%AhMU7m\mUgpVa'hI*L$/o"n9.^M]&.Fkpl1@9#e]ekl<Fj0@9T*T8'>J\'p&>4WsnG#uW7XZ26(6B'_(iK`h!bXd!Wqh^WFG9t^Y
%5F"<R$hugFBsHXZn*Bbg5L89fHB.2C1\Z$Q`2>@e7RuJ<rP`(&8:7EW\6F&#IQsBgHjbUL3WV2#;E>ONDDHf(\sd"tPtrc-$L_Q*
%0W/LQc0"Hn-leKkNNg,;f(o%*_7K]H!p8Zl]rC]'IGOR5V:qjcRe<N-4K3"6Uj;qac'&JR2lV)NUq`_TT>-ol;QP"Eol;@sQNaIU
%>CWToi<9WJR>jo406?Q`H0T5bj@+\2]6$[\`OQH+/Y-8dEp5LS[st3ZX&$n137W.3^VQWsi1Sr\<?qL2q0`M8k/m'`A<rg)MW4?I
%_\DHU>UJ?(#H=N&)e5K%mtoelT:9$%6*4HhiE1lo5H.n&l0\b@A@L>hOiUB!X8F1WKuH43e<6ha00#A?;D!TL\uB8*X48-&;JG&m
%g*'\1Bbo4eo>Xg2WUrr3=)<sGK@>g%Mb8):A'9`ZYOhAkjo,e)`Td"%:\T<:Ml`0/Q*oc4AE^"=XV$jtA^'n\qumJ,go-d>+K/M:
%pjB3e^X?D+E2tVk8nAmq#"L89O#,jW=t4@dni$1)g9O\G./k7/7&c,#;20kFdii4cM=O<RrTJV%,&@5HVP9luZKN(cU/^PQ/kS_J
%2ro"*P`,*rWb7QSOt%7oQ$#+07JU$:2p+Q$=a*qf;=92$\J)M%.J;jP(Ze,-;9V6I(Su.RE`#^AL*;n$UKj$,bs`L^q=]U4dT#YW
%/knt++*%s:VflclT.if'BB`7BpdGmVY*Srj>FHd1%+RKM_h*\OL>(j7^PDh.I6ZsFld39pG8NB?ehQeu(`&RbqI8a6hBBYK0]fEd
%U\bEhpD<fj(Or7hjc?SC\lBQLs+5[jH`rqXAd1i)D2M"aHe6q\)9K90ODF8TY)VMr8?NDbCT5rs,hIc@Y2([V/Sm@!NVnaRg.8;N
%>HBE-TLRMdcsZ7%[+7]ED'[[2"fXDceV46Cf1I\fQ,7Jm]juri!/;@)l1cV4P.g0,P`==/B\:BFZ-cCQ;(?sPf]YObhAs1r.b1q%
%mI6osl'4B+CRtIL-)E^_?tRUdARnJi?B#Bl0$ntA]0Hl^\)F8NRd7#uF<#FupK+c?<`nc*;llkIW.kPb`oUQ'I"i3mIW&t8UT:rn
%m+#@8p9uXh1q3<fY"f?`F/<$md+ulfqb3db^r%#OF!1?/^GGg(S-6B,?[eCY0t67@a=tefe7&5IWGopfp1Y%g2,@E#%N0@-]uqn_
%2Be0ND/PO6;]Ku\M(P!"4ni9=W8S8P!lpX]I1m3U1mgNm2apojQgJQqo.2Eg\Zn"s2T+k?_7[TA%-I&$GYg?.L=BD3gobd\:;Um0
%6$4]cj'B4ao"#b>G,WMuf_i3E8_uY]GtlGncCISBO<ZMA2`c>N1+7+.q!JA3j.t,pM(W^=<;d]4@FK&oDq=mtl^RS<O1kSS?K0B3
%D[O^Jp4'8RXO7%9mp&c5rEklYfE#$m6>B(Vg@H?Pq2Y/r7shsoE6n7oIi$T$1P\GH^8!jKs*chThOa3'P7/[+C#gZOQ_X0tXOiqk
%/KD4:Yd$Fp,$Z7[]QVq4pg.ae_sTiQX=c?aji4.%_qX??h1BQn*I1I+&*ik6:j$$E7aG]t\Ggj97ZH3%?R*:7C+$\OpLF'!U3gm(
%2aq:dSL0TD-Zi9=.+-p*=mO$FR4=3aC78?BDuBm631\g'^@:D+=W,sQqmBMUg;-(Y',I#G7cj)AfssjrC3?NJb#sodbmMd?HrCF>
%o\'O\lD12t<7d>+mdUM;W\a`$9k\_rAooP$KEha?Y(;gENY`FAXB!N*UQEkOA2FW2%;j0W#DaX9UuOrb3?!U17NnO(aCl8C)MO,>
%+eqoUB_Xqa_s2QtYD>UFDTCcJ$@Q29N'_.3XbrgZ_@!9VG5<%X.ZQOHm>W^e3^Ft](.F'(&24"<,!..]k0bjL>dlZU.]*N)72,Z1
%:WrdN*8f>?q[XlA_^sdHe;G[A*p6dL7AFq2B*?*8ZAHC@j#!,?o#iB.X^S^mRn.a#_f/s@OU_nsb9h+#6e6&/c#W2Lg\S@Xa.N<"
%LnRh1f@b!].E@Qk*8SPTH^*RS-Dk"A*:M$%9\3/8_lai[m0MSRj`pZ%ju')TFSjKte%P?79V^@/rg_`0/ed'9gR%nTb['PGJQ-;%
%>rQ_lXrI.]XYdVYIB%U]K^N=re^sJfT:;RVlG.<e9t?!#6dP,DK7cqO"hh@^C2-5K"g%`rD3]#n"@pb^p!E;OF>m`:cCMnt%=C2.
%aRpN:8f9X'I4&n/W*F3=27alRBSc7`*a5Qs=W_p&,7j/PYlRaIB`9%Ad*f%)jIqPq[#p,%o$D7fAk!iqa@#i74LDk<eMQGbD.=d7
%P&tV$[@"drf<"54>0%0,?J"b9YHt9T,HD\u8>\ht%@WGM@@@;-;l5h?9;:kB6lb7\R/dKZk/lOLc<RA:S'on_d:KeT@NDF#lpji1
%[>N?h97pKoS%WD_c&G)c$\q1f%ZN(\qA1b(g+RZe;EOg-$QGASCoPg16T9)DcnHD!C$=^5f$9[YDi1tah-.:.Zr=$'8DJ&=\%-[n
%9r^Ur2mp.bmpr3A/UpR$[WFIF,WiY)X!lM"N2L]/DaEa'Eh,Q$_]!)WLQ.c30$(X*b;a1%M>Z]*c!%^MWc@bt+!BD([J,#j&s@`Z
%Pl8m5m#m+de$7)XT3o4l2kLL7;u@LP$7WmEh/^Y:\YFh]+nQP/Oh5T0gkA]F41E:8k`V3R)uPCh<bci?aZ-S'7lKWcgSeghAn7`u
%XOK=KV5?q51%%Td9=e[CIF:bqBC/uJS^c$)VG`f/WK;-.dU#gladl%N).jJ0?#M@G@I'%32cS(-.\)Kg\^?_\cWR3U:[!en\WJs4
%Ep#p[grQ%uNUC&OrIg:p2fe(6SBK`3kH8qH6RoiYF;r-b3a"MF1-G4Ao3_IQ_pPk)UPo.Af1HI*%(kZ0'#Q31RTEcunU#uA^OADe
%0T3&.pIC+Es#d5=RoT8Rf(o8j\T5?EOeQHg>cDjqbbkkIld:Gl2Pg??n/E/K.?_WuY2u#'W!%_I6b2F+"ZQI'/Xi8JL0KX\p_o%,
%22/im#,6V@;PrE18)KTI8,8e28M<eCf1HcAN4Z\N$4Q5WTlbKnVE3Csk\l8G6lf^Qs5_on_IAM>o6rPkSFb>#m"gt^Y*;l;f@Tep
%0\t]IKa?at,n%s%U[n/\ls-GI[CWsK^A$<]oRD@1IiYAuKAp^^2mp@pYC06MK^":JQ-__Nj,fb2fD&Cr>@=5_O\!f@^8gnY'bHG6
%WnDB&c&Jg8]4fHKN4G'ZE)"58IkBsS[Hl-43\l*^*P=!&h.ejb1jDY>lcs]9jHeUZ^Xi/I=a*(`a1!qirWAp/QmM[&)T'79S9+)$
%pqFl#h"g$sgF!;f0AFWEjH?CV"T#YX_E,Etr8i(Q@,9`Z0!d:9Bn`:R)dC3fr_A4RF`V=hXVo=L>5.5+9R1X)XjN7'>'I;X]@=:'
%D<gY7-+TmLOOjd]Ng/Qp3MoZ6knM<[/&uaV(iJH&%M'fG3)YdO7lamg3Q&!9YO)SP#2OP$2!4#6#&c5.IR5(a$U0"WGlQUO%,O1r
%\_\&bU\e/=;sBTRiH+1r^1#q?1q1_5qmgW@+5KRH\sK?+!a\,!@?<59^Pgsf-#'S!NB$"I@[UiW\KYD?[L%lX8\^sc'dmR=SE^<O
%h]O6?!7BM#,MmPtnV:KBE<hR"rLEEIo/nk@,9tGR)7+PGP)S'nmbTP*-"Gu<T'uX(@r6_f,nkcCDB/f<TX:7oEd;O0`jqC:0^LkH
%5:><*a%"0)bCaRJdq62[^:dP/FAagJQ1%\cY->Mi#5.@nYASX#*q#n`CT1"-./0\nLH7')1]<BO,,JV@ZLs!qnEUWgcH@&m&XiS)
%R4XK@CbV9F,@U:]<4;R/Af_AmJbJd[CmSo(]<_J,1S3>S\i;Z1]$i8j3X<F[(@bTX^]*<@LIBe`&.;cF.L^\%j!Tk=gkO1rm?8/3
%C%$?VFZ]1,LKUQ15k=UE29"6%@c5O!J+OaPM.if.8%o(>f"<6bK(PqnX<+gnl0Pb8rX,I.34T3"Js;EmL@@it-Lr[aZ+&5]`a=J=
%AIaUkeshXnl@uKqRapMXiF/jNI.G&P>As$f?_2,cHh=ncOqBNTD=31I`HJG+PZ]Lqb(jCeZdGr()?r@KaO<Jd?EYB,<N)td1n4.u
%HL4^m/pKK;S]U+&d3;=]k?h?F-1f"]/t:fVVf8)^ru21B-N<uCq$6IAhsPCB3tFBj+>4\Y^Dd"V$o7L,kb1Zs_C$P0FWr&BU@$Z+
%Wuf9GN6DK4U3'?3HWrt](;8ea^fQ8WTf8Q[]/JMJ^2#_#`j5a$_B[P#P_0TIR>r6U)oiFDDtE0>b$]Yp".roH]<>3-(P*s?QML$l
%aAi10&%B=u1iej.aJWH3`^tId!2.8.#K(Aa>S"I&:_pONO4AJui$jjk':8g(`\XQPh?8RI4.`&0e;#X@U!mlM<ZaU<bBWmp+F<n#
%s8HrC6GJHWq8B%7%sb5*kp_:V?aNf.8Qm9W^^mo(SEr3#kj&1@MMX-cQ]7Xc?#3Pf-XicS/9cqK-MHSr!mhTESeBLOOHB&*.@0T*
%h36#=ap"!B>_Z&@>q*`?p85QjgGOX_#MPOYH\6u3-M$Z8/a?\ub`s*5+G95!:mmbgFS72t::GMS0MqM`1Q!M6*35V0SoUAi/Y24/
%&fj47AJ1R&PTg(C]A):PDs/+(HCO-'hQ.]P")W+ZfP!/I7m_GQ;4#0dMF:^&hK</H^d[\Cf[V!i["RV,m/#>u;2`Zc_3p4*PSC;G
%)QtYHIP6<P)mskL>.de;<CSJ9**?)BQR;Dga2lJAL#r/reCfm7%Dg0k7[b[td]D^%@9Lpl.*]]eXDOb9dZ7g>;S&7?`*U#d,sjLW
%YdXLBQgEPYn=[D@XrS#/VdTn?fPFm-`q-nCZ797u-lYPo*WK&ta6RF*cG<lfZ,3@MD[%l01?k",>HX,^141kg#0_J-We2D.BBmV<
%c8<\IQt@ZT[?*Q&CLp+\RW-mbgR6<0fEo0Xoi!nEUdTYXaL')AWmn#=o]lDQon6XUXG:4!dUG-iSTB=e+C5p*eQ+8GG+<Tdei?rX
%;XPOj1<YX]CR(r_UL`]i.a<;:XE<d8Rb^/8ngg,UYM79;Prmg+?2H!36X!T'\_Z([QJ9q`s18bc0"SoFpoTi$LV<7eR+Z;aHEFLe
%i"caRp@g8I'E6h4/6-KAnp[]IlUJJ5FWAT8F:K0EduM+.j&F&2U,02PPE6DhaNA*Zln!&$lUJ)4l?2.+1Cc3F+gpZBKMF@,$Tgk2
%)@W/6@64lr=5ND0Nh^FP?X?g)l<#>^G*1#!.^sC`%99E.M.lq"J>AA/4Dp8Lh'DJ0[[Sue#L9!'Q[r-M$Su)3\)Ot23>K\rn)_jg
%WL5(MCQXnPQ)o*tO)9[FkN+==:BQ=<Q"#Lj7u]1$]@s?Nl];+EC+!f`^m2ga(J]%Lfh0Q;M&n;$S,;=D<nQ]f4/[ldi[_FG9tVrG
%pm]fl@B]p)/(o=`R7?<]Q=PZiHE@ck3o+uN30qIB+*Y13[W1hB\+Vsi-3DkQfNS-`gR">j,sA^]<c3?sgF^@P3u>9n1>BJXWcg.9
%n0KTQNMuOcqBM#We"\pNVa['gC\&PZb+4mXNsjP*->$:rFDDbWTB1+qoFg)(8Jho8>,g+W7)=]QrCt4Z82H9P[hH]_<<uRJX'QZq
%/[H@E&*o@0;f9n',st&?q3=j]?B8."9A#o?l03K)85?)-P%aPN+c^f)kc)f#A.1dWPKbQC/tcsUfrg([$h0:H>An[\5>NDG]DOfs
%ld`U)!_Qd?Gpct&'8+Z!(CFn9Za@96aTFhS+K-rd#E9Z'@]jWKb^F?rk=DU<hOda9BBquqLa:tg3.5qAS`<mhT0R_X-g1s(0ccVH
%omqb)Y]$!JGYj1CA30l?g*YNgGJY\F#UbiuCKbQP]kHi;1_,tBKTo)LVok)EYbAU8qilmjPDUDPgUMdYA!+b/S?6a6_/LKBW1Aha
%maQ>2WT0_u70I^Lb@D1'W=+5_3Q]YM_nPo7l>/%*Alb3)Xr4b;X?+>UB3Matc%B3uS3T;=X'Nt-gP<>7JL#A!SoS_CX\NcKL8FR*
%Fac0I"Hh+Tl'u?`hle*)DF-OQ,KNuRe4PP7M`U^HQ#!h.]g4M*bpunQC-Z*4dDnPJS*T_?46IW:A1`r[SQr_QLb38c\TkL1!r*E'
%<18e!Dh)(mW=^2;+g/#KFa.qsgP6M_"UKXb:8QBp=#fk]/ZdNL-OI-Pdj:e^$VF6^AR%b?1fo'-H.Y;.1![YH>!G#Y``tLT/pRK\
%=SYpmH94'Y+%FjJY>H/k<i=BG=+4CSM(Fr4gWkGn6T/$OO_\SP69@_2L`gstaCXf$H5MQqJJGq,73X+3!6PtU[$qXT\Kmk%+pER!
%1'[+LQW?0_/A,pmWcT#P(G,(BOI+Q[2<%&45c(JkMF=OD$kGl2<AXM:1;u.+A,?m.6.=;F`!]"2ZU%l=`<)+#3gYp8H#i*(cmsE:
%R'-C4_O7Fk<.-MZLCG*SeZ36q=lJPo`^L!I&20[,dMF?4WnGcp!e1el1D)].O&b.ZD$bEh&jEC;`C[&!r&DEJiVPL%h4q3&,um5M
%''SZC<`1/K>qr5*S8p7C%<*4_+Y962?+ZG(4t3t%43`D1>dr%NK.GQq],S]Xk@ie::0@ao;i-O4YMW)oA;WCV#;P_Ic?l+DN'DKK
%YG+d0"LGa1k4'S-IDWAEB:k*`!+;9lb4M`?+uCu/=`E2#2\u22]1c9`gGL`rb6)u*22QK[8'U`l"6DNE$iB&Z5j5Qgfm*ZnWG9,s
%5%sXAs!q,&_L7LdHlAmhW_Gc4f-SI$"'t&$mFSosj]3i[MX&`r;`ef[#?!md>L0]\<@Hi&7GFU#F]hZ#8i>7X4QC-\BMQNt)tJ,%
%=,KMJ*,2ZYZ[9*d^oI4[6ncO\<NDZ%"")rUO`H7Z['+\qXouEtclGF)@&l^CO;'C8@nI#nn22&\QpfRJ?l>W7[QAS`_<-s*2[+cQ
%FVCi4BG0jX:8L!YkfYmMM!tt(T2&W`"<R,2m:>FslNb(F5X6OYF1W(*>!1n9,ohuUr[K)oq0"\qDH(0XiER)R]JSnm3l!Jc+c9K2
%[4>cKkGPiF/ls4&H&AnEE-@,:=2n*u'FRQ#O5!nC][J[sl7"''*d._*4UX==\TKCiGqP2#7GYeqjrU[YF`I_idHlXZ1UREWB([lY
%M<ukFU:<sI]<JU#42nFUD/MJ\B!Y.D@.V@s?M<3=-WY5)j*@k*.SmDn05_l5NNZLnle-+ONKKd=T5Ql^hg!]]C8J>!s7dQ%H:OgR
%jjhpHs88)*:4F^)ZOcJbA[>;g`i*,!=^BbVVuK-%AC\$[WtgiTghYs1:>Yki=Jn(kYNTQA?XA*q0$B2#O&3Z<[eo=D1qgGLT0FrV
%WN<bJ`s)IPB_`$3nSpoGn%>jJj(!d-k5A@^Mr%-eU%:d"J+Mt,]pjJ0O#o2Bo)2hm+anTc>%:d['?BDS]mI8Lk"CD3B4h\rH)aUo
%[l)p62mXhq/JZ.r2gg"4O0_JdSp[$ERkhY[cD!ARDt?J%9gEc@SWeMV;W6Q_j+#kYDX1tMJ&`BV4Y$0r3G\<P")DmoFu-o)XYWgX
%>'utKhG^&4p@$7U-m%/n5#H^\ZT^1p(nMLccPW%kO(XMQEQ)*[`Hr]hNA%p+ej'1.[dLPq\aGC0Tt<,Xm_)fHc7[B_SNN<sE'hh>
%LCjt0^-9mlHuT!i$565([0\nS@t=6r*Z(P2Q+rughLG?hb)^=8jfs*(BOd*pXDIPWlnQm=^=n&$>9DI<k47NDpKRHqlI3koV7CT8
%B/Gl8r:YE5puM5?dU_t:KB:(5m[(oQq<Gk1hqlm!',9!cFp%AkSeE6F:*+o.T/7(*V+7AI%G-#2fe(\p5G+QN>$EkVI=#/fAsQIj
%l`PB6=8D$O\`4JZZSPCgD,3NunR=\srU<sb:ckc<CkR$'nO]l#G+O"Qmgi$KcfWio*m_M^R'F>g&*E16o3#:"krdj*g,C)Hnh8m[
%*tUWNc7I6FY<EY%W[mhC]>aWQ]!YXa-MBT@Y&e"4gQ`LpjuE,=7N$RGK#V,6k-o]jURB(IFg.ApgTr]^$MX;drbQJRGVK$B.P@m+
%4ZSF&NR<6CR/b9g:Re]DEH:9KA(BaLZe==WRu"OZaC_'Yk[LE!)I_)*5)j-OfAD&#5*uj%0X2"/WJ]ipWDE:G?CGX*`]rm\g%rq!
%cLdfk8$a?/lst9Uo$_u0r*aS.HV_oQB.#h$ilT4[%_1Hr]WmutH<U?1SR1#fAfnZjaCT!jN@e`amXF$;c@0$pRa(6G:1r`"CQGgA
%al]Y*g$uq\2;Z$5[<f%4X>B\97FllHr]0;4HgRp7CsC*,-2Vt2rcRpUG+ldnS[+;(hg!g%:L7jJTC+m,bW]g01YKbC#K:N<_t[P]
%BsN.?>MB#K/GjghoeF(ad2L?FSF,FEX6#2Om/#2!l0RQ.]97TMT<Dh8=4Za)CZFgJlu):X=S?V'iDTCJhW#ghoC;3`0DkQFrF>QE
%Nq4s:^UpnEXhJZ.b8sWTXCdN^j_jd:dWh?HR=Fr_gYBk%B>7I'I*6[TWommFQ#^eZ]X>7-2Rte23Au$Pp@['3iMeOigR7glAuq76
%`[l2uKSC@c^<XJ1o@NG,N@i@55)qe:?[aj*XSqSA=Q*q/H`Zl8V*29XBr+#%qXOC$fLC#.*o!^0C5fjomd?%I1T7(0q>/arhKF'\
%D#]0C5$1oaA$sq<_9$rfdo^D7?bnGPqleiGZ0h7unO`WBdJ.g#s3:?*[ekI-[,1W=cD3<Rm[o_*j,^o**/m,:qYGZR\GfrIr;!cu
%)IIo6r-3V\j"#J(kNh0]nTX$BpW#K%Xg.EeB":&G*c@U/IoS/:dP0^@XhrJ1B/4s]Df"Iu_7f^V$]"Ig4te#61DX;G^#rp5TA0f<
%mX;_AjCKigY>@(Ehg98&BCDtI]Q*@V4mY;FpEhi6I.-+NmcM4Rr:l%o#AYuRmN$fAo^9,ubINJr6LQW<1GS]KI<B"rGQ6]V\R'/I
%\D@),`2!"I-PMEX_=kh<dAs%![?lrP-ap_DZ\`m9h7"&ilc7m0WaBQ0`7M[URhMoVb/n2&>.,gI+'2fDjsEl-PI<EY0KHm^I[GL`
%b>6M>PKWC^bK70$a,S33abPp)hnN@OT.Cp=Hh&k45"mklDfV&Tg$(Hi-Tc6Yn'?`0DsuGmT5sZB?7gQ;^\G*Khd>'hY28(6puL]<
%2moX9rQi0P[JL3s]:&ODX"/Pk]>r6h65n^1ni/^r3sa\<\Uch,p%YTFSQ[Kp]U`4N)*,+RfUeW0pp"(lWkN/K:=U-iGH/:MEbtUO
%@T]%i/'Mg)H`O2CVOr>*jJJ9Y'g'm6\`;uIgD>Q&dpJQsQd`>i3uDT+>MXKE9GG7d4NL6G(k:Im.Xla6oXTDJi43t`I.1mV=aokC
%)1I$"cI'Z;a0e\b*d!lu+(hCJ%mS;e^UZ;0n9f&%VYJ+iQs"o@XO"O^HeY,@O*)d]^97:BRI8^n8&IHZg)FCHW(JT+%j0%S5<N39
%P\L^f.\6*bmlkSl%kD"gV2$Gqa)>S1)EZ!GZP-,HB"e#nr+pi\gRHl_on2DnY4L&0rUTL'g?`fslY*_Nptj*:/:L^E\Wcp`gp<ak
%L<7-aSU-LS?%$fJ=+9uAH*7.@;4eeS@6L'Kh:gSTo;gos>bUoioA%?5f:%'dqShVX,"H;6gZI[I@qmLnaKT!3*ue"HEliRRh&J@s
%%uY@brE#:p1h^9<@V';>L,$sGkrJA*p@OKX;E!+Mf1f&/qduO92P+jTWekZ%]MagZc_r59V7LtUq#!n#I?7Z6eSs8Ahc@ed>LURY
%L?7.<?`\kNjgDM\/\\GQ"o"Tk?WRbdHgK"36,V>rh85-LplRLL^N_[nB"rb5YA8p^mWIlVFg'iL*'`XJ_&I=:=Y:C8SC_g$dnXKJ
%cu?]^I,MOG*\9KtIIkX'\$S-(mI"e-n%&>gWOhsYGW4kMph79G0O67r__$@eq:=;KU5lp%]D98.<2"-Z2W"4iSj./h0+3]Hs8L-W
%\mKg[lt\;hnOs*9I(:+G:@>QB=%c&EJhQ(GidCdR_taPFGH^/l94M*;?Vd$Ohh=S&q:a-S+q:ktmq'2C?l,,%$cV-(cGE?He*99m
%c&;H,h6QS5OYJ`]4F1''>'mW%<*=KGp-2;:qKDB-bN%9Rmg>,J4K)">?8!C#*q/LQHhk2E_Qf[p>^k@To!l40l,ieF#:iUDhQMJ5
%T!W77aeuJOL#](,f%ZggDR<G'T9`+\Mbi*0Eq!m_@sRKFhQuW7gRakT5-(7p\+84uT8rMDq*QaK<./tXIrkDI+TM+`q.T<tUZ8P9
%_5lG7ildY8?MqIG4MKH_=(Z-56>laQ<QM5k-\^r*pI4%KIsJMJmqo73oJY8^`>9K(>k-:4UO9?>ASld.DXpA9C!hDa^%D/22SW4<
%E:U/Rs39.jBjpEX.'89FY=na3h9L%aIerT?1[BNs?C>-?0[$(8.Vm5bAu=>/NSnC,H#^0=r;>s0dZ`iA&*ep#%sM>D=ijH8IpI?u
%Ti,"g)D&@)9_['5M^RKYb_tkZUJEP'G/G[\V`$_\?9Wi<H1rW\63.D=>'G,3DnfM)]Vf_qFERJ0rk[mImY@u]dq3cIm7D0"YdX/7
%VUiI6/nERH]YgN;]Y!fErJ`VI^4,Y:@rWa&<a+-(IQ#]qLU#^RNGhJ1pG^W"H$j\pl,VZC?MAO8<VFm-n!.6pNkO-PVC#uD<sLPL
%o[_OIVQogDqW_qbqK#HA:=`defU`Hu?Z.UDD=)7khO&3JAB-mZm.`Y<+73mi:MoG<Fq=:R5H*q/^L$j-ErPb/m:WV/[s&UJGFd'@
%c/#e&-Yp=!P=o9?9J:;<1sDHeiPFh=n,8*J2sl5F95iYLT>&%qR$h-&H[*2(GrP?VT(fD_l1P%f:EPi$5$P01]UqDlIJSEUiI(7q
%ajThH#P4V[i584RnFMG#kPZbMV]T!G*t&aipE)Wf\"7uiI`bC50V9-3kP%3SI^QlcWOYt%520Xmr:<DOrP@ZcpYb^Nme,nB]p1%q
%gT.tMRe\^UYOoOC)WpRVcQB``o"C=eO6*:cG2JPA5MOsGpJs1Zm4W9mDXQsoG;o9N&,*I^rd&dTL8f!5bR^!$bE[+uI<bOpqPn#3
%X!bM$VF167iIm\]h_0`W_SXlTp&&%U@,oMdhSJ`u1[ECcf#lskp>k)hEMo3fZ<fC(N]-&qG)tq/m<6bR35&.8om6U)Xg,SI_t:"A
%=]tR3rGgu\C[5s$nSp6cY9*-JoA4KMCTC]i[.MME^[%<Hak5@3-R[4]D4d>G<i$Ulqbt?0`mT;,A"tel4Dm@TEo#l9kLQ-bdJf>"
%/S/aW[l1_i^9j=bfbZKh2uh&7kM)JknlRthjhg_tgo'!%h?.],1Hf^hr4aWX&;oac05O8#5c2WU]Fm:[D*&U?3*/&$2s9I`X6!)8
%9$g]iT(T#--4+NJb3+pH;>0..\mK6%-]`\Z<ULpI-Ue8Q%%W;<+hk0`/F>n%TI]\]O(6GZ2NgC@LdJWuWM-^f`$S>5o.r,$X/<`?
%GD1LI?fu?5)=7M1crLcOO^6W'C-3b2Fg!Obb?Erk!9<;e$dD/+[iAGK1j&,X(.St%\nIES)A\YI(7Te2jS\9M6A>76k4bpc-SK@b
%;%VudVH3e5ZWXKN47`*1K<I-Obq!CTos,Ih=1#[q^Z-63GF'k/E'i\eKS^FFNnVaAYWq^^R3Wu)Vd$&l>.tp*B)m*p,kG1q5M*k3
%&lYNRqcT3t-;;P?T\E*Wr5+GiW24n35`&N.@e?j9qfjL!7m..>=6,BJ`@IBA<Z2\cHIV'kP?`%;>6D<1c\gb1V;9o[G?;sP_KMBI
%C+4lXU0jGTC4F"XP/O-f$2iBoGqlk1@],scMrjXY*&/j/q9nfA_S\7tD5P+@*'C3+RCGk3D:FPgafjDg3n<[aRV,MHL)j1LN0.%L
%0Y%-]#e4(6,mHrCh$$f3lkCj#E$AfZeBsM3[_mgIH(]+^/.^aE$Zth$!=$>^p$/'.54A(i,Y2dMIjF?cKU&Ld::k\$->s)7G/^bV
%GkOkA^KV*G]"7Un7/[/PhF]f'9elcNY0I**k\d;(DRK=dQWGZOmG:#09XE.&!hlL,n_'ZL=+X:WZ]dB,PJZ$9UB(VK.BiSj-Y25h
%8`j\9B@&p=k3.IS1:;0kasBDrc#f#`N8A^&&<(#bG;=XgKoJd(%/5A7@g8h01q/AOIeI[%*B]R5`Ftq>fMX=hZUDk+g6$QV3r[On
%AQiWEAOo[OiaM=5Usm5%Xc]S?Ug5>+AN\2`^i9SgU8gnrM2j&oVT(]Yj\3?=m=+!?'[[-l4]+`jghfLo?>1*6,Ga4bN3(&E,4<j[
%Rg8lueN0+)iu%NOjXrKG,"YmNf3/9^;U0;u-P[7s5+TOL[@EBol=.A0DH+_09d9]_$Hh1DkGWU1h^I+A=(`I@,Nqe?I[j/5TI421
%(1KM5&&0V*\>8bC01#aik'EqpX#,0[o/Eu,^=#!di6JP7:MRi)pNEC'@)5LLo1jN9T"*u(L6Dl[eG]sDjSU*QQ*[nBCofE_-sG_%
%12fDB:`3>X(d[+sN$6Mc2i/\fnZ]Q/8t:L]Y&''MkgA6>6(lBu[0JRsf09bB&fD3Wob_K!X`B+V!d+;k(,!C,ieG*%=0kWZE]:en
%Iu+QmfL2&&p.Tlt+'uW'@k'^\=8?DIPcjHSn,K8p2SO<[[D=[fe%=g/rp,gnd?N/;UY8$[`ZA-0*QN(Pd61aUa#=+7r<nh1\$!5n
%0_OOY\93JnZoC??I^^e4Y0+ZW:%[f1daaj>Qn$_Mk6^.dp4oQ[g&U686ke<Fj]4?*s.%"o4_uL5p0:ZR\kdH/5@8*48Pj5gaf4XN
%c`=CrEjdm/Rej'#-g4@.1qnU\c:fh;@S:'?%.]m[\'E\P=3eh`a\gP`[PK+79(V#0at&Gi1:5.:`jrTsl9SrXVl,gj!7jr*@Jj**
%T*9E7G0/.+PpL<B3E,g#dRNrT^q:(b+Ummb"5oUa#"mM#gGluk=a+d:3_aT?.ZM.L42\_#j`^HqF33Ikii<mo2ct<-St.Zb_p-Do
%QBP7i;\29]k>J;D;5nEoHuc&8ccLI0m8/XLkA8Uk1[h96lfA2k7;Krefs[RsS1N:7RBD<Ccc[2L?tHFTU<Xd5,*Rlm47f!m#!pOR
%D%,G/3T%.u[cuiSO45t0BNQ#\6iH.P6Wkh6IS@Z"0XbEP/;:*iQ1I,ib7GuHA@]+REM9G&fu5B3fQT$,no@c=B.REO*3No$S%ul2
%c@M[.Kp8,`Ei'j*-i%UOMi7B<WNWGdWT8%.o`r1rgu&P4JN4>g0PaGrkl!aXj5it\:f/Z,95f4CN$2u)j?6Zf3K[ReolH/P#+5g[
%ioGL=oMKAb!oF>?^n0XINW@i(*KuCt'uAc_D-u!pWN1-?8T2/6j'*EtL2V,>Y1Z7+RgX&t[t"cH3LZcW\hP0J&1UYF`Vld+M(,+=
%;DsDK>.C9)6dNn80$TT"@bI?jF$Zd6kYf<neY1',4A<c#F1u'C>SJUJ8s-"[=U2dmPpomK/dQj!97#mooPd\J2ai1P*8b6MU4-ss
%6W94q[d-Maj17-M$tL)$nf0jrOsF.3\udKU8#`d2c;a'hSlDM_XqV&X-W4Jjg,/rTMjjKs'*tT6Qnk$P!.bdP%"]miJ8Gk8)4iGL
%,QLpH]kt>@e)Vqk66)EpEt+C<7M(i25)i6)KJ"Q>*c?el+sLuc9ZrROR-9<>%<Pu\\t[)Q$A,Mg\0t5U;]:;jE>LQVLsnI\CIEW)
%,N=0KR-095#rb&+#tkG*9K936$JGP*5K=D2[fCHl-NV1S&2D3/r$!+sAr<6hT/]'^'^Vm9AT"5?e+:tH6^#M+,'FA".s+@7:cHTm
%!>.5ILr-hjP9Eel.?c]IK_,\;E#?j8%;:&i%uDH&QKTa7ijOD6U<V(pcQQ^i0I,Wt_I4\rM$cs$bWrE!jciJq08L_rJD)1QM6$dk
%KJ]oMC@ULK"@!S<^?8(MmF'.fa:kEq+WB;CV66M=1`TR6^is8E0m/UI*%SrF=>mKDnW)`+9'!!b)MD"\$.0?*,q`4L=ZsY[KjPkK
%)[4VBNW@pj;ui/>BPcQA3FQ(G&k/lBTQ2S8a&$Mr=qS;g_"CAG;GFmeg+5r"6hD#9QR9VFSgORoV%"c6o,@$B.eOI/Wu"g%NZPk4
%huCA*b8lq#]:#Y_bhG()N=/7-kgm('^3\Q]M.3aZ-U$CF-US7q8UB>M0f#GcQ%@tW1kA?k9p1hGBhZd&+Ac>*)t_Kt\.Jbc,AL79
%#+$`o%p%o.YS4qZqB?eK>)\[fKWkW5'9V!4`$.GSn.C);6(j]mGY]0.dPmhE>jC-u-imhf-;%rDY*'F_<p7Juq#r*>PZZ(:amO`\
%@3EoAU.I2;"e)7SB8QOd?g@h9\q_+GSP3^neJlFIZOfaCkDS2OSjse/3i=1c+d&V2d.%Rl"6&"R$6A,N#I#B`Oll:]5T?66Jqh&O
%V+(iF=^htRBr+eNL#NB6KERR`CVef15+`,3"#\G?*&*rFqZKDn8`pj9&<Pgj%?nCNV@c]95fs-3ja/mY7,i^g7-F]eTu;+.9u;SS
%PmDP6*kkS]?t_h,coNn&dYSO#[R$&r!n)c_UI56KnF2[,3@&3.aM;c#1uc>mO@,l]\4eRtOb"nn>Os362Be*\q#gn#W];t;ZPD.5
%51?67=<^o_:"':9!C2Ne&=(>4TOoIs>o3[Pl%*?D%KQhn$dY$`c01oX>)OdHhm',,P,AN&)cW:93hlbN==)F<+>4!O,[YC*ka8m%
%Ag>.4!G=(pPREmj&f:>G0-_)2:dd;9IAkcuAB@7@li`C.ks.\B"=-ZSl06PcXG7LS*]0c\&g:Z+Lnpahc+oLo[(%Ok+O>rk3=1;Y
%n?AF5EU>Qq'?_$(BF#;4G+brI7Fm4?%?Ut2]mr_s.L?B.Cn<U;`X+Lt&.%N^PfH1bnpN_H3D0K.6,N7:.nP[580BDl@Md&s[H33b
%UM5neYD4F;lM(G<5hRbg2/*b4b(`$$\221uJ19,5Xr^PU&6KI1q.LP>DEnFjllf'RK?XAs8"rE),-Ru7kM)XZH=K8f@/>FG;t*@b
%poIn\;jbpga@JW%Z"EP-EU&Mf'`Wg(XiYW,l]#&3CiE(=j=_B@_Z+-k_rni%"4oG6Viq1h\JfIFaV',#(<B0XVA2L<fM'7`bCq*,
%S3f89+;6`9V+<GKdfF.7JI!7T4)t<&/p(n;U64RA;2U+N+<uI)C(b/A.H2d`A1D_2_W6DlA#MY'WXlcKLbLG(`?8o-$+Qc@A;MQl
%>oPml8;,6#3@;Sedd8Tf7P)ae"-QGjF$#jn!d[g2$C?Sf3Z\JN(tggEE)'&_"a5=Wk7kr>0IT[QbHN!&'g`H96M4==qb!r'ht<]f
%9/m-PAB;8Y$=aPlXson&_tOb4gh#l),*E709?/c@RiQMg`5X`@?T?Ym1CEOp1%.Yq!>&p&'jUih<jYEV8V?ChOs2.XL$K30C+k0`
%duI*ih_A5jOC/JZOTbqlj!]MaBM2RY'?:/6Z\)prD<?rP1(7)l!L\Wm*_>5CbW%eJl\]q+I>qj56\;'^npq3f@3+nA9T]i,1Cs#(
%i%sl\N0mos*XF;<;jI`V!$q[^d'CRe$eGRr#1jGo840g@D<=R=2rFnU=b(`E/p0lY(uJnU:ZP%.C+LGX?543<-`@1V^>K/-K*IRC
%!h8G?N<1o!&!"WW`[@W<9jXXSR)8#5b<VL)\T4/+*&eWEA-.%XRY]o;$O@7Y4BIFDKOQ^2*_bcP2L)J`!0J1g:n_\mqTS^m!!//2
%?n7O84>/I5%DYq!V[(S\OI4f8>[8YI\-ko[M.)3`6(-tP[H\V@,-H)r+UI%'U;VYcbUSi&TU8tBoVBZo0]C3Z7E9G-m/`iUMU.HM
%Ul(qS7O#1][peb/!%86l#7`"1"Af1\ene7t[X;t+RZTQRE3O28"[X\*qD]7LfROtrP%,b`Hjcs;V6VEdRjc0`j+@-:D+hg5$`urp
%#g%IY^f(KHHl-HB)c%k==CkF)%6S&/2Lr_T$Z7^f>JL@JTl4+sea0Nh7]:DD"LF(Hn:+hO6JS8f_b"Z^#JLjC:9q=TO@dEWmQn!0
%lH$A4$l`D:<s--.,G4pU`O<,]XTU$W5-uE5C\ZjBXbi(WhDPAqMV-Z9CLrlg!Cq97:25F/!VO"m<OJYpn;e$$p:4VeR]KF%W&A%a
%eT5t#P%;f4^prreaA=75(OOniI0R9*g&;/1Jgi[nk":JKqQVP`@l`>'H,9dmRp=r/1P'I<:cHrH-tro2POS_[KPAVb2<A"X8s=HF
%--B_%hLa9.>1u:3bi<k)'/Q$2$,l3bfYmi#qk,/.iO3;e<g2J])@el.Qp:[>L<L,s"c6?B"'pRH_i+G8KULK2-`/dq[LOmd)/u$[
%\RMMT.--s$V6s%up>[o8Z)(4d'%SOVjD^?;Q>Cl9(ps'm6*GP,/p)VQ$f<]rnI\%*!]H\k@%g]VE$dcRf]X\kKK'oEBl\(0icj=f
%_r>jEEfd`o#,5.,CQ`*4"u)^=@Gm>H99UPn\o7dL697hcagZpLi#**RR;B5ZO9J_GQmHj)CBX!5.&_'?0F'G8>m$^9'aRGF:FK%j
%V55#+VG'r,@N#!GCUIs9Eju`Se:Yn%=oYc7_]1Yu7A>eVJbTFAl+eD:#-QO5jBGLUllHF&6gZ?7\nu]_N"rs7C\Sa&\V`&u_CcVu
%+>@["*k9]U]*H8g8t.@;&*gq=faQR=nmNJYO_u+B5\CP&AC*tc@unHBdY^&"JARsd`%'5d>L+T$+/8t3PS2`-*=!(dT[<A-RKGnl
%hOUWmE]dF'OJT"PG,36.Z.KX]JuN[.=;!Z`UC@7@#8!B#`sF1-DP0>R;rSD!!HT*02O7J%J]"p[#=%#\-"+<hMrSan%f4db-Q70-
%+h#,%5U\@'6WApP0i=']!o*IfoQEn2\Y1QW"@J"Lg4$;7-G]*ojlAi7N$]Mg"5@@m_\FtcW.o"lCbXK(E4-'m'"Dpdfarq_KCY+0
%%,9l0@))N7\9I""R6knR)449*1(#RL&I,Z\M1Li'%a[uoh2sL/CEJ`9MqTZ0ck/DCVC#(BYno%`9Pl(+QWL'Bl$@bng(PtP'P<5\
%X2LH]Tj^M!LGm+l`c>3)_D>-%WJa%_hF`nB>R4.s6k_2G9[2(+,#RA)!YZ'V66s,J?aJYX_G@NBel[J(=4<%;U?uq_h]PSC6#Zr9
%n-4,[iENR;:kmUmfHS`eCW%#dUb"2L'mO[s`/(^p`+PT,+R,6nK&kQoi95l1ZAd4t,iZ1^6p5@`%X;)b[G/&@f/(B^,kigPSA#8#
%8"h/jNS%iN6cJ`cW#_oG%fmlC3QjsHqUd@8>q?sI!>;Y_A;bNG+AeF>PV<4``#krg?Xc&=%=jY8kA`k#RT:CY@:`5gQJlW8jCpJ:
%DPk`+IT4?e8hUbDW/a<P/''"@Cfq6+H+&t4JWr-[j[=)=dt:9u(E-P=&dr,*W&Yr3%*,Iaa4DFQqBN;DmQu,;:s9.E*S-s\14?#W
%f/G7_=%t8m&_P*(%&/nWPIKMT6A@I@Ab3c_AHnr2mE"hgPUD0VY8oG),)@Tr*`)i+M<Y4Me<"f.b+s5'?Aeqo*BQ#9Qmn]]<T$AR
%U<A^OVIa7km-aWS.)6Aq/n!$S9,gO<VaILK.iO0N%2[$c%iOMC$OZOH(6kq2MPeg")=\7d?5-T4A2tjV)[IiX(_e8Ka5LDW#$QMl
%g/`bW1`bs2q13X!(m3tq+O5f$C?,HlLa$lX<QUOJJh<#!X!To)Z&NE><66I+Bkah(&N)9gi_)22SWQ'P,p?ZS@l+`%&mcnZ'DYk^
%8k`,%&L7iQgL>YqPSFQc@(Ab%\SbpYP6D]2!d6=``H6:]3f$oDM\LoEUZ:O7X&TBCRVYL"<]%?*X\R)h%O,s]k$L(L3,bQ2ME^1T
%4.KpL\dN)c*J#u='#X::/"Zek%;B:+mqGP%4RinDNqS[uMEN8MfY$g-&mmI"3Enb^'QS:)%LPcGLJ(lR>eGSS,N&o)`@da;BJ*]Y
%o&^#+?Khn)%sf!;E3\)7noUfCKs4As6l]/&9f?q"P''>/7s6Li'*]W-J0./]_OSS5I10YCHf]LL2F;+e*3+$q[O(F>YdWEIE-,%u
%'F+Aj'q/s(_@ZpP:k0CB"M1@r\g3rVT;d3k%369gJQ-\Q\;&eJNfCU%B%*D-YTDdR+(bgA8lK28*onn\5]T8E&?[&LbQpaQ2+1.)
%0c0sm!ZYp.c]"DK=B$7O;/RBM!uW7%k^Z.=)HIs]6IY*\HpbN_0VTc;QRKkjSj.Pqbs:u@W-=jc--PHo,tU_cj[6gL7DoYKUI,\A
%Z8srR&_I_"F9585b9lN:&jpA$^nCn1E1"^'9q>N3E?d4M,q;M_>cD1G+iCIL02\5>i?FL7%fE#IpaTP.o@AIAO18VK#e:SG_%?q'
%i`XseXS-b%KdX,V%t[&b1q?H[-tFdonTKHdJe<.2QiqiB=l"n>;5gU&=KfC)`#G[>'W<Z/eDN;"9&O)FP*#E,:hX>jTIq2_L!PT-
%,!oQY1Cne'`G#jaB*7M,o8'ObirK2eT#AN0a3lcQ29QZi`4UYnbl,EZ<dI.I=U8hKo-OiZ&0%D.0I".\2I2D1+`Tro3ph-]G"rBG
%DP9s2E-==NG\Q^pDbV\ke9UQ]I+drNh,#-'1'4.n;Jf=VJcq7"5jBcWE!_I?3\CG&i@Rt^$94TE#p0)bdIms"o&g,L(WQ3qD$-<c
%._'^niS;Gj\\3iXG;.<\FI_4s\S0=Mgs4%GRkGTGd3(D[=j_tUaX3#gYZ224E$`6eEoI<*cB1,C/LdO8+*g(/qp_^D=<&d8FWanA
%,@pm\"&B/3aFuq$MW)O7Q36;GU7FKiCG'TX7O#IVYnul>;/?m]2AqLsjT%A(3OX%Kj,msuENt+Ui^iVMAf/$e;YqH'6P6jO2MYte
%0(Ykjl1`j+#Y\!r0]8^n[^[E>p*_pu"5C:i5__s?WlR;h17'!oR(Q#r2-f"CArk,lr(utTr7E`F37.c@UlE&qA/.,;9FIC@;t!4s
%5f;T'.@&h7N,"PMjn(5R(#G@_YrhAX@OQ882KhXYIMrZ.)PGT6?RPceOW!GD,_VOC*1Y'J5t't5]uW@CAU9B]#)UAGaH!%7_.9>Q
%n2/3:Eaq`H"q9s6E**S?*c0.A8Upn$D9kk:b"lneZ0CR1c><g7;rTJPEa%)rQVpm4hf7))N?Fc8]6]WL6%0Y/IJV?7_#e(U?GHb8
%?j2S#d/ca&3@!#'96V@?9&ae)>Y*`<Q7+aB9boT5duNE#RoL_IcVN2CL>k1E!?$W<!VXHWRi%_@j?/;$h?`Tr-Vq3n!nQ4u?019b
%Y,UNcU&,1EWFH.daG#JqQ6LtcnsWD73M%oQ+kGb<^ul/$Qo?d#i!u_D>\:=%$OIl1+Qf6!]4'u,^M<&t"?/6*g"*FqiN[N!q`;12
%%@T>T-d#.,SVMW4V'D`\9nV==;7317W!+M7r"OL#*!L:<.@?DE45#0tanD?:6r=D0Hj(-4kCc1CHtDS^\dqrZqN(7GGk92Q@f;)G
%%,2s[%9VA)L*u/E8@uYo6j(&IJR%CgX`&Uo[MTE;f!he7i=mH26@#k2_hGhe9H0M1.YT@&KSC8&p.Yrj>/cfBU\1p0Za;YNQ5FCG
%`GnFDP-V`6lQh>n,)jDg:2DgS#qJ)VU/7HKn.*1kbI.ru8Y-Bs&WjKF8OgG>+!Pu=`^)+>cG$Pd&T]9.b@BYe)VQ_G=Z7QNTZn/U
%krN(s['_o(HVoaSiEQP>@jR0Bl*Mpt>EQ7kZ]@8L_`D&m2Cqg]c#Nk/@[C)F`PJ`;C2Rtj9scP&&T`Q%F`Y?f`iR'$X[HmVEJVWp
%I7#FeX"\HIS0FMJJJq5M<Nu;Cp*[`88jrr2>j.VR8rFoXXG\LNkn5q<reVgdSZP</HDdgsQD:ih^pOSHY`8R]5jKkW_pq9aZhnLZ
%1cZ3Qjr?_"ClJ-]'*5'WPDa\3'c?L@?Zd;K&V]>$c"$MapLYS$_NVc0^p,A^M"R__q)$VeRp!gfK+S^j&W2YNc5;_$f[L5UkB4G`
%F#giJk;cZ'"pih+N(O`)]Fg0G&kc-g5n,m>)kh[eknJ6W?q*LESYle=[!7?-[.!;AqT=^@WO<I.ZjaXk6u$f>$u[R5;WQ!g!N]>R
%MVG^OOg6R?"d[2cW[K(79D6iUJ9,gpTnD@WAb4Q+iP<1&2]@pS.lr5n+sdI&Um;ha1g#-O!dX.801NS6)L<_gCaIq>Q+ULNkF2>i
%"!tur?qMm$+<^XkZmfQ9foi`hZeOF:q:KSo30jaVe-@p@,([iQ_K'JL!CYq;/K7D8MBb.I90H/^OS^T7*UtSO/]I"A>R53c33e:J
%,e)S0ITW`S.!D8]a#aAOP%8S=>u/FCJQ!?B";1J5`6,>16-q>KBk_O(+Z(&;1D4X2-S9<:Nou:I[unh5'1!&C[HqG?ht;8udtW_q
%j,D&U96Wd1Q1jhO*g6_tiJF7;K%Dthf$VSmQ4CSoNNi9t+QLuf0@aS,'1kK[9E\!,\Du'^cg%D<l,4_[,n>dsFkH4%V%'7s)aZT>
%*sH1km<*]sPU%EXMdld[:^i%GcMlp6*aeRJ="gS!FiOEKE0F&Q^R!UZ8BI0o_&4/g9FaD.&ls%C5To=sI.2oD#_jWXJ9]&k1/lr9
%LpF@o1,rDX3"1lcDelBWTk"itS4n]8%2E!-dI54qYCXq!\6t+HGsN-P0K;c4$HCVFT;U/J0c>$/F@AncY_uU+,.t_'gZMXB)/t*9
%3)XH$cs:[lib.c?6TD?ON'1`Zd"74)8Zq,"7pG-\ab_Z9&uI"5,QPiid;\dH*B&mN/KT?(D$rP"(Ze>RX>.9,FgWD9SE\rL/19#N
%YV.tk%._IpocCP[E7QEiKou97CifCAW@5r6Fk\&.,XCN2@aa16K-u5;e#OKm[$Zpl*,W"#dlW[ihL"^Xo(J]oYGfNs]aZ^\Mh86r
%bTgdeSt>!NUX56b6CTn@EFP/;1iZtF@14W+FaasiMXaH<QG[_Yan`)'D//pM9Z6#a-PV]_0I%*m9J'Ng+D_5OmfjECi>jp<]f6nM
%"!A3,cqTYJ_V%$e@^UTH"9C&KE^13lN.=b\e4ncMMN4k7nAIGGL7,>C8js"dEtL]B[uEb$AG^.T)j(dtc=CAT&_+rUW&bC^EsNCM
%r#9@co-M%%a!ksI<1eFn!oHY8nd-C&::S<[Tu;LE"oD%N(mUNj1DnD:+=uY@Dco,t`BXJ?#L^"?Ml\U&.o@Q0E+TT,;d@R(!hGPB
%>($7(l8XrDDW6JR't&/U_,*Ks0mO%""Q91m5(2`Od5Y$7@c*5(54[A$bR2YJaI,ad*6\;K[bq.Tfp;2O#h.aL>SP;J%HmjbRup$A
%]>O_Sq0Z_nM"HKBa9aob@`%.LSI`]9G-Y))35+Nt;5C8hD%SSom8F`_(gh/;'h0F*`">N;bVc0(<ab.!EV:b5_f<$eY*]Y\"DSsJ
%&S)c6"s:1_5.T]W"NXRDWpe)%73#i[p#0@aZD%bNTM]/%Ou`d'Lr*IXE6_<mKgXmjP6rh'I;`Z_o<D.'8'HCP`:"iM,9f<E-i9C\
%EAca.5Z=-2V86]*;[55Y&j(]Y_o=+'Pa+#>&h$<WFHC.qZ;AsV)mg#<6\jH5a4<EM3lL0<PD#?KNZ;*-9N.QTV?OsEUhu0PJ#+@J
%KbMG6"oq4t530hJ%rQ,AOUsgS_9hPCQmI.rT$`s?)o6,+&.MSQU@>QFNla8pNa<Ys`sDjE([LsG68Tg6n[',e&`'CAa9[I7'pF`u
%=i?=Gl1O/W3Pk9uAJ[jIFOm%7/0e*=XAGnX>DZ5ah(W&QOX4n.'prtm,<f@E)Fd\gO6==_ill$Lfrh+K,`<[).O*ZfHWI#B/%Dpk
%S`<93UY$iphX6OI1$2A$B;2*LZ$!#lB3nu#)HmglJNdIT(lgLY9r6ZJ%b!kp^iVOki(E@!Mel->6_M_c,`?<R9eEo%!*PQ#+Yc/l
%ksa6\jG:#*C7&+8'In&eXH&U$^*15(a+l0@"9(-3I_,[AK?BiCpe-FKT1GZ0D:Z4Y9DJE88j&US7>WJ*_PX/t&SLo6_p^[Q]N)is
%bU#p9jHHI^r3.3pCc->p%V;6gh_fXO(2"[JK+91I-?=&o7j.1-9;`!Q>e$g[ilsu=:a0KO\jsalWq\VDKr3j!"1k#>NbNd1<9#qA
%HabsRNsm"oR2fl6oE&mjhUo-IMnE[O&MP''RCF8.J,uFOX\bsD%8c-Y0\lK>D%adb1%F!9hLtC)"[+2Q\5%.>i?SajX'?GXSDJ$2
%D+F+[N>nM7Q%Zf#[?7if?!B5JI?2i:Q-MKZM;cGt-_$qV%"/FB\ROo6e%k"nIGCFQ81mdOAaY2W&P5>5;B*-![fQ;0N%;.`S&78=
%N:EtlC.Or-A2[RKVr/does-=p(6[jjKT0"Bq5QE?mRQ"P^0sVk>)"9"5]&^6@*+rI$l[IA$2D<KY9PoZ.1nB]E1J89cf3r)CgWDt
%Ea]H7Jq_#s<X+>t=e[F\^P4&8cOj,(UTgRAVAElsOX6ug_8qmX*;ESt+b_L<0gdLf'Ta-6*"KUH1PYuh;j@G$-8IB*]hbSge0Z@Q
%-4DVY#">\/BNk]jTuoZocIU&6>hRTE&0-YXkC?:VoAuDHSJ4?1`nUtYhC6K?1M6"3(l>AI[0G%o'XB"e7n:-rCniDmZ@X;(^k4Tl
%kg6Y@]i/A`CnQl'kXRZ'\<]B'9Z.1Q;2Nc@),<f%+2X#FYQLV=+Pr%YPr;<cKcSNB4ZX306TmMe+sJ<!#turj:jTUkJ170s54F.`
%=!1"7.l+-bE=e&7i@LS(CO$OLZf+?GTu$=0pcuAr.72Cq"R0`uO^JqW*u5B'3BN)>]'Q*p38c)C*f:sF?`R!lJiTT6DTXsP-u#oj
%K);;oS``;G,4kjg=Dp1oZ<sASh"9Rh6`rVATU*ck_O1Jh\0,X:Q[rZNEfOHLegX0=YT@XLK<VK?n_O=&HOro,lpW7ZK]"#\%:)h&
%9FHDS"?BGsVg'mJf'A,Y;Zp4nFVP`#.j4sni)`Zh<`fP-8A$_7K2fq;YXLK":'(T#.)_u*cbQ._16nh0i;eCp\U\7p%!To6SC_Y*
%s5#n6b3+Z`Hn5L7#*6)T'K1mFZrgS5ODjO-\tL?7%6cCbJfn(G*q85%'GCW<pF6Xkft;.=Ji6\X*Z(=MQNt.Y$jh@UnU0;q:nc,b
%%d]UVHX%iXntq,E%gOOg.E*[CW&_!2dk$-`#2"AmNj?WU%gheX>&9o6m+d4XPcm$7'TURT=i`M"A.j0$MW<`+N@L_AJJN4JNJ'OS
%O1;LAM,H]W42,i(fj)qoc03BXkHc!7KXn>E.bY7t&B=@9B*H,P37HWAd\1VS"iR/X7/Kh,=Zhh#^)3C,K3H@*@TdB#pp+o.KuL@E
%OV"4C<!5e^a(gn$l>%1EOU/J1bgk.'PKk;%/3-dam3=\9$si6>=@gMc'N165<!J_qbqQT>.!4e/E^#"BTA0PR"5;[j85=,HObLJF
%TZg>,LBp&V(SEb4,r5:Egk(,DA7O?ORijhULCRsa"QEk\W$X-NP8HL:66<>\:k?\TL"IDH-!SAun-Y4$VqmSY1*4^u.Gb;0Z:X"a
%T1\Vg13u=+[nJ/QVU%>gkR=G2MIY4lUb):uoc(&7iN3P20!8M*ktOfBTo2jKRNL/kQYe\:b6#EJ,hdie1)q>8'A=$b"4N0^Ekl=S
%+d<_+#oMK;`@^dP_^UU[g0,nOL/t^0C;S@bfn'a2K(u>ujOt`RDW.[i\3rO+qq-=jb[,gV>YSJRJr7:h'(T-9g4l-[#U^AWDLl\@
%7d5Fg(UeuJ"'[BM(BkpF'Igc$!s1W)jD:Un/.In^Z4.%i%_E[k"X;-t=Glq,q[5gCl$0&agf#YB:kf#X[jNH\3RO89(f5V?:NUX&
%nrsD\:3-*!6n-km&t.\M$'67d<$@(g`1^`+J4,pki15jH'Gi2)fGHTXUU\A]J`Q[)MG,RAb<1nlS3@@E<roY0KfiNSN=PAMo)utD
%.37ql^uc\1I5W/Yj'jCf_MKp(FqF4!F^*`0FB^p7l&2dR9r;qtYpTTU+iOZ&>]F5Vaaq2L2Eblbs'`kNE30i[7R`<k3-AW7?LaRW
%?b#r=\I2#POd@KM77C*&('4e=97366C_Jdj)Rkf#U?#^dW-_%l!<cUrdKpWF6NPpLq8aNX6r>'qa9CQ(fZ'-]]]..MCoAeCRlE*?
%4J\Kn6Dt+6:VoLsY,=u.7q01\jR[mqq/S]T_4k-?f/S/Y((Ns**;VoiR'0:*+mDVk*/m8?pW#rU$,GIllmSNmD2E/L#r4kP7e!*R
%U-jUl3^A57Z?[#."k)X3A4kdBo01.LQVpJCg(r`rgC8liZB3YT7@q6aP4*ALVNAZ$A23*%2V4.G"ZR54;\67]4IteGl^J2H6,"4>
%WataI9PU`N6#L3P5Zbfh:][2CjI@*)Ugqk-\k'nPU$M9s6qILhOAZ:?G<@Ioq9B\_,BOcV;[BeRONU2s^&uknS`*b'PkZ#[c:=^9
%8T6MN[\$iAW&p=%&.bS*'57a$iY'c(`&E4`MNs/O&L``=@#;<H,s%"p5i;]:["IS6.Ed]u,1oPS/p0lY!+bt(&WC4S:4.09Lib+?
%B4%,4-6t^24@A@D'4Q*JM]=*:CmJ$;BQr>hoR<Ni>[l9Nb1'Qg$46Of_e=tF[5Csq)IE8"/Irbh*dm8%(4b/2ADejB*,<EJU1QIm
%)NZIa!t):B:\PVB97\1aEs-u%G7pl)^m6WoNJep6E@%)ifhpL;=>M=/Z1'-Gmg7Idf)Uh#`AMplG,Y2iZ\l9(L1P.)cLS=oB3@uO
%oKR:8m3^Rb>$p4.jrJa.g4o6]9Ioh=VpkSQO&:mXMh*LdFnQ<3apo.+DqgUE*'#9p>cPT$,0Q*J6!pd/MT6GJQtY&`bsn(`Ma^@s
%-^82`%27OJ=&ut?\MTK@_eh;Y:"N4><9H7^>8VJ0@H(D7oc,8#<!!72_+#G_!M>6$&s]b,/fkB8)2NU5a;"Kiq/\@OEPr#SIJnb/
%8<h"+T&J/\JLf)%>eNL<\e6H&bMMpb7L3#TI5mI3=t,flLsD^8Z_^1+7?L4E^)%1S8:`%O!Og-MHDAgh%T)6MA`-C@+W-:kiKTkT
%/OYNDL[lHR937sONDA.\0g,hD-pKa`mi_'*73iLgOftsR!CW2elT=E+i?TGC5lj`j0FJ(Wn$PP"qCtbrg$Rj2,B6.7_pUo>,/5Z3
%5<P@=B:Das=0@ojI*I=$A\V#aLE'C[@3*%@Af1IQ)g:<1OnBh,KkCYei[`VgV[-^/=7<@SG(R=G%aAFGeR@>8LBIO*k0C)!ZK+R%
%mfN,'qK[YFNVeEJ;FuBA'Eh^GPkK+D44"JUjpG@.p%NUq1QPI;Q^QehS!'AqoZ=2Y4;$Q2(NZo(7gV"cnMijOo,Xb]=^-n'Oh4JF
%^7r8@j_&*BB#;^7aKP3\D=jk=^X<fO^j[hu>*<:bm2WUNos:sED/?g(WiuE59fXg2_#8TPLhH!srG'YLJ[_#..'M/:d;)_g#G5>K
%`pP/Aj6<UaRd()8<jj#rojq>+>cm0lfs.<0-0mV(@L0<ZT;s9,E_JKuG?0\D[G/m5LaZCr=[6'&o.9RbJUci#^3)/;2eO>b0SA-Q
%W\74DXJJ$]\NA8$B7P#Z@e6'7U\9M)oN5Rq9(VGM`]8R+L+o//c;-MY*2S_lEd>ZG:3/K1DWV]=N"AM*E%i<)>jloNjUl@c1:L=I
%[hWg5[EV8'92L5Ir3?X[BW$]h)N%#\a5&\g/g12n;<,9ri"IN3^Z(###A`A^iR?W)Et[t!HJ^e$1hBps+%>%u>q=0FYOhAW#h',f
%;:eJ:M./\r\^ocd@,BT8J'i^ip[e_u;t6Y4Vo?.oGV?WK4S(chdX"5;l7Z");YMb:,FjYR[+66pY.2PQ!,;.>V;.q2,8a]B5.B#^
%:-Ouj0pKQH#`<E>EP3`.`[G=jT1UD5*&a4.43seEWDnX,YHptrVl;uV)gb>E_MI><IX^Cb-I'Ln=Zc/oPl%KT8[.I(Onn.;P*so(
%ITiV"e1Y#15p%UkDdo>>`qaK:"T:*`FF9m!a!iF;]4*jM#/UPX_4!KhnsFQ]5:o#tldq0Q2J"0>R_d')7405$/8'C"&.J*[&uT!1
%#2K[?I9cp\@Wgs%"'nLL]b8PL3?-GaZP'T4Jd-8K.q(d`kA56A?QBCJ.FI`Kf@T#\>sI#&+G9$pbD,'kY*(i9Kb,emT>NBD3!NT%
%?$A/9%c>,'oA'i.eT@%EFEQU&7_].0f=C["<5acpYHD<3g*7m3$JAEW-o\@pcgZ7EoXWUX1k$h$%LQQ'AP1r3q2R/:E-_R8mIOBA
%.AY+!PbAI$75@'Qdps:K1@LN,e;Hr!IW&P4#<*s."`31U,n+uHI,TKRpS9jDpo)pJ0"Ii2;bSaD)^Hi4M=$*(KPQMV;:MXZ5!Rrd
%FgZj+\0uUFCUE]5E[I4>3ZUDpB<!khSV$XnqeY4#;%CoD9j1RKm=;#B3G!PY=0V5WmG>gEpfuD'h9RlpcMcgUjnb(+mFVFk_!40D
%6Vm$;-22b1p?=/0i^j`#gm:pl.GcRE,X-@@WN!$>X2(]4,<<ouf0%r8QBQ3O`.?H'I."/$lMfi54KK<-c<+9Ck%F%;XI>ZNgqKJ3
%;ZVj\.r%JU]>^U2Ru&]`:"\f4"/>n1RZgp6$9pOgjHS!Mj9)M_#j*mu[[e;HVDTCdeXT31_0j/<LoJdDqNnUiZ&;,Z:k64C>'?'S
%LLgrGEF<VUpgLq[PFO:tq4.cj9AC,UXOrmo,^bH<_]O9-H6REk(k(7Tg'Q*b!?gdfj)c18Z8%2u;+nT#3l/\S2O/Zi05K]sh]/#]
%Ako'80li9UcZ8`RqmD-Wm3k6XfF;LnajG%/o:X!0l/]#K'V_$0TF?i$<(`BnC=JN+5?9G=`BdIGdKEtUV'P0LNV:fm>?Apt-sQMc
%(oE&:mjb6KUp#kUjX6Z`(=-8(T1V`im[S50[7AnSk9TP"`590)=SbPR;lfq%%GG:M!pb9QlKQ24SIbG0.^)nMrO2Lp3Q!c&)q"R;
%?lc-^i6\^nH1$*q:qT!1+h\l6EU^QO(:YQsY+rTG==5IlkIo8:A%4#J]t%<,mi<!l.n`ZEa5'Akr[k$eflqbhlY.Rli],<0&I2h7
%6V9MkE/M%/;`Us^M50k3'iX4GO"ksITZHRAY3-N,1?6$R].]l'MAX=c.4:4N`i$QmQP93lj`nBmcF"&%=[=X:Koabp1,7QD)!np$
%*Jh,RUVtT6ZJhqQcm(RO5\;2\-Q>Ddr/<g8k0kPu9Hb-m0D=-pn^H7\Dnd;FiBp#^YCj1/$`-LoKMD3%n8&F8HSkN'Ji50G+&WfJ
%.A57fr'O>K>!U;/<`gjDE%%2!C9q/r[W[SW5!_<+<733OX>9pL"'?\;\O5%QfiQOb6"D4LLO4P?U"p,:)euPb"iE*)Hb&OI5.O:;
%0YMbr\g!em=Eh'E;PLA_c1Ld4niH\!5`W<h_`0^jbU3YAJP()!_"L*$9-#A3N+qs`YqHp+Tr!]L[0W4r-Ns36:f2FcTcB_"2T.JR
%rc"\U:Lc7N:81(kNXfb=<DLf-9QJSrg5UN/iut9\^N8P!i+ZZoc)gY]b=B<)2]?>)0dUe<`7nij(ci1iE[+kl])5O8\<>uf&?Cpt
%KjKm\)rrYoK,)Sq5'eo^[&^+qc`^[-TrAp%)B(9/e);lIpt&Jq'/9GJ/u7VIO/CX@e;(bZ%\X]=Ld[M_]9WJ"pDPaMEB$\DDW]CE
%NfkU$A-+()ZYrG_KTgk72Ep#/0V62AN,0DTedYg@?lk7FWTf9n0en1e`?IigR9Boj*Gs'Fb&$oCVW]Q0CY_.$/^0K$2_WBg5ss)$
%8Y<4.kc\t+"h"e+Ii#IhZIC*0-al0Od91h()RMl=btB5+)!n#NqF9GX+(bu6p]Y4)g2M`r+$;b<U8rZ&01sElJ79R^aCWq=olPJE
%bK?W`"fAABjp\7hn))ZB3QY@&og#9aJDFrM;s",ne^\g^=itOm/nn!SgbAf-`7\--$r-hr)F@2NLi\[n^A:B[2\bU8aVDSshOl[l
%P)KCMJe`T_M8tpNO9R>aE@1Te!_[@E($QN.fDd?ZFo9[>Xgak8FS!P1i.TgS51X.m9P(cj>UI-+(*J?Q)*B:=1B@2jC1gM_5()D>
%ZAC2)V1R<u+[1Qtk&7I7P:6c6M@1TC&lMqQkQV.8dOF&3?7YVB;QFU'_@3W3@Xt$/5$3U'5l9G`6<RMJ*?U\JQo(tJ35^tT+MEBa
%86<8ne=D/2^TdJs\3;iS%Ot\D"&m<S@'D)_ftJd')7.J)G4Jn&s"]`"&.6_]5iAT/mjIB-V"nN/Ri*uLkZTnlpPUZHHpiW%`Y&!G
%enCc[;5!]pcd>F';B;LrppLo9*jY4<:>Idd<k*r9`3<5r7o0Vf"h-gh8bcCd@gV52@k;-O&ML44G!RgTKIJn<TI*-G8l(k<EWaaQ
%c>>61%tt0sT!4k_f-'.COV@nYddXDc:cIl3onc.VqfnQ9N6Z)DL>g0&OLtsrc4mTk=("\<<C;mR-o1[gPY3q\^,3j4oYqIG-1lh3
%:$R'NT^@s\C5j0!#_R2:>\gaW8es4/>U>%gWoJ.pWpY;>nuDBZqi1X`lE9F*Dr%!Ve"p*%qC,naO$kjFE;>8;U.jPrera0V*u9\D
%1gL/^3/YcI4UolZp9aXJU0lE3:d\rjpt&7q1:F(V)(8B$9FdY9%rW.5A8PT<3aM827en,W>i>4&,=Yr\o"Bnd-<bpb]/8Z*#mt@6
%8l"oE;Hi!5Be!03$%D?'BO^8Majf#N0U;``6leq:]8Ts:N2B`_r1]it8binn#))d0JBn.4TE2Q52Zu"t.\Q5"E+cqtgRfNHCEQdA
%#O:r":Fs\9_7M%]&H'526>;?^IZBM$BKQP[0^N_](smB/>Xphj>,8.s_KWStdc/Y&-:ml@24L>cg2'._ihgH/SeBK[oG,M]Q@N<Q
%VH6Fb@a3b*KOYShC;6G%d%K"3[^6Z0.nsSCQ<c(AAa`e8"C6u[cYV%OA-!ET;%Bg%`S[!A$uM4XFNK&Q0R?1j+oKm%D&T*X7g&L=
%Kuq_K!s[^V39O.)$k<ECJmbl^Mh\bmC4f40.8kg;#\:"@DKTbIPY!_ofG>G5L&=BZ*AgU4oP_';.D"p-N^+Zt.-B:GBl\8.8niN<
%\p(_C2*ZUAS$:;u91nulZ!oBmr]0oP%X+hK@*gCD+MgLfeOFM_A`/78dZpbR`\io2c`oRF%c,9."eBCH`AQ@Qh^AH8DI[Pc"f>>.
%b==_*W+M*n!2X!bRJ+LPL>J_h1m#Fj-Bq'UMC;k'gFW#s9J5gFcu[6==_ipUD6"N>-Kj)X:>UdjP%*&kF'D>XPaK1!a[?n#+$nZ$
%LCRGHi`/?i.Ue29!@hp&EH#c1s14;dF_8F_M;m<:XT2+TpFE<]!>mrm!o8_XO_+Ye_]$B.?l+A,1;;h,GdSUG%'/Zf10or^7!K!>
%JT/+N74^Eu"k>j[U0O[B1W)DAdV6NN5t<Xt\=dXhMN^NtY./+%;HD/Bh8PNG"O>!](MQr'T$@%HF>BD&N;=l'@!T4q7#IEDBJ[,b
%HBM5\o:JVZZ:a,aJB?f)69-HaCVdkYUg?eUVp(EG;F5]S-H`^BXRln.4OA/&V8fV]C\B.^1'UW3CGRA^A4#mI=+SgF2\&'GccBYb
%V%EZ/ljfheSEX(`s1S/VH6K./"'DH@YTus8j[8A*#?KF_hRr?eIpopW<qUEl2k,[*<<!Qh.MSMa<Mh;&MAHc%"CZ>\VYI0GA4He)
%fBj!k3%/ka-kPYYO>G]>%@aF=neA:/?+[<I+_!$7iPGop$6&$f_8L]>Cuc;qiJ#GgAWM?/`Ur`3`sTmi%SX?PUO,H#YKEl:eO22`
%^\7^.A6m<2K8.[L/-F10*gP(X10$C'4O=WFYE8dVVnDrQ!^5#MF+:Ya5?lP7X03LOVH>YV;dEQp2*.<\58YmoAK,&E'MHh=p/"[B
%g,BL?8nT>U5mGl(>GjHc?)UCieHg$R&##6D6o53R]KnZ7_+cj\C!D./S(p8-+uT-XAb@1:#d/:4atuhR.&k)N_H7_sYbE&6?\&J9
%<rX_g,,*.WcJ-/3Dk$T0\$K6RIn,2_:0mTL_\N(Lh%l@t@I&^"IX<S4D/mKS>a'q(n9qk%JS",6pp;/<a/oB9n]1l@E!gh&So+k^
%cCZ&R!g@51k<!Tp7M&U<J*3(m*-/7URm#`4kHCH9UJV<sEicDL@3(uW<8X2AD;+0nI/LkUJ*tkM55d5hojakDFmLn+.&g!:$QNaQ
%4W]Pk::=PPOZnu+RZU>cVaR>nSjM.n7E()0LeR3[dkls'*NA7=;iO7,J'd"7Z-S1dCLD?tOkuR$bBf[6NF6.p7K[qCE^1!oNBlD\
%'L[m9Yn^Jg#pU@Pg!EKtY``b$4ap`"pN<t#:n0NY66^7KRA_:T;>n3E03_Ip<\_,(CS3I1pJTd=(9Bb)WPQh)nDc9OYVL\p$h+#q
%1F^<Yk+Sl&P6u;_D_&sY$t0j;f#<oSa.LMRYGZb$Z&=;;PZ`c0/%cs:;nNY/C!OV$TF0H[lSPM,2SH^sodi-K#+0^-_C?ua0'nL+
%?7o\gLl\NaoS$i)[U;[8S:BDD;L*VJ<)`ig=]$W/(H-&%<S)_Sa@O^rTsi-%,h*&VGeJ1nCOcQYB0'DJF3@(R0/7T@Lt<dWY\\T3
%I,sbJk%g8bfi/3\jUnY%h7M)^k*mEm9PmTEl#?69Rp=]L2<@Td.!A!DUN+*sPu'<Y94c1ZO\R.mFM/%DoPr=D!LX>H8U@7c06a6d
%iq1/G*AWI$fB$SF4pC4,C#k@?8"M#*'<7AE70!WmMKH$</&Ul\R3Z\6Ia7^+=kf(]>%@0(OLV'I#j4CPY7AE!c;5ln*5tpTM.t3*
%PZuYg#1rNnUusOg^$"F.J$VIK\'WjDeCcn*7.W5aX!=BLD.%DKlc>k]$PRf</3P&a._V&"PM1@8)F\8#<\#Y8QBu?<e">K8SMsOh
%-mIt)%CK5Inmj*n%O)m%$)T3ulGUoYKMfG.GQdD$A>t@b<;]Wlg*BQaaeds=UN"Z3$5d3:ho=.cG\Y`+2%3fV_UN="p[e^(0Q"W4
%d\tj.@hIR%-A2EZ78]Q&oQ.umW=ZQ7[E37oIKX0T491G>MjtuC$s>_P^fF@p`58f<1_#gKFFagSq9#&Xl_L&di3kViZs]3Fdt/n9
%TPIsT\/'fRB%j.he&r0#=F=\9]q_RXj=OfF=8#$GB4$.,S\6hJ5GE%FObXtNAh/>TNdg3u(Bt=q3JlauBg#SSn*tNQ;t^LW>3!9)
%`/kj'[)9nb"tGpF_M"R-VF;5KK*?QM9/KEMG:2>aS]_]La'*Xh4IAXRCITU=<XrA(j@+`5C8H3kA\i3F%b5Bl*Riu3:g":@"kMs!
%k8hZNUNp\aKeRrA#`^1Ti6dM2[p/CJZs0b30RKa5#^jNPOV/(<4:42K$@iC/[om'$p".CY<AB;u/^0ujD:hhjr=[[D+0ConbC.K2
%QSOu7&^-U;<q!tjV==Lb?H5k[VP[:Jao/)r3-IIR2/8PqCt75^U99V5&+ON-,#ebkgcZMA;A:Wk=VLupni4oE,NkpgkL"qdm8M6L
%.KQNr-\]NGVVLT6,F3dP>ZlGl3BrijZkZqE,p]`t7lOGjTImka>/raUG4r9m$25)ZHUsf?h`gbclgn-.;dC_&!'7@'j7UCB:,2FM
%aoq/u+XbgB;aib'i^Ir>-k')"P#6R&I82YI2$nZfjp3,6fa$*>@<V7m->W8df>s)se+t<13bt%,#sG:49esBbr7CVEgr*DC9H[ol
%.VF7NTXXD&1(A::CkP$$a4-jqWUJG8Q)HF4`il&"TsbF0^HkJ9b11Y,I\+@IlQU:JhI$*S#Rd2YR=bQH=JN,'Za%o/QDqB7p$gJg
%/C.B<jp#3A@V;VQ^Dna?fWj.pk?HD?qnWucMKBIAA7Vj40P%g]:cJbo6oR@GUBgW^D*4GCNUgt<n5@h.o]-)5X/&k[!jnkJlVE;X
%Uk@0*L(B'@PeVtmV#FjK$6\$KC34]D52X=XM0q[QOZaeedfU?UPub:X.DL:3Y9)t1SNnVK3(-IfK_Z6XoleD5h-s9sCp+,HgdI=T
%idCFM#cdD&1<u"%*mW.80iU$=kUmVG)Q;+mAlHe18tUc]V)$ph//bhdJfUml[&0nXL!(soEUK1WS%hlp!JLcHdSLu])>C"oW1bD@
%Ott:T%;b#A;/uWAWct7Khu4OSj(`a*H&Q4/Z0uY#2%$5i-kO+m<IheEQq4qG%/3@K2*&S4^L05g7+j$k:g-%[5mT'\8`^<r*[4DY
%mHT)u"a26CEC]lKYqsKH%SAMlG!2%rbF0:5]r__Te1iQ'YVMcd@i@Y_eh!'!!uiU^Y/X.HDI-'-Y3Ga\I,In]rXA!]#FQMPn'!k?
%-c@pNic5pLndpKrMtph1]no-\JIiPDRm$dG9>52;;L?KY)dUiLgSmB'`;u6sCKh%g5s;!$dKVN5qGbE?^eh?l'%R,97n9WU@*Om2
%Unf,;W5;)5):L(u?nJ%bqLh=Z5bWTeXlCT2^/Bp>GqZkG89AK(+.+M0CJ)dCW"<'IW8Rt(JVdUi!.$^9CX)?g'oBOl&1R<eB.ZM9
%1jp^[3:^4UE__Bl`"=3?0e1=_oK86<@BEbo4;[U*<!r\cqfL1J@](dH15[m=lRhgJ00Xmq"9g2(d_hgD_shKcR)3@`0C4\h/WX*E
%XK!t]&a/S&@$Y8ODj:f&dqWjloPCpDm>hHp6qA%5GaqfVd@o2PpV-5s%D:nb,MXtJ7\`W_Hl)V7m`g*!LBd9'Mm<=RChcQ]SN"h\
%a,?p,jAd?-*9Y$)\_)BUl_nekeQl=VXYQo:7qVBd$T7?aO!l)b*7ZWi;^*;-@Fe6%U_[mspt)R.pPkdQ<aD=`4.4=n2g.'YE:]S4
%(INnAX5(Mu"/TNq.^_*I^Q>a<h%\%OMaSnh(@;UUHo"&cD"Aou)W<*%_7d]KULc)j#H$/`j,\.UI=&s\3F0M+l=>&c2]W\1aXoL+
%3V\$4%3nP:E[=Gf$1Sijg'Kt<pWe,t6Q[5@iVN05qd#q[Fg5)1p%cMWrk)@R=+fB,bETesU^m,PCSQ*L@euB%8iK]EE)[5"@ok$4
%.`bFfiRdp<m$!f4_W08=G/Ob/&Sp%]]'KZJndZFdJ[%V\\^)X2,"8)BjC/`mpE"IY0l=KFg8bec%fj.*S8,HPiQuD'M^Ku89%%>X
%rrI+:;>2]IRY.:2>g#fA%,LH1eJ6=!g/K9tq4$5e1H:l9(b`]bl9%!7cX$iZ`TuXq3@-?179.oi&khjP\T$3?qc*J0<ElYQb2V^b
%"L=q_.]j)d6!mT9V;r3\MVk*(UaX/4H5D@/;;;UqTmE+09VgLpO>lh+eY\)nV!)t9j'-F\,?;i4(XT3Tb6Mc(AYH:'C,pC"8`6"#
%cs@t+<m`V':ESr%Vk4d\\?;aCeuoC"oSA8q>Hjo!mXd&g]hYkTXIUgN!Sq:\7[m9F-7,i%H"3p#AF.4=C;)Uq-S=^,>Qdt7JSTaW
%@Lrb^\m.t?dk+h3]oGI[k?>pknHC*!YK6?^<(!)?oMW+?7++scAdB,tD"[=#9*YY487!Cd"`C14gsY#dlLIO=(IXdoW)>-+7h$U;
%<5>IL+joP/l#m'#p"c#`V:s(7FSUa/:oSb8>6&/O._rGs5oqplo9g\9F!<D)X]r56\38qgg',q][!K#Df-]fAWe9K*oqXjj"st_^
%9A*jU]k1]*o3V2+e4IpecWoF]]@Z2l]6:/YdTH3@lIYbiBP>4U40#/.6Ao(FnQed.+n$.i=k3DnYqb;F.-PEe<TrYLWoL8&_t@t]
%g%i9!7c!'5EbEp&%SaX;90VQniKM1hU[W4fLWs8FT=H4\.rh@4:Ar$u)TpaHY"L<PnG4mW+KN'&9"iYHFl-as\bXrF`S+fhLV9Q`
%0o.acd+hoNK`KG?IH<4NYZh-j?#Y@J50D:fR<buXapb3X<g03^KFU&':Ha%"d=lbNa35P)FlW?p@OS+FY5#B<3ohBQqhG0VS"_bW
%+/^o_%_-f9(Sfbf'LC*#]J<W\LM?HGGXn<b>TpFV!.CAZSFsa8gl(_48_(o.cJrMXG/LQm]UW&Vr5ph--o4[*dm5XM0T^4F5g,-<
%G![A(Z0e5&IFJW@o1mbsV.f,$UFRRc0\Xfl4#%p6Si/=-]\W4ELhLQ]!i^V)_QPC:FLOMZFD5o8gPlT/L6Eo#M6EhZ`TtcOY.C9\
%V%7"eQqV!0CU7aI"aU/cQ)i!3m1Rs<YqWJl9TFR!2Lk.FbQUpL-KZ;<*i"NJgZ@6<9ZV7]V2%rk\EGnJDu:nZGaXXUjb1iSr>Wc8
%S<G5[78/Z9([DL[0G+D+0KkqZQ+:'`?!#rE'TM/'FFap%o*/0M.:DsoKsQP>Z(I[Z^.(2q2Z#2uk(XsM0b\Xlj5pD^7ohVR:\7P1
%Lta=C.Ed$!npe(,`JmU]N]MVood:mu47f"!?q";m)GK8:+O&s<;eJYsS/qDh%BOg:r>__ZVs`e&7?H)o!21(!.md!!-bN8o4\VFS
%^q5tU:)d[mId/$UN8IMpg!.hqE/'94@^oUQ#?A;*?7T9&f3K`a",-,HEIB@P(R9O04XBH\cGVf&DUHmdC&-.8Q)]#?[5]/&0LS[a
%,mE5-6B5O@2q/C2A]QdA:YdP>QITtI(!O?AUM'(LA#`DJ/k>;;Ze<U?(J`(RO&f7WZOXChNaW1k6auqFG#N@dhfh8W`p78:MhiiB
%kQnGX.cu7V"OW_!aDp76]+Xa&Bi):4pbfWb3Z0AMW_d%qr5$7!e!T[WPu,)Mm]L/"VIu)m`Y4hCH`K6be^\X60$L,cE4%AJ7@->c
%!F30N[*0@NTmkN!mgU`=n,oD>;<Tp2QQ^n#&UZFfXgbF$l/8G-Hph;,IFhrs(kG[:'qpp=8b.a7D5mVYlEM`!JLJ;-&I^2*:R5.C
%[8CNk>[J_tqSms&:kJfY6#O%WC@Z87/cqT7i[02kTFs<NRe(O6V@(!q.R(b_2DXs6_bZ,*!J#b_+d31-e?1eS#,lolG_97n&PGIO
%-Ic3jiC&bP]XaOtiH;0NlUh&GS-:>0m9=(Xh>c;Os7TZp/&0NU2(#p2E<Y3K9l2:"6l<=e\hd-Qiki.P(eDRYCXd>d7]L\snLY*>
%.G'0q-BA@6WXc"s$QMctj2*SG6!1J-'JK+8:e+.6=IHT@_eS=6QV=X'V(J(!XpX:DR>\?WP'Yqr=uZ0g["-7!SW)$bF@qRQQSkSu
%F;;^c+]EP%=E*F'G[*<u4bjfeHKZ#AUishVN*&;FW+77E32aT$NHOdd9&-fp5VmXk0j/6jRh%d[?)BKs5rQtsiZNC$lPF8`X;]6<
%<p`V:]\eDTUF"%Ai61*m(Fhpf4QrW,E[XNEPSPJVD95T^=kfP,*NHVejF^Z/Oi&^j8ssjlEQ!3SQK/Eo0n`=;[u,Bc9d/tum>?)n
%:u;X+=k;GR`#)G-=XK'Xo%2rSA6L^&+T,*I4\I7f]TQ6P41aDER4=3;-RlJU?Iq21e1H?eQr3M/b1[T`)ejA1P,]A%6OUHAXe]]r
%XtI6l>ljppKuZ@ga]mq^`95st@4q"3g[1/e96t`*Sl_eXn]@-^EbrudOc`Y\Z(LYSKd4n[<be9#HTRPoaDX@+EI.+<l\MYC=Rm7k
%:+7QgiXK7+OUu[M!4P+l1DqS\@VH&U8MSk#3g[8NadheRHb=JVO,6hM_4%@l<+DT9CM"L[!['!F;5_r-_RImVOUko[LehC&'fNLB
%"<*5g24"(/$M1oLn8knW%1p3n"?M@,5Co_)3<ILm/*=oen07$(3hE>unlG_/&^.J&N]Z9@26Ni/";VB+_M4@*73:gM/W;"I)>W3r
%j`u/O^D<pFqJ0T4N=*&ogN$lnlkPJt\i^j.Q)V^)a'lq6f3]\(JN1)L_Q;h8?HLcYiu3uR]BmS0I%^?thIU8!?-?p8$UqhaWQ9a`
%J>2]XhcZ67&`-1@f:BE.$r^Q@%UPX,Mr_rmG<+%q\WHM^:>BT27J\bbj@`dYmX!l`.%=op"?[>];a4/tFG(TE0$P3N1gWF!gM&)L
%=YJYO:;%"bYA67#4(^qG2/`-4oqc\Hfl9Gss4a\ER=e1K3Zi107@%Y6"!B0qc<COm.TsB0qYW4G7!V:MPOKh)2Bqq!q+Rn?>no#Q
%%TEju#k&p[W=Mb\6OVjIUb^3eL".EHa85_mCO`UCn5Jk]=R^j%jU#!/`&Po1kZ'sW+B3Cu/_on^dFJ`?;PITQAq2=Bj?GqoC[>=R
%!taC<a.3GqM#s%*g9"O`WSN+H]E)O\\eEb&*m?4R-#\eLc;!&,]c?;!q`Q`qWj=?N]9l"N.[+sV>7Y<oMn&NGoL%Q5;Gg&U[R77N
%U't5Up?ERS[!^2#D*<?LXHrQZ]#14"X^,J=^+SCDl7q$.A=_Q+A22o:T;q?qoi)gIQJ!.E"g4Rc7uaA(qRR$.e#UqhfH@Y7KOHX:
%0emNdRa18uk/eZ\G*"IM[<(tG50X?>kYmtT(lVj[RsLJT^T5bD9K]*tJ:(]MQC'S<b_[)l#%StNgi6OJB=&L0auG),Ofd]LX@r9'
%7f6Ea6m?65ImN^[IW9QLRCtP::SaY/>dqc-eWa64WO2JH%`s]Vp,>ntEAl0][aQ!k^B9!Ijbt>p,<q##+Jfdb+W]N&Sfr^ME<,1c
%JOE1@nC/g^-+TTkEqfN[DQ$]3pf/gt*#?+!;2$nZhi:o1.kn904WdduD68NV(puf^U?/.EjZObr]!aF`ia1dGf--F3'c`\:O(n$b
%gu2M4g,4K@ZB([@P,6YlmO6r_2hVq,f#Z=\>Dib<["#E]c0;'a4%`(.Di15V:>6ps!jaluPT9l8Pu(FE@T40"ASn4fr%s*>R.t6V
%n`^W$SAm+k-2[Yl1ugSl:%*9/S`#`@)L;.On!Ic0p9#"fA<*N4euN'Z'.?sD=j3\<?#==4^+eH[Ygr/mBD`AB&"J`Vc5%:*7UJ#2
%g/PJ[Khmn/6Ur>sL[SU@A=-%+06^OPm1+Ipd24@Erq+en@n0$\S%ljBAqrHS1,OF@cu2hE0cVuE1U_*ki@&jeE+jn4LQ")3<1D[X
%dbPLKS9,pkW)i/WlAdp5^KFXV3&sC*LrtV?C[K41^)ZY:T&;>teii4G[](PiNi7([Xe@VGSt2D'20_4hLeiB24^#Lo*>E.7eJr7A
%F?;PEEp*4!YuBmefbtZQN[&<;@`3srMO?<K.s'9)OHtIqqu5Epr+I9Wo?_uB;k_8#Cpc<j8?O9Up,Da7QojH9<fMtc!X1A8bV?T]
%gXg#/I02:,VgVl'Fs'UuajK[V:pgAJgUb"WFe.1%[j[6WOq0%Kh!Z9A7V*mfj-mIFb,//(DN%M=?I_YqkC&S3oPFk3-URR42])@B
%[_4n,HT=8kB;_'ZKXV_$^!/?P$Xae"T')L%B^tC^R(ZJ'6WI4[kE^,d$7$teeZCUeo%tmb:P'\A_6;g#4PI'VXe<(oN]:Xn!I=,]
%-l:'_fe<EC:BsHbl54eA$#UaWN/6.L:O/AaT'nEY2DOMVj>>\i7U2K-YmI>$V+`7m=i-EEjN2p0*@uAT'#b*_+LEDK@Id`e:0&"[
%d;g'i%oO=J2HZ#P'UZ@XB;^)\*9a1i=tCE'_t$+>9aU2V=]q'm//Jo`GQLUj18:d:6e=72QWk1Hg'hGk.jFJ0b;S0(eu]Ed0A5o6
%nPo_%;*ibVSEYjq3P)hD1$FD6CN>kl#M<g@qS:iJIHZ<40dHIo5Gq_\&q^5`RU"O;/#JDB6CVI2&N#USD04@&*&tPsSe51cMgV)c
%>4ic4b>TptK8X7mD2?,m+cE@c"qE1q[)2"i6W2--'TWDJQ`0PW1MVU70#R/:=WHsI'IUsV&A3Uk:V$-P\*%5)Yb,[`n=7nkVY?nm
%Ap'k;r\6--X2[g-3FmY)YWg+9[<SeV^/XH\.>'n%GE&QWoc=tY&s@V[O^#deERmYgc#Dg#o]uaQTuEQ3"9Fm/T"sucC1>B_W)Q5f
%*Z">&MEfsKN96tS%9&b*__RP<2JNP!l\F`.o66IjNHj)#'YI^cC;DW,Po$YD-pHn;B$H$EcNL5WYULqt(<CQCQpYFocM=SfTL_C`
%M5%rFGOQL*"nd&F=c'Rd6uR0c>`72Df)<jb3O@mam*h.Q^E3"%ic"pp[;3_S2+8[3X;8BpGNhDI+KMk!PFgL0P`'pmeH8:._+CCB
%P@ol'oZm:QIk_WK6!Lrg2##*FX+^?u*uFD'B$S$`,rJ$3C79).S*#KKYN4FAs2E:QTB1"<Pr_kX7H:$QA%?T%N#hoB'[q"iE[\;/
%XYQRkG0Hn.K]Z/h.a^BBBKELC1[=7l.9FV,SmB=F+FLh>obC7)rd;[`*inB4#'pM@rFecTXF5,gk`,8g<X6$*pp<U^A:RJhK9Ge8
%8H_EB%n(0",#6_GE`bbG:<2/*LAR[WIsA.(_XJK2E,@*HD1S4'4BQ/5D2/G,dnsm6ED1TB055;`=uH#>f;4ED.0O]<1@8ZVRdLI-
%96@O;bFq1`8qATf%rpiB>bOaN7nuFf;W+Et(_d%hOnD*G:EaJsN_QA/ZK.U/!!TgL-TBK1=J(#0H[J9V9$ci01Apt5\\*9>IlW_r
%ROh9h$@T%]ln?c.fK1LpQO\;MrmiI'LtD#pZ=.3U@i[7%':4tQ[!G!(?q%Bn6&RXj"ODo22//]&3,cM(?>s_HSdiFa-78j?F]unX
%cs+5fHB(bX\=%qSUCpN^<*ndY2'q`"5g$]Gq[59T5I#_82t,W"rK"_hc+j55msb2,s7F4H]4HEinXk=+0E:P?s8:h7^\N*2s8MJ:
%pVS*P_tRMepo-KB55i`Uro*b3I<tgD^\Q.Mpj_u6s8KY%erO26++O4Ihu<WD+((@!rQW+Wr?'q0m,.jBa$9RurU9a7s8)``s7$!U
%s7f6:o"Y+mq`k#KnW0]_U4K2&?N4A^r;/_X_k6G0J+pjAs8=#\55JXdj$18+aj]_XnaleUh`q+hq:J\[0dbkS5PXlgn,N1#+9(#?
%X[G%0g/pT<g:o^,^3<6C+2@inpL!pa-iW_@!0I,ie#E-!3e.cFR]1p;K_7t@-3j=>Y#2"nMJQ@%DU9,R2fP3c=b04W0MCYj-ICk)
%[d/HB>l[Kpl%jQjorNlT.7(8N)C`M"J#?ujCG]8>,]c%Bs#JSrU)5++R6O`;>qnmMg41Rq'SEV$bMQoYE5>L_=AIDn#s;+kbpc0?
%Ya^02_$W%"P`-(:@L_bOHiiS98[F)18S%Ej)/aU3J7a@5\jiT1Q>ZorQobY0)%[0R5H\,SM[igoZ8I$KK0J;?;)QATIR')Q3WS;"
%bc\$klC9_p>IsZ,p;_=35ue*I/6;0Y[C;j0RL<7M9`+I^<:I(I`kDaZi6<7(T^U95b]pIjIK;V)lcS5EE:[k-h,]fHN:tbffYFhZ
%#HKomLNZ5`2(*_9nC!:]dac\j2GoR9<L?H(X-!siE&?X-D,"-C8;>X)Rk'j:dAE+AkJJ4H.9S0NW&$Ur*tWhCk*Rn+P4C^""I5i_
%QKXm^1NYTTO<+!Lik8eRBJEaH6/$+(=&V/;A>)DD^=-:]Mh/GA(7AT(M:>'\Xgihg2BX--0[(af8rnG=9XZ)O8b(ggf=Jd=Uub?*
%YK>rbZUE>=-tkPg)(&9LW52XKcZ?$QVkb_k&fKNcF]uH2$3gnJ9ip1cJNkd\]3Xt!NKn8N,:L;<]1nu[:\$MOAL7Fsp'FFrVFgih
%obqEl;[[B3,d8@pVg."Dm"t5YeQ4nu<[7@_j/g"[j8qV_6j"[s.j24_j6/j30WRbe-^kt_Gbd,5Th_806Y2@KC'VBGrK$oSD6e)i
%/8FO3'u)Mh_"2<tDoFP)SqPF)f@24<WnaB5^9ecJKOY7'V@Z:1>>ZPBqD!%3kP6AN.>L5eFkOCeA;qpqJ]M,\'&?eH)Xbt-%[aA0
%R0RH*l?K)4\/Db0r]&4+S6d+tI/d.FIpJ9(DRL10ng4?c?YiFUGfd4"65p]h!-"Xk:`.nZg,)0"U:TO\ChrX\X%GfQ`rRZEe;br$
%FL)]2?*;9"9$E]bEpY9W%.]\cpWY.'A\JMA2Nd*VYZV4D8qTdLIPcTY7P5ufRHUWM&Cf]-V%CS_HBQ%b%#+rn&0N,<'NMjG=R,]9
%AaTQ?<4#f_nI3kWC6[0PBT(T0.WOl5kS%8HV-Zge`hr&-`R$?+p>kN3<K[r].S5WKWk!TRc=(:I"&hAoC>G1r/AhPP=NgMm9+>G3
%[DPeM<H-O0k'@dtWD!'JY?[QnH\t=oSo#M1Yge8?(m69YA-@NESUuZpcq[F?m`=u24TD;FSd>ULLrXBSpZ%a&qou;VU$pqr;-*rI
%ckl/kQnSjl-tB.J+lXB[ipK^MDhsr(66@\n/OC#B`Mm1E:>GoeT`,p>AI6?7DGHTJ-_Zto#D-r:?:ZmQfVtL?dE"8,Bf63Y=%(F<
%.lF<9;gm&$N<:Gm>r>.p7<eu74s'"]f&X,P$:MY5hT`8V:W`+_'1G9qO<RS6e?)(qi$tNl0Tpo=j`A0d"a#t82tt)GjM\=5BX^f5
%*G71#V`\F/&F5:hB^8OeM:T&"XSJu0+&8UD1ZMg2oshA2g3_;L?1H/uT"+S?fjKp!a=dhW:*Tcig!McR1'`K"::ICpoo_dI:O=8!
%^3JU[HNdi3iHfOtq.)>!2$^\u8MXM(CjeLu;[L?VdsQ(J&#MTWFA&>j^2VW-c_d%M^bj@JRB`ZoY4IS9>RSu*G$.Rkm]BN)`>#O/
%IU181cgU[3>C6$BH2R9Il1%d2I*neI(1EmLbCKIu*V7*^;]G1!#A/N9qQ0(5kAVfX<:As!@btU`n]kB8RoN(e.p>fW&:!]^Z:[G+
%<[1pk8iIUSV*hlkJWOQ@Lt<g>-/SlNNtkhY3n.YnkLW=\MsF'6%oE5fAc&:<F6kt5Y'2sRYNTk?Q.*@q`$8qkO\>0793_0kN;Yl%
%lM%-hp:JBBC2&-?oj9Vm($S9R789b\K!j0XW'V`I-%Uq+e-)N;o#BAg)NqH?Np$eYM,,s2)_;8V&7*UoW$4Su-N_Vg&7nX-''?9c
%4m(;VrBJ7($rbUfZ7nOHpjApmK8rG%V/+@8U:M&fOWbE@U0Db0JVCdV(N@;`HRa01XN,^K&u6'ML%pMuOMKl[/B!H<6Z"Dogguqm
%hIQ4CL2uh"USgqAU?gqS"OR]ae1m%'+n!5S[NS1;UR0#/#(t\TGQB9O@C?cH,Uf5Igd$RF5c<HHlNkrX9#/qBD%b+ad$LDML[[cj
%U;JW`;/BAYBp05RCE]hfR0M\QQTJ2YqaE@Kp'(&dM#.OeBSG$3Zq;7sD3IOV(gZ&:%&#%Vm81Pk.f_KT9V<P5CU<JFlQ?bAKN/"T
%^NWHe@:%OD.F/JU9Ys2rZ:KRD8bpZMK"IR2>4@22)l!VP(:0a1_,hdq@m$LU7"oc?W*C"cA8N'A]ude\:jVdT\nnC*%&Q/[U`,Yl
%q*Kt9kuUurTMu$D;2E+H@jF6>-BFMn(/7le#t(J;.Z!Da=U)km[+]72]g$_5Dp?1,kK3B[/%`Qrr6`c/.VjTojL4ndY%(?D/JE=j
%(/IXtQ.Q4P.\1]C\!!Y?hab4BhB#uq)SkBANu;$7SNTNPYVDH>pbg.,OSkS5dlfOajfF6=Ju7Z=*jsO@r0?LZl"[C7$n=igOc.rZ
%*[HJ<!U_/V0`_,ND5,(N-\=gE^/5*8cp#HcQ.SYO%&a4@/&GuZn,WI6:)2EVD8p(O\+C.B"Dr6oG%F'J:R6`1(FC^nVh"kX9S'uo
%P*$[Q\u`s$(,@?q^+n,.Eu@Pjr@FqSL/O0Wh]UOuGnKZW!B+Q]jC();Nc5Z:.4!7[RdCP)ZPFq%$+siPi#97#)i7=P"oG7@ETDO@
%-.VBQ01$t12P=6<gXJ0J^Q??*p.PMAjX\N00UO/4!6Ml4e]+^P.?iC<A`=n%Kepecj`2,@:C_=m7?s?1G8W\9<NGfZ#SG](4TH(=
%=D!*%/<u>I>=cs53@+q4QNRip<Kat4nQV>FdB&D1\j>GsiC^t/*C61c4Kh@7a>/JFPI'BJ/TjL/!q$0BJJ_OmI@N,#@dYl!.KYs'
%\gc')g)>&TZiW^D%hR'VNLW-K1oQ)WK-r&e89&G3&sJ^5L_,OR$I#3mQp(;B\nEKh;U2dB-OX0,_Io0][(J@?n"-J/N]i9(e2,_Y
%K",IuKj8BhRg=e?4HuBFqiTN0g>dF94DMNqlU7T_N,-LJX>d$)f)=H8SbR(=1X%a/pfr"f3=VJAp"tB)fsA<+Qr6ml:!X>@7;1t0
%Ns7o9m;eDbO&TU_:-RAdI6V*ckW4N="<jX9_#R%Mk,BlO<+%`S7okX!j+AI>#8M;aP*(d!i:XV,E"P7i3_TOQ;*dZn,qY`mN#BnI
%RW8]MOi+OM,naXVf2>pN!)3//l<.F9':e;#hkdT0Tn6_^JKRl;\kn)%Jqc]oUu?+N"=P2"g-P`_</[#c71<%ATh\N_8^:J?iR#>9
%O+AsrR&X4(BI[VS;`o9#!CKPNWc\r#$ipRB<2%Fbh$#soB8="5'A&+sKa1,C^UY?AgnLu+.e%@:/>8FFg^r;N_Qe\#@H^4YR[FjC
%@dM;s[2^';VDA'DeM8!BC`('p+!rj1Bo,Y<1\#Ke%0gZLH1o*_QaZlKruP+kY1@^d/uhA]j%\7!ILt9hX$B&3_9WINf*R0KEmWhr
%.p,O@)*K$Mh%9785`(td;dCoNk&=/5_hbd:<foJPBuEDe/Ll\dcLRNj]uB>,*!Ld1MXe*sfeV$_r*kMG8(&4<"JNCSMSQi5)et#A
%jIK_KA>9LZ95H4=h;%p42e+TKdk0%J21q>CP8T-rX\auL1`[6/&2.TB0r)=V>!3t03URcX8kpL/C/In<-Ab/-dUTSjYU)d4Lb#WC
%eX4ht]tQMWd#]lQ=]RQ\>tJhkM/EOCmC^Gs?g>Z]Rcikt"o;VA?@$]plp=uOpqEG.h%bKCOJtJJ<cA"!h/_g)JjIIp-#.h]E_9nl
%/cFJ#0IQ.t_\;a'*_R3k6\7t)Vb-tY8`P(q^$_@(^nG@kb8IB:Cp)M'E.Xl$Poh&P!YZf?cO%#3m]-u_GHT(V2fu8pP7+e/%k3H`
%NOkn+oZbc/`2tBXPd'f>'<9,dqna_"jMF-?g_t-?Lfg'9(#4?/61!tsWJKD=?k5n550=4&J7J3F[W6)910_P:+uB9'9!L-F8W%D/
%EgX#fE&o@uBM([g;q]0J['4a@8C^%O!6cGd's>@O%La&Q#V7CQE04KS&_f4r";uWPC%V`6R@=_E=8WcVZ?_2FhM'ak)+Wm%E][Vt
%D0)P024Ltu;<jr3Tj2!*-*#`6,tE"%1qbX9D)/r9L,fG#f?^9[m$nEbS-`0rZ*>9G/gh3hW4+HA\fJ@N7\^u'M:3tdAm#Tg^T7Np
%*Ef3e.a+t)h9jAgG$l9n-F6E)"IW$!S&H@b+=Nj25[cBfD`9nBQt;7Hj5+3\Wp>;:D#)j9d@t1JK<&W+>\NZ;ZE8()ia,i7F%<pX
%bFX0Bpu./#h7HhHO[O+U0TBO>0IP#6;W"Pe#A01hSIA?Yi')eATgimm$b-*LU".BMgh=W`#'@UiF7J20dIiahSR^MQl3);F>6[,;
%W611#LfMe)7l(Jm4.:\]cKs2K9e='/M1jXG_FCbbH0TN#C$Xt;#pHr+=gfF^M4mJRcq+F&^BOiX>4?(F]7p\lGeSPUB)QFh]&5K$
%pIMd,7a-rK]@$^g*:5_^6bf;<<OG4^O8<XUbGZ3)ZOQu9JrS3ZHB_J^Q<!jf\m0or.`mO1OpQ!^;M'WiO03=Y^sq%4c#h_jM:TIV
%2()"0.<!O^`B!=.Xb3sVb0Gccoi:WX#3<i?'PTEcm.,SXhtN!2mT]ttENDj8@"JK4h[3)T*cVKZ]n'`Tkga6M!:_j*:U[5U<_$s+
%6sefEUS4Qg/;UVShLaFXBgQA+a3GB->YbrimD-f0C'$(i)ap`3gNII!ru.a\=o*s))C,#8!3OK7?)_c2-Mqo?)&*fg49^c=:cHP[
%]b>*SKmP,d,[Rkt($jZ6#"-Fk(QC4!4<hA!e_E8j@#4%=)2kd][p+]-13-ohU4f6Oa-oS=SkQM2\;TM&Etj1_+0gP#U3\@3GVRQQ
%/Z$$9gusE,UT>GtaE@__A4+7,\.%nZ<23]m.KgnPF#fa3iG;VRl,(tKDl953UMdhCm=oL\89.-683e[;b--&_8^QMe\rE[<=daJr
%l1/Du:m(WqA[A0%=d?Q&d"d[YSlgQ+S"q2Th`(s,RlB#Xb*=_i$Suu:7#co$5f*f>HL0]aktZ*b38;;"Y%W%EMJM0%1Ada<(j2l3
%cV;jNM+jCF<I4_SlO5sXFtTl/Wh[EpbAInS>@)X"ZdIJj>TfK35+Cq3i(WKLA3tuo[!TAt-XX-4!G&ldZi-lWl6d=Q.ZWphV2,f'
%@Tjlc,FrNiC5ORZ>`4kt1`.LO0n_dC(\*F9H4'2O)-85J0(6OATO!55[G*'c)bA*2qhsq-(ShkM'0Kn*PK<q+p)F"5)ufm'b064H
%X&'F$Stm&.4^N?A<jY"l@6:VRSi5(:OR=mB91?Jui+t[)p5(!WJ8IYi8e@:=Ot$gFge.">)9+^iDfVdUHpQR:1Xb+]CEc\X".i5C
%,^2,(@QX'Oo]3XkR:fG*k>$\XDhgSd=?50k4N.FR2;E6s5Z6nrTa`XghbRm&Y8o5Bja7/Bgptj..Tr\drT=d5Ahq4Rb0i&jO,`R_
%$Fhug9p[uSI)(P#IRE/6E[>9XILQSu:ZBTCFF>0RV.l'>>Z2';>X(Cn#l:lf,^VMcb7!1sj_-0WA5VS)0:>_n>)V)N.@f56;K:rt
%]K]F"10pRYD4O[%I61NJ/d@9?G]q1i4W2@>W?8'j6rQtWrq?)=6f.S*FcDpD5G&=;WVUXQT!G,H5hIDZ#L<l>510H`8ILlKd0bn9
%@@g==G,k";I]g]8bGhJ"(erCkI#7Pa"[Jm+]Uc$NULnruXCs1<ft$*.AItAOSa6dZ%D5!i]il5k,.kliPfnoAW^&]p$t-5BFoK(k
%IhcR^#\39fUV=CMf/NdC<'].XY:F'-OD0jG'6pneo[d'lM"`5rKDB:*o6IO3P<`+qnu<pL^sJ^>G]/7dLsF!0)8m%PAY6_\5@SV/
%p+Yo#Lf/iTPTMDnF7H33&r/)(KT@`C.Ah,2'07]D@tgR]A=04N*uaUu$sJ].UAflrm1V$sC0ILBc@/CB`eiPk5!M_BXK^&5p0HiF
%<0$G<*e*:K[aCN(jRfB4V8&=h"eb)`c_;=jbo/(+G6qWERsAQo.A-afc7UQa<[rb@"_(f$)%cl0]0"l5]0lF]i`*MacG*>Q(F2K"
%ONf'_`MNkT?EHTXX@LLR#'.=k$dIIKmM=Vu$7RnL3An+E%,$^iGLs*Y^("mc]7amhiH\Co>81'E\XSKQj)j3N4M*+QfqpnW':QnH
%rrhd^N#ToG7rRu];oKai)_]UL:D"?O/!/(eh=3O\q_9PSPA0+oA_An]FIM0M#mWt^9pKdjkd.8o8%I0DLra!,[7tYQYGfVk[Ba%j
%m8;\Oq\-t/Nu#'7$)21F0RP*SAPM:EiRHoL3re-pIk6P"FVF"S@k'YDd!OFCDQ?I+k**m;l!$+>*?jT0-pD)6E[4*f[(:"`03Lbg
%%0-P59\7t4UW_s"KJ4*W"/.SaR',)tK?]8;*FF=O\gdIZl[Mnha!gISaY:SL.Dg?MY^447#-P6%l8:X+C1]DY?f)UjC%Rtudt(%[
%j]J=)!n6.E9Yc9Moj,e=`6t69FC\S0N6$,/fJDsDf[[#MV<-KL7/@=q*cWVSE:OTD)t1lPRI9uMBd$Ftr3-g'4K2sbgr5'6-q%';
%7L)m0>@7M@,.4D'.9hj)VAE-,\/)"l>k`0`rqZS\hE9fdcB!"j_]PgdF4mJTlEP]4U+;\@I8.>9<bf:IkJQOLHg1<WM8)mld#T9j
%0jI)5l<\b71b,_6^9BId_hSe4co.WP+tp$k<<E]kh+Mi;AOWd3WsU+?G*Cb#25&;.IX3V-R:_,>jt!O*64f!#XfDJim7CA#k5GQ/
%V?L0o6RBPr'f?^/2fum/d`NGC+E&QlZr9q";Mh-]Y*19,#dRT]_t73n[Vr_s\AA;]&aUlB5\cG)$do^=JmE"gOP7e$SuZA59P(Au
%R'Mbke_\K?4)S?a>R@@!0mrD0M(XhFmUcKOZb@_`"J<ei;)lV;pk<[#;*"p?E#u@;>WNe-R;)$X'PS3X"SD@-NeZ+b`%8$g-rSRO
%N&O<?gk\'&dR!QDlab)0\a*%dcP%hZW)F.i%&6Kt_K5jN/5;EX^N\7OC0\/,0M6Ktj:]Gq[H\cHfMk&^;N"`:[+)'`DCtRu=NMfX
%e&;Ptr9Zo!Xh2NL:*haAH7V-Oe_=;VV\5SpV42W=<=3P"%ZmG_"k'K[[c"El)-hZ&#-B'J86m]_L_Yhh/R6:P>Yis?<m1GaF'dh]
%"HLjn.BB'_7HC+F0,*J#PUq%QZ/u<6'3UtPQaT[XWTG@(2-2\.9F[R9CEMkq[7p*a4dXZO:kh;YNiQuNaI79TTd@Y]2jPof7a's^
%$JQ5^fi+X1-[l7L)3JO7lpZ'fF-M%pab<1cJh-+LB>.5g?ThE""\G1cXRf#X.b%I%=Xu*?+KP/Ll>jhK70#F$l*^[q,^.Di>GB\L
%SLm9GYuqmGd.fC\Uurbq=\F_!J<Y2)n2.m;%-+\B`*VmK<m*_mbA31U?qGQm0-Fh>T4h*"o,09WG3=g,SoT'fhGo%aSmE[9iG"r\
%N\V.T!D/.7Gi=6LQKpZ*l=u3OLH@!k4ZA\=2q(:#_X_=m[9H$FX7qruBQoH>=M<,TbI`c_mVT02hEMak-V*U_2WG=n<J++7a1B5:
%ine'H+e:`qE%b:G<r0?MqHYp/jg65oA?J4X:)rarSG+WYr;$'7s8'(s."o'HSXlN"V#:1Xa:/`rOgX.G[Da@_e(%So9U65C[d;]V
%h.u,*Uca74[L,;m'7$8>1E)!(XRA@Oq%r=FfB%*7J3S,GmUt%5+_:aW[N.7t#>hbh9XUXQUiO_$oXre8K2nU45:H[?$:)[-Qd^3Y
%kg)GB-!E/i2*`C]KohJ"q8$gp]jMAJa&bEpD`l?Tf2+KO`$bLc-'ap]8<:6T\k;Bl@gD(0c3+$t%SddF2cH-dfZFK[;G_rO7Sd!C
%P^i7);d!D'f'IZm*<iCZA=0=e_J/)L7"ou9HM*6%Hp/(Tj`dn\`qd#V4BS3#Wn7$%+_d$N>>+@m<=i0H8+VbM:CW3'eC-HS+=$t#
%F2m$?@gU6UD!Ubeiu-8R_urZ>9SN&5hHO&(Zg&%s@L[/mN8@AO/?JB1V7^%+='Of1")[No&5`bMUiBKp<;+jt<<s"^4)FP_3An2g
%XK6;2cm4MZfKB&oc(FqJ.'ETp:EI`7,JmG+E>#*k`9[.?;\UDik^=1M-Os,H8K,($_L"^#6<0D9AuJf>I^LBm+<X)[rlF,cJVL=*
%-+@`l79DeO@u\hYE+Td!PAjEr.s[H5YcaE#V8;VL[SUi[-^lZOf8UG9.pBNu*V-%%0f%Fb+WLqflgWMq3pna`@i%%t2]ET*V0cN9
%_A6SM&nS#$lFdfoOA&!.,b=rG*qAEsoMYNagEl"kH)ghA(`ZG!0M9!%8$^]/+Km0L90A3&!Y&%sBeI481tK$g9U!9pdSttMIg(40
%n"XOM<If#e<=?$kA-6(0f>stZ4SeB^@i_!<0DBOoTG(*hA-ksTrPh*T@q`:ZQdPHHrInhLrD`SLW@h-?n:N3t]sChSlr`Bb!pL0@
%r/;)ZN0lb,95M(;=D,]D]:WYl&Sgs@gAtHD_PaCF2VR1YJ%mt(r]ogs^.M;Yfs,XucUY#OC-W7\;\b_*TCn(o`oM:ohM.5TV:nIg
%'1"Np>TjT>q2VXbrSQV-XgV`"k'VI#./N-:*lY*4ZBN=WcB>Yqj;N]>Djj*FVp#J`^-U*e.o;tEVfg+4<A,[GAgb*i,QrchOHnuJ
%?:snf5,>UYR'<NIe'.Gh*47-K)o'8OVh8-%nu6nE%DC`e.L2fmMV'rC-4c%)Iarm2Cj\Vs]g4&p27FGAS`=g328Y1=X2$f>4]p)p
%SEGS8%3_MY9:3j>.i.d!IAKmoZ*f8E2gSIe!r]MCe**eW3jF$C22-nlagch3.WE1\ikGR#4XT#I2"+7J]l4*Md)2K&1qe;)D:La)
%=hEg$>QNb`<?4VX!M5[a/6MQ.Pt%&qjhr8OX;*aQjm>U4ep/V"q@R_026]k#]8lWOOo)1,s)*[b^@bm8iGg^b5i+HN]/]+@<mkVK
%Tt-Fm$J\-8:eg)IU,IO0.>VO98\53.#rshCX@=[NP8pi!3`MKHC`l=m'QZ&0QH%.:\3O,(RK_)ke:j4b9fc/X@Kj#i*)DV(4HN6n
%WGIP*,pR,Hjd`n#5j91foFfY2DYa2jM"T[n.:ML36:5m0!-OG<AId>LGQeenYdCbYf#^J&\g7Q:=2eFFTRd_JTMiDB!Qh4pJepIg
%N>oWrg'Z'"ePqf142'$F5S$hmeF-MEUTdFoF@:(F+Q`p1PM[qbRpGR/2dSRbIs+*A7t5)Jj>ocG:DQ]rFG;>9=4s+lD/9gF;9OOh
%(,\V?FK!cAY+FDR@;=(^!<(_RZsk4jEKcgVVYQCnPZSul#!M<&dl\>QOC[pIF%G3t<@EB0c_\]Po-S3s3"Jku's6.8SuWl$"?hF#
%[_@ktBM?K8S$Q36+9mmB$rS<>Mk$78)YFr8fZ(.o[eS?4U\Q^njj!dN[DJ?E<>'^^N;(Nebr7lmK,kVEW>uU]AR0.9=?Ub;%!L19
%9KUb+5d5qul$"es6`*si$2<CMk)D?frBb9K>lO)&*`KR11/H_*4^:eO48rJD)+cm;P'U+7Er(t+HBp3Y6[P\qRl9gJ?H3+_OiB:[
%NnUZrIn;>)SH*M.%?r.lm&Kp(1hXI9hj9\V%N\/?eCro9e[(%MRXTVc!$t<%Qu"(.CrI*..#B/K,r];ZQUh()NP>'D(uXkAmmXk*
%,PeXR=&t`DbDe7`EeC?`O\p5o:8?DmcV1#tRc9E$n&WHbdb>m"ccl.RX;bRDamOfcOK#iHWY_DT`#M(9W*9YH/1([$!!"Kb1Rmp!
%kk5_QEZl1DnZ$UPHQ)?qDjYuC>P'jE!3:mOW.u=4rjATAW0iME^ETPBIN9n=4;QJN0Voi@i3oC,Y)Yr$4qus'/!R6+f:*$FAqdtt
%-ID>.JAY1QPCElh`9XlI;_3Ys_C*EhF1aGhr<#:Q-a1/.D<2C75\4n1IapG'\*q#^)Zn\gNa%68QGB2aeY&tFU/$Pf*?dj6B[t>J
%M3;9-!u*Jd$meY`g5&n+N"KQ;]sRhf["J:B<D@!tWCG=d,j1!*bmEVZ2^be2UC!;n,NhEd]J[m;b>P+1PYl;mm%L\t=+%\6(/=`5
%bC4\&Abl'2#aa64V;E<hh9T#f)S0;^5O'BI6esL,7u_h`41>:p@%*?s=IDArNZ.^JkR[>$c[8,Diojj(7breWCFUYH#imRi'YW06
%BUTbG4R^NH>-uF&r#'Rjh-R;ZiD4CbGBqhBD>S2P!Qp)]hY&8ap0]cF6A\kuV"cinJeJKDI.mLs/lID=3W5G)EIB>(WKP'[VU^_V
%(a,b3*@o@%6NM1LdJTBMM`T;@pPN8!J@bVFKY'LOiT7+J@_Y'TB<5T-r]'j:2^7]\T[3!pMM*G8CUa$6Fmn5@p7$9sdq2^?$:0+@
%LYflp<iG+=n+?kVC4SK)rRUQ)7Gg4Z&mNdu%gYfFj$tgAEi^`_UhNojb-MF,8AqsA*_`]U\G,r&C-&)b51Sl@X"&]Yr%<QbCl(SG
%/)BZp^07<hU6qOe'YC&SJ.G]XI9ZKVpfar_BQV1Z0+TE0nl/u2=4ZNNnbEU_Cb7f!NCVI@f*uM@pf[T;kEka%hECCI]qeYZ\G7qZ
%/t!GMep_fVAAg6-]hR=[EIM!V/rn"V`]>d&E3W*Ydu$8</*+WZO<9P*:eFmR+O6\0H9KS(M;`p'5IV!o(%qDA7=@-@H*7j[*.sGL
%."L#KN9Um@`N`DT74.dEa&Ohb@P."P9ZqEUVLN;:WKSTPMbMb&Q8"<ko!*-O/[/HCY@hQ"RE4f-C<<Ha`nY`$Dm_u?JJbdHIVlNV
%VWRPO0CT(bVoIM!*`N,525-kM-\8F@)U_:B.%,*=9c=*_Y^$:@^/$U3rNS4U46^)=2nS'^2r7=h9VFAQ/>!&B(,`jiOJ%4>;?>a!
%_.04HK*8?ir81d5KW<$IAg0Q^Q`(0m<_Q8^P0<M+dE;nD=!gl;Vgn]4s!#od[G:B8*AiR)eL'ko(?VP6b49"UcV4,#*)`*KZC^#?
%X-m6r3\#%=:uHJI07J8]E"RL$Y94QBWEZ`O,Y!QBq;+>nVk7UabmKs?Jc_<9j.b"&!0h@@3Xhl.Ui.cbP(bHO$@_RKDm#&9Aa,[a
%&%mr@%t%@u\.Ik7qSH*Fe[5Sjqu]:FabVZSCHY#(;p?#0[p3u^mcQVsR!--@7M=gl<ZBT*i=eOe3-h/=!AGY-dcQ2`j%3UFd?s3Q
%01%uigZma,#dLQd1=9Q@-O`]sF`p)eVXTQ1icAq(4q9C/oa_10qk<[^5>d`7=qL(,iH7<P"IBc!o=T37q\E*?;b?fS1e)^?)4!-a
%OCVsg5co0E@cQU57I@k'9uIHE-dN9WnfS0:Xn93'`@7BG_C01g:gH1&[j<u"F`dMf)N-'T?(V[;#<^6Xe/tP'a1<iYe;??D/4Ng]
%D7G4W,otgX-;%a8E71-5s,S$*4Ten>CGVTQ$ELaXTU?=9eu:=.p^JM)#^Pn,0G:hs3J6IQKU@C0p[M)0:EQ*jLPD0S\@"Kq;AoYg
%.?]eSU*qT)UG*j:;>oGfWHNSN-PQ^]K-8EZM$@*Ms(l<%b9rG3DUJZY[d/"IRat]p>[N#3H%qVV(?SGBXtV@,hn*X)@YBiBJg!Hi
%GoF+r+JYY2WOsuO-j;d>gPSOHA12N>3Du%l/F0f`+(qZ`S&thEW3Ft?X(OlPKm*>'9';l\MU(9P#!Q;T<0XHH<9!g)2/PM`/Q=Zp
%kgY$NeLr!6#I?+taKh*HY$Di#(@i-/r>otX7OS6P<2]HLL#'C>RQ&CZf;a,&AXWhtI]s!)&^9b-iNc/G$)P%AE('cs`U5[<W0&eQ
%nq>4UafPip;":R7o=!Of&d<>0=]PXQ?`>p@6c>2*!1iaHQ?[VZ!<8-YU<O9]*EfF+bKru)k@uO6+;esQ:sc0o,q)H&X5Pe$>70rp
%//V(s1Ief7',fQ4[Q%YFLapVhDSqXF*_bs&Pcd/(c##!-:QZ;uZ<Xjq!T]^F:f5T,eeG:I:NH8R*iZND$3KY)>:._XS=E=09m4=s
%<@Shb>Bjkb(u6)OZH+6Tk[lt.%"0?#^pC`j"fH$2Ce;%Va)J%,IRuL&fEq$&1&ccLP&q9Dj)$oB!^Y?/PhtkdcbC0'>WL9:$8ET&
%Jo4?V`m[2(H#:HV.=#oD.R&&IW6$aK7EH+pX]X9-3SEC/[k+c+#'mOtH91,rdtsg-Ql&nWVHQu0FtBt:Cd`PBR9WJ:NZCmMA?;*G
%PdH]t*;!T*0M[K8_T:eXqX%ER7E)TB3pahK0ZNck^J&M&Jp*.e`p8f0F9&#N<dmt0m\Rh2!L@7>KGJ!Q4;PO6?qXRW,AM*UN%;i.
%o:2"U.9"LPBECQdFCr3e`C4'-2?:jN*IrbTOg^an4bG<S^&epL)uVWb3i1^gc$upBS5T(6Ga0JZgqoBP)=\A;FV\G\?iQ:':aabi
%m:sc7?A(L^(<sK/3WjAL7+*?20d8?q$:QFg]2GTV\jQ$eKJ`85FC$Lf#I?*>T@V[,hoo6X"US3=X.5IoH"K$;:SF<"b'`:+Eu?>.
%$f,![8_D!\fiLE,9hk_D]cqs@h=%Ih]o%apZHQlZNrIAQbT,SG&5T&*P$bk!%:>OQV9T&Yq19R2nnli,_15e23!"6f8"QC4"SC<]
%XPd]ec,7S^L]pFSpQ&%/#5-0Zi!WVY*^r310s3C7jEC.)Iqn;i)6]V09^4a.;Gmj?q-Nr@DT[Fb$b<%'5[/\2$,V<r^>lV^Gnk7S
%8CFXpRm`0Z9;>VeS7C)89ic2opa.@&k,a[aD8X"M3r5d2Yb@CUp"HXpo$;@#6<;7YpMhI,\2#Gtp7;j.R@$QfI^:ms[@Culae_uC
%/!-S5MEr9I*bsAfl!SDC3^V2fl6I$_5Zbm8=N<U,?dDc>e^crF9'u0#RP72^9<7#1BBo;o_6chN<]`;<WloaBW?h$RZ)O;Mef=9k
%/@ROSFF#_n.k`5M/NB@0L]hnorXrMm%,mpO+m5G:"I7F*RZL-<%R9E#H[,*q7]].oNcsO8oAW"Gk?[cK=6an7H;nLcZ4FT8kQX\#
%E8X/s1%2Xk+Sib7]>GEcrO&1A(0"mn&OrNe1Jm8a?A$PoZca$*pXc&g/0>**V:cNZKY%ub,i9'PTUS6W9T.iM[u*IPVF%+`=%QEJ
%=tZ#RHTC2*I='cINkA(&KMJ9^Iq/2f+i4tLE'l<RSRI<\n"j'iI:aAJ44.*qbh,RdD`J)u"[2gh\O7u+'QdcR*Z`_#[[M+IHX=B4
%k8gJ,Ae02rFo3S2jlWZ`'!o*<B!`s/bk$p=Z?Ns(R]R@c<c;3>_,qs0GsINHCZiQb)X^XMZ^j<3Q9&Oh40NG4nfI8TbgS3gk.X][
%[=<4?j*c2Ir'cQZC9Q0&1_j'7%&htEjT!FVau&:#hDQ?*Mu>g6[3Qp-XIQ(qjAO!q$9<.VicS3dJiZ.]J*eN1KPM'k</`)Vg,X[9
%;AFk$c6Wf)-]5U;ZVPUJ$[#ac`Y<JU.>3uO+h#"kp2@WY[Nd<mid$s2"D&\14^!T?T8]St;^[`9+aY+uQ#:Y'lV*6bPfb7I;%^p=
%N#H@d9aHT?UTtbb%&A=&qLsKGqguqUFlj0l?q+V-!&D*g7?jiCR6lC)r'iL6kA'GtIW0r/?55PAc([^-hc\jIA=S=7La51\fGr9D
%J+q(Zb=qetKllX"Rm:J<I^5c\nVD9\;%I!ls'Y?&Y.GBPoNVqaAjf#A%B;aob/n>eGM6C<SYIr>MZ9E8#^43dY%2CBDOtgqU#F43
%)sp0X-CGDt`#5!^7r#p-\3"4tMIZbBM.B>j?-T]S2OJHk9N%\Ia.gY%F[ru\%a6k-Oa_-s%mYL<YmRf,`RdncO%/i]49C",O%V!)
%RO+KXiU($,RjI!8qe0IgFf=JH-Z&:,BsE?nPV-Hdp9;V,S9Snjce3%O5F6(eFA%bl.+Q@*AKL/SK+N-&e;gA=3tmb,(0BloOTKPa
%Hk;&1E`PP:iKuH?UBtZUQg$Z+aCcI+WP<)e$>H:S2d5EK>3l:pUGGlTr;8!MjO)6hm[J!Ak,:@t)VQqnEY"V^_c4u1)(<,coA3M?
%=M*S]kHI;/N#PsZRHbu-;/XkB030S^bC/Gmb*P_<_q$!X9cbJFLoDggOD.go*ObaWcfNuVV9-*C[WVj06ZKcdPeSY0Rl%\:G2"qJ
%%p#PYZ/WVSV.46ms%fl*=9=0<V#0lGRW$3aoX.@q,*_W&]LkW==E7QH<KB7anU!3VJ!m0U`&InK&[t#)DO\aOCQ8&uknbIXj3XmF
%N4grGPWeY=;CH?X4eu4T"[En;9T3sg.1e0MKpb-a<D*AbPPZP@qC,5WeEs,1*[5;YPNuBKB!clW[WQT?8G1_GTgr4u8,6\.bK9#N
%7IG_@4.er6]A4duPT2bO^YQE1'17H.gj5'L2L_ujp7U20f^&`+H&<s3.)Wn:-IYpM<i2H;9Z[ts+'E5okCoh^]1\#8QJr^gIj`kE
%KV2>P:?d]miRSoeB@rqRZFU2\C=tMi!7T%U,LL;-$8"#U,YRY9H._1N9+SCgdoUd,NHS`b[ZqN(&erT^6+j7sYu>jF6TF(UP1O!U
%a:7A__&%g@ipo[TI)L#gL8uE<ZHM"N`S=uP#"2a9#p*/AD+>Km(tW^mA>Ko:LTi9!\Z4]:\5`E4TilrJ[`;D&<.E</=c^(.X_3QM
%;3PUZA>:OLH!3uq/ee'0GF-TbLA_ZX1p\Z\Z*j5pBQ[K_,:2W"I8Tp<;aVF:f5n:RQ.3WoRcrbM<BtSurnNCtDjQ9MU_(iP(hFG^
%K@M8VY*Dtb(TYLlG8]1(;-:K>'S1o=]BXL*H\c<?8M7.rF@R!;gfkB3C,j/k":T9!1RIs5++KTnbk0rAbLc1u'RZM1-SaPs4g"2]
%/S!d=mV+PH1']7;T0oL<>+<J])\"b&RJU$<doh)j)]9ZUF"S0B6ler)QGO%&%nbUi3L[l\_kK3YnK&UbKfML5\?S`NTQ:68h(c@f
%SZ'ui4Zg)rc\U`3#\t4phHe,:V`L#fBJeN$))^:"D9>UN"9m1PW#e]S\PTcKjt,<,[,2SHfVu^],BHV6[eg7/7=rEkPtODO]KMu%
%L&8UMe(t8bq"`%sNV8LE7[[6$)W=@-+H:a!*<OcLj@1PHoLQ<7O'&0N]r<A\Z;icep(BC/e78h3QkgAe^p]/X=]1uOP/dIW28_IS
%#^Eec2qJlnck]d(4RpW0?NU$a$8"*A6\/7gfr+mE$;/JpF:X*4P3M_LbrI+^kk2Tt_G]_%<->W[##@o]-Aga_P05Y75<_/[=tU(1
%>@NGD.(?_U7%'X'_2<VSo1gq""FA4VAjh<Z+/p>dfF:IKm-o$t_HokM_FJogZ^.QA<n0LX".`Rm8RBquXuF^R6"^iC_uJ^O:in(j
%PH%,3pr6\?^F0hED(ecCX(K$9'\m;E@s%DVU=KZ%E[2=b5+pX87&PH,a1MCYlLBGK-j<b-mOkI'd$djY?"TI=O3cWJ,D((!PE>6D
%=M]T"QeOt'QTfUg9#NJr%p%p&%d&;PR24/'Xl(].gedn8KAZP6.:<ab^AQlTEs>bKZ*"T+jf#_FAZU.9WT,4"b_"XKe0aBbWE9`"
%?V8$/^=Z>)[6kA+ds5MIbWZo=Xu<Bp+'Wfu5pe1cE"Z:l3YVm($Ibds`UHG=r>B^0I)#',7kNJYENu'D!a\En"7La,s0'V?=r$]+
%`,'i_@n6L2^DIPA0CH&\e)ZUhJ8Ei^QC@+cJB!!,$%bOe0%4Xa4mctrPEgY5Tdt/V5:WnJ:p&$$mVrTa]>k<$'/BYTGLn,ZAR"\K
%Msm"<o9hI=PfqKTFm#e9IpYYKH(u]TCni2Y`Jf"/XgKn]#i]^-oJiBID+n1.DXfd/[.kV<%T3^m2R2\u",U01m0d(&O,YpSZma>>
%o7";&:Z!!?9=\gY0L:P<h]Z592@T!Fl&'(s0bnos_XuM@QgP2:Ml6^]hSBesWcB!D;+e"aD)]?sHaBhr>"iK.3)i$#91ZoCJQkb>
%BJBT2M!1i1K719-H/XGt768UJX8L:/W5EG6,,TN.PF)BT1:6II:h)#iEYdCj5I]e=&m["IcLSH5f!3d1ega:8$du`udL"2p$e+h'
%:B!pgffr6^$)0k\/d62C]22ds;[>7P<a8*Gk"ig+jQRI!?mNdWQ%gUK\5$(eHTQ/jd4FRSYX6:@7X?kUB;'gh>9HFV149MEA(>6U
%M/2P4O.\Gp99:#m,2>%S'Ura3cb4r#KiBns7BFU2XCN#rd<LlVB!OH!3%E*:/#F9KS^o:/Q?TDAF:DK+,1"06mCD>S,'ZFcFo0oN
%omX8[h2i@RH)dLY*o<[B_A:NiaFh*:;-<?%5c<d-X>*4E/l(DM"e+7)$6pMFl&TjQi(6mUSC;V==cYQ4(4R1"ZZLl?k?S:CYVQb$
%>RPp@BPaY:XnWdi:sBG1@NFr+ZKsS8\_:hYQ\-7?qp@'EF2p)C8Om%U(AQo_7.Ms*KM`Kh3E_g`"p\'6`"(j#Pm20'.0.%Kp,PXu
%cpO3J0qNri.\!$AC&gq`@d4NTI(!;JN.>Gh^D1!&`HuAmGNP$H,?7@9ZEb,N]VjkQL/!JOnd2qpoA5a9A1^M:_`SW7++PHs!h1Tf
%`H02h1qX]tLrTQmSkRBV)iT%>\]@;he]DgfS+@Q]+k*7%5'O_elL.d:V`2E36X3ul/Bt)i,PTgPMESd8$X<jCDDId<lG3Y.nGiZ3
%3,QfE[7$H5VmHN4$$66q&$mc9B*jZKRIo]NY^hcrb"a-0*rr8l<HdaYRApG."@CW7M"6cr<cJ]C)LG*>f^]1PeZJ.Yj\j;V-SB=0
%<q,mOITT4>i>/,1[@YEXT3S#3&2S^J9<!>?@F.-uUA-n=5TlSU-rt:IqRn#SJioeVQZt?0#BY:\McE@R$374S?>-8nCo.emN>?3c
%+K2!O)YlI:a\6hNaf9`mT)\_RoLeYAmIa<%j7`q^^.B'u6^nV;N"X!`&Y>_"!1CiDb0AG[ZM*%1i*h@AEh"RE3FH1D%^4Ok;JrQj
%X#F_%=1GefXJE"p(Q4ouGM4Q_?1HuW1Zbbp#B_BPIkn.'@&:$ho'N<rAt&IUJ9&7A$L8lBd1":@Oc9\C]<!6n#+(KmQ4cN=DU^M,
%l:A5DS#b>MPTVX0L?p5n'=:ds!c7#TilAomT%,@a+&edjJ/JZ*r^2,foE2!;aH*MT;85eS/bu2VKZmt&S.'K`MXicaY[pgfLNVe1
%=qP]XJP)/+ea/k.L<e<qUl]e%mg^g\BIDjS3e"k8OobZ&!&J@Dj4e"@40JQP=tO.3A&Vc8!?g[bGEFjPa^gX/$:IMHH]<RX-87.@
%)Qp.5"!d39dfPWgP38J<N!kdFW<ru;p-bSe^t!uJ^U$*oWQT+*3h`q:Wt2e>rT#B_L+=toG[4>8ZmBKLZZ=aL.]AS=S[/!FoW\U-
%;0`I\;Kd<Z;.A&6[QaT[MM^IQ0>LtH/oQsE-7`4qd$sF4Qb:?6mHDpS4stgUS!Q;X9ec(O\FVP*ZQu!A)H>pKq?Cj5!9BKTplc;5
%98Hr9#\\9pUNEinM!1bWNgf:h/>EA0:G^O/$U*mRcdc.1Vb6T:1EKlh'-g%eo'PD(1`bHBKdm0LAQ8RnRAj790J)<N*M3q6ZoViB
%R"\]/.Ar??VtWk(XS>C+E/Q_]%;(R7<ot*U#0sM$*-@ouX:`7Zj\%$ge9am%\!cRQm0g$HqoZ8es-t.:jMss2.MW7JT)&U:LKg`m
%P@Td^0KrS.rGeO)3"cAFf=UD@>Hqd3eR3.S/hG+lfICg+G4*6(>'SRI<a;'$I6J:^]tQ6bHLolp;5<l4ZUp<G8ZTN(r\XP#L%S/#
%oIId/C"Qb.C4+hg[VSr4Vtu;6!_HC"s!bO/VKJ+:b8V.ar=&^>k\E[E;5J+c:^I?/4L@KFo*Ji@d5OVp2Yg1B3?1CYKg&i`Q*+,]
%nRDJ;Ts6Ig8?44c^b$l]T8][>e[%YYc;V'o)CBfi82P(\Ha'Ao<.6X@U>_ha#"c5,Fj`+Z1dLe$dA!`?[sDI?S(V@Al1b#oE@VdI
%1.l7N6Wh4W(=Q':]>>CgB`khQ<Y^1QeI(d7Mt6KdGHUa]@1QBM<qd_2Q;2\\B2^Zb2<`%8+r?G6K0NJ]cX.Pn`FFdfm&#.)93BB*
%E5ifnp>5H:?Lm1DK#=Xn9KD6]@3:SXP\I!N=Y4eM'%(gn\FV\4H/U*&0c$to@gOM4o9:?.EA;uLF#e.ZQJ=Z^7oL$9B<>h@Qlh#4
%ml_LT5'tYcq%f5LA"%9=[dLam&jOA&Js>7`D<LN9Bf73`h(*oJM<GglbE7,UnbQ$+?I],LV2@M9@2bnpir3<eN5;h$8iN.bb7eYI
%g@Ii:O-h6C847"hMKhV[8JQTP^`6abUfu4&5XW[4"Fu/o]-bXA%9:d<"oVab9Llmq+h]ot..RDf<5K$fY_f]*=gT"neM']ONh/H/
%8QO!<;p;C?[2)132]IQ8_9,2V02le$>LSgekAk,c<_SXs_:2O-1V,71A=Lu\!A@_TnIVW^IHUs/_ts5;ZM*Yd9W[IQl@bHEI-!qq
%1-3M.FWG;j41RLV\oJ+LGX6ECo7R8&k)'so9IPlQ9H2J%8AW@'CT;QbE$356'\HC07P@>hMXP8&HbsPd7?a)_Qkfij?mA4VRFEih
%MZ_&`/HA7oZ?,ZB20mk]3+h:J;(!A3YL1Fo9W]BCpab2,FGRZU3V>4d$Su"`^@`>H^!/p'aJ^Sm$91k(Y/2!_Roifa^h8.%/ihA1
%,d%1AHO]De/IFK9at']`Nr*u1T-,YF>ZM]dAZ@_+!^p&R\.u%>a4*SaH4nQKPMWs6.h6)ln:737K5',5>6<*1bTEVe/ja;M"f\eZ
%%=02LG8B^`0l*&)3Rck'!M^?&R;DUm8M;]\,,gC-=3Vt#<G&eN@B%g(/-_0@?PD[s#b4lZ77#d0kL)m]6[I1sl8:$p8`CRJ&8fpY
%8m"t6/OE.W*2ZS-js?&7SPNd]P`UcPOp8G\VF?V!;i@k$EXb)F,qq06fU_#9PUYS\("0CP"h6DT-nIprc_-kT3Rea1^.,!\nRFR)
%d4a]F<r`XQ70LKLn("K>0U]2?U+abF(RB.CQ&8mD;mEu`kfs3bP:?WTU]iL+D'[U23Mam(/$C;Bn]`1!9FCg#E1K!$@NV9YjRrBf
%?!clUKZ$D@rL"iJ6A5q#,*>Qp#p`5)e$\*kr`\%g^<PlPW!aVT:BE?<^bT5).0HBX`hs?-jKAniIoVc3l5hu!;H&03?Yl:.5$B\g
%B!I6!neMC]o>jO`*UjQY23+ETcmb6Z"Oi07MXflP5+_g,W8=R(M8jmb-YHG@75nLAYaI%'`_D*@>a0anU(\lBj]1G7hGaqMEn8pU
%]T+I!o)10^G'+Fm]?r'sB`m[-f'p:F"^DNRK2?nM6*ZH,U#C7bK'6*%ZK)MRU\Zd0pc.r@]fA#WVnht[#(3?Gl]FtT$#.p(gm80B
%qHZ3=IVi;O=>o-C;E2+\Uf@M31FSnRO0$KK9;+UH:_]I%ANr<nZ?PED9c__EhCSDjIIXZBLqietSj_W?_;<hpYkhfZ-0?!o[ft4k
%1,T9'crN01Wl&rm=jqO;7W"[`A:l]&X'pa>=\h_X_t(q#LVQup:l+Z[f*_,cHMU2=:fp<1E`MKF4'G:GN&Te=!-u;7!B./nGsfl^
%$;4t4<4']Q&F]!0;*k[>8/<0oRDP?5Jb2slf;3`CiBE(D<F(K&S?2@UlC$t%WTipg$A??G*D,OB5'Nd-aqk2<b83!b[0FG-"na[q
%+Zpocg#ltLG6XD!fG!/2&jiHBIk6b?IE6tDc4;ipNgo"oii@Qt`8YdYhs??C\>A&7,b%BcZZ4,+0/adG\h3TB`e3O?]^pal^ADE$
%+6i6X?G=aUk<Gj6nqFT7YibOImLRJ7#PHh.?G=el07<fO?@D+2E)li4>6<ZFUFA`$mn6buD\#m:g3QU:UYZ0Ej1Hj1X%-t[bCR#=
%5gqBfCW)!=!C$G<&IpAb;cjgf2#&09'Ni-h;*c*0#!eCA'@fR+ebp2J"WoQ)[D6Fl.7rkepFnH>h_<GGWO/)q7>sjZ%-moa:_AKi
%FcWN]$RSNRbEP]+WUJFi^aQ'"_-LHn52l]EnFU4'lMWiD(gYZ\37HV03c5IW5PI)EoZc.2+NAa2^H`pUfNS/&CBjEDdB/@R!g[9j
%0@`t@h/t4ohUr%)nEX*XdoDWGrqlR&\`9g/S(FFh\tk6YPr9^q^o_9VjkLWG)/?9A"5-U`nYi=jQjclA`KP3Yet_&1Wr!bcC9dBm
%&[8@j8D06sHq(U-PY.^Ip0\r4BBiX7W0X+'SXM^(M*VuJ1kC3,`%\$p(`Qd^'D.&H"b2MT#c+;YO6C**4;&A@'P3XGip1_jj+<7p
%DAATq2:iPV#59MiJ9T&5L4Z<'=OZ*Y<;fcaa-U$e+8\M!YFUjP/5ASY?Wnk=cXQi8>!A4JD>W[W&Z`emh!==)lJ9pZN';-a2gb(a
%Dg/Pu(@e$^V:dIs&0k@Ra(XZ]QQB+[+JJVJF>QrdX>d7aAR%XSV5=5>a/A2Nj0j1I'e7b9k:#N,/cVI:hQH%%,eM@7(SLfD)Z^$C
%Ch7ua['+",!t-5`1pR?B^+osPd4.hp>,Z>\n@tTCf%Q66%pp*QMHsd"Yj][3k)%<@N7bC"f93OCKMS%Y@7uJT+_o]Fm>`WPI/#1\
%9Q&smo\;;K]F<1@neMVW7CDpt=$!CQGun4,RPiqrFZ9`K-%eoD@ftcUUd2AW:b0J&Bl&maCAo5Zk8G^@Nohfp3FP?]nTFl;$Ihu6
%faT_o2?KR;k_ClRKhf8'$(CTZo&QOF?U2kHG7-'gQ;Lt2kj-`75-ajb;+eubA.`D%F[hdo9u$"(^K_I[>^'Q5JC@HL&B*>IL<QGa
%fpl@k7c<WhF%S$=G"ka1YIMR@OsA`GfN/[&H^];0V,pPmZ'N1-3>\--Z5=MqCL>B#R-.ZI:n2.3P-Rfn"dG-_&E4J-aNu3(T0;9C
%1cRHnJh0.f%[@(:lD.3_C>\GTTg%(>Vt*'*U*t%h4n/Y+8tt<'2+5V-"I3k6[iC9.;OQ5gD/rt'PH-f=VDC5G1-\dt&70N:IqdMU
%..9Z8rnp-@+%M2#S\%OTGDsNL\m&$ODo73ZDF5UTi3(50$"f/BRI]qR/&W8AnZi3ZoX:_Q:5OETa/b*t7ASZ>Hfe<U2A<8DeB&;l
%OBl_Okn,isghFLfYr>mrB+!2^@Cd*D!UVdMBF$#paDl);NAf=FJ7q>u6mXJWLr\fu@m!;Qee):C<S#+B_>0sWpZ<jKA<U2%a@ke!
%Qc%V^?OuR/G=*$W<7;Qp`P-cn*)pT*RCR'A$>AJA\.uj1Bcf6U)9%#(4g!PX^;r_rf93!2^*U!1`O@J4>rL1mjLjVia=CrHBCX2R
%#Y==ocP%.skS?$W[%&bL3o@E%YBJWpm"#cD"HJk?T8$'P2njLFi5ZVsl7X?G?>1Dn[@?Q4dK%e8aZLF2r905KY.t^?P^3GnEDj[t
%.OgS*:i_:6'/m.jDFF/]4[6dOjG;n2CZ_Tc0oIYEe>"L$fB\HQcQKA75hX9iJe$dYW%bVW8ZU6ur0cWBZ2eDp'EOgm69jp)$("M+
%Q!Rk#]MsmZ^KeZP@7]k%??\PXMAh_pW$N[[,>De/geqa#Q4Y9G+t?.;:4JVW"kaI+Oh=Mc*Go\*V^.o;+9QoSm]_"L2,4LB^J*%R
%RMSd4R/H#A#)]<?FaUP@U9s0POZ!j3IUE[^23)i[ogRSJTU5?5KJI%7KNaLu11*1`M^@rBI28rske4`W.]M5W,UD)]?bPd+2j#mH
%gg+dF]iYXlJc<m$P*.uZFsRF<YsWlF>Yh>UG&BW-#32%"fWh_\'9T(jPpPV%&ZVWA(,gZ73d."6k%,b@?AWj!Tcl/C0]t0uLVm2k
%lC&uEA65fng8PIt[H[`+A%LYF*3T!,<oA=b*5>d^MH$RFbN<nYRkM4K97?&hFnH*S_/*BD>=ZCue0KCWas+n7eifso;Bd["33t!"
%@S0pj(<5#9EtT^IjD@_)8p=k@)u#_pKM!>KIE.aRNA)<,p1sf[/W),3S_@'Ye4`ko;GOVJD4f-7)@h-9XT/Mg#diiT:.H;mLJYZE
%TJ+\0!EZB3[Qn7oYZ$o]etl\V``DiVF8Jh?4[*S-!=.;ZW'1@>1rrpE+pLY]Rhlk<U8,X_P<RX]XhqYq3R]/eI!j5d!qB3L"gebL
%F"*eqp_0A6KW[>FP3Aflht+/u>/M^MiP]c-A_F$fX9"Dd&=#05-DH[S<MMu7?A^KXUoB^%e1X(tA2>Wkbh:f4`UtV\#0uAlNO^6&
%]A81$#pbc7m4Sd`7k)]j%IH12F>&h)c*.?ZXs<ZhFt56WgDYD!TId*8dB<Gh:#KX[/Wg9+7R'9d(C$";qc$a8ei0[iP]_XgTL`]p
%l@N4kh1:Kb7lD_6^k<D1`Y[o/X1;!#4Rj1r^QL#,0RSnX=U(ScBOOH+WqM6+Y<C&b7*:3.RO^h@iMb?5l8j'(W+_>#P\LlR:g%,^
%9gGd_a;'!gNDNo:9feG4F;9N9eh7D%M9X5l'3?`ZP)a<&*(AQl?!=p=")XV$4F2jlgf/EM%aI4:PtZ8\9fNT_r!U/8/W?jlRj%[-
%\b$/+-on-'@*Z3A3b9=&ZHJ`AO4a-JA'D0E7.6jW$710L(+D[?0cT-ZdHN-A=,rPVgJF,)l'L%S:.[&sV4cojm&"'?_B`^hMc:ZJ
%VIeXapuBO&>@M,_ZeEMC8o)KnZWdVf_/^$N^gJs?n5*\,dpZhQ<mb'V`(@9G.k.FH*2qg$9==TNWsRAm9<4D,fd<k/qS\3#LXWku
%k1qA:qHRRj*"G!O[TG'aAJpL@(<EK)CqTCMQV!DaMaY/)QEI$]3a<is&do'C&<.Hnne):'H#1M`D+9Z."t%FU8'rYn0o/e&.;!QD
%H*Jf1@4o,[)c,$f5&Bc<_G9tWBDM0pjZBU3OQ,pKIo7k80anBB7TjdN'ubcpb\WV>pD>!d+(ih\4eYqSmMTdgc*62C:kQXI>@W5J
%c8pQNZ/\lC9usrFCCT#+/h6IWpQ5,aRoEUIFN?BTLha(.FZ^o?HqHPD&bc%0@M\MYQ\X#M<AblZI*jR=O+9Xh(9`;3c,NP%KdnKD
%)dg;6<Z/b-18T2SP^)"j0WNXj>uMVoO4,Q$#RLbk5''BlEVZQ"nf#uF>P4js5o+*h)XpPG\o?>a+hQIZg*b?kkc'H@F4osJ3A)l-
%g0=I,P(;%@!D2MD3Fnc_pmo<W[*PU9b7nrc1/m(VcNS_f#7XHt3D4#NW-q):'a:`ll!&Gli0n$aL^>OLL_lR[4Y<DV"NdmG8.B63
%^a&7.WWu7<SW-F>8pG\$XR5Uf2!;0SCRhT1R!eh6V7k4PGu1#SMN>C5lW4t.q+)sOC>1!6TP-ge7Zh7&ie"bmR0sM2ba<-d!\^NZ
%LZJ$MK4u_-S#gFaT;kO_a6&>@Tf`a:V/nWH#`o@ISWbLo,2;D"E`s'Mkf:2.W[9i4*Q$_ABhmCQU?J8@&bHnp_j"fQTlE\o&0d2G
%qUg_K6h^'j-%:3.l*)2J9@@_Zlr;9A*DZH&V!^\>])Z:%[jka)V83E=QpR9_QlJ.Wq-:(%KTVfVTgD;pelBJhKiBQS(_`]Z.*uE<
%-6$Vj0QROJkXbLV%AhS6CK8M`'Enj\JA\VE'XC/$/9Z]4jE&hbX\6g,A4kQF`f5cS:!P%Oi1a).eWB[^IMUlHM1i\f@sYR;9P]J]
%EF.Bd'L-;:kcb<sA0,0K2r`:A`0KoPO])a:982F_hJDC:l6iAACV]1CcHN[D\/\8I/"YAR#?!HN+`7lIC5k5,<%6!)Z>7]tB^,B\
%O`h^\_:g0^aE;tSVMa>3e?A6SE8.IbeAcr&ei(iZ@u%>-fhCri>D*&Xck'X.,Kn<+63gsWc&7QlS;\L4c=GY_U@PFsrLN@Q/b*GD
%T6t5_$E:7[r]H%g%+f:&[P%1Bo$Mb$n_9n#MGh\N.T,dXeEL\LL%A;2R%`%[b.I9Oh^0NV7>[3Q7a')X0F-EiP!j6Q4'+T$g^Yr@
%<<hWB=c[0&A1@3()$9Q`@;P3@7"fI=bWFh$DqBA]rG@<**0sUY9hW2-Z8hsj,CV-Adl78?p%)ocRUSf*o[r$=MK/QZ5sNNKONB6P
%e1MiNQS8Ni[3NM].g.=FG:epd=Od+SS>A4jfW_+3;GhjbZ669in4c:Z0@:msTSPm,]Dd)r0%V`3;pBf8']CO*mPp2pjLMu")$MZq
%7r@nfN#h)t@*_?QZ=4gdeYE<Bb3+Fj/4d><Xd2O(("%j(nh!kN&e2u\;+')'(d57n1`Jr"Xsm,jW(J[7De,"H7ok;2)_nEiL"+P&
%<+rE`$82R/e]!O]-'K"onhX>BRpW3/:n_Ps[[>XC$>Q(ADs\mZ.;G>k;I&P<Q<fX136>dilhlQX4;thX<?Lq0BF.pPfk**j,>,cQ
%L!A<lfDtJdBj%aq;L#a3c)6["bYbh#UU3G_DB!$N*C/_kP%L=p`AR)q<hL3)E$roefAa\El@K;Lb8n8_0V9R\=,#iS3oN\DPs.O'
%.@8RcG7>/C#N-_qif[ML7CZ=kI?.sq:+8GB&Q\MF?JWZ'YZ`-B@cTbmDgR-D]#tp**4/Y\JM3&h!*o,3=4'\&4]c-qQl't-85GW.
%N4E+Liei.s9TGJiKa^VM7oU&#AA$Q0'nT.1Z?I4G`KG#n1Gsk/UfA^Jf-LXsPD/_C+FcB&qB[hsT9gSn1W`LZGm]^?l@5]+_4?YP
%o-RJ2YbL.RIVQ*$fqd@8.A@tMqX@psHM*`$Vd\SV.H*&'l/SE/jO/>Oj*h`,GIQ8CU+J?KeX+lhRqb#X10+;;Md-n\9LFi4jqRPl
%;+F3>mdOnjm,-A',2`$N8-mI-?#'.V/#r$<@MJTaIDf*m%Jtj$mKr68DN_!(h]d1MkRMCq$16hohd^IOn/h-C;uL7h5P[]S9]CQH
%.T#0H&_43J)in-Z-Alt5.T%ZmH'@`)A@8VJCYmY1([>U8E+'=4f6qTJM/`B)&(fn*lD-Ln1T62;AlsAT\F0t/$O>T6gogMq4_j1]
%<*JMeh'YsO`pseDrEFmd%@0QR^eLRh=o$XZX7Tqk8u9+NNd"%EV>aU<+(jXTnQQkfHNr\:5]YAQ7FF=5@boLtUB.+SOn,)Pn9bcV
%o35Rcro36kE<6!L+"lSM05FBqF0lCOWtCb*\gQTR@'BuHYoc%`.!/m$LXl09bJ"hrHNm`fUrhgk1`SJ4)pC64e[4TE2SFEEJ;G.J
%,7:en$-T4MrAlW$btWPaY3;a_ZUWJ>ZSQJe"QBV4//'c@BhDiiC=_^!,9g[--ID(EZb'(J!9SpqBsMsU#;;c+.H[;aW000gG!uVV
%[-n@n+7AR=Wl?^TME+j`*H<R+.]*lt&OqD/kW0_j?2&$[\2</\oPKZK-HP/MRi\!hB(nqj]CA2lSPZ2=6>DD0`dWbs7Ac^"K@5+.
%O'ijCs/TO/O[$ePeCSK`Qp#Y3,U`n-pL4k4=#K+EJME/k3Z:dY)qY4aFT3,K@o#bX5X_CXD2Hb<aGVJN0@A>lRGbBSRuZ,=DkY0^
%C8ljIYj%"L&E]b.Cm_o+#)gAAa!r7kp#clL?utM"6lk&<k(t+LHb1V9Bi9t*;JU7QX]P7_@?ai8e7I%"Pk^7AR8'*@/ZH7YLe@%X
%l8&EZaYGKT!\8&loQbI3'.kDM;'s*/@Rat40i,bW+s)l0UoY?J'GkA%#)J-EFZ&JFi0M>JYF@?^r>@f.7VhC[l@]?'8uiQ5[3!0:
%6816>L?c@6]0q;c1+:?[DPhV!APGI3.,)hNfm*r1K^KC)RlMDcI:i5rBr7tVn)dW@!!F-R2k[Rq3Vke%N0`Z;Ro`NIEE<!XbT%:h
%R&Qc:et1/q8MN78<oYUU0ajYhc2`0#<!"8ZmHNqoHMN_K/E=XJ`+6W`]0H[eUgu[7;7t]eCd\hA=+BjEESI6l9*UhSDF3WWH"6-H
%(0!5&`FN:,KW"]*fB+F+_MG$UmdU)e1N!535;"#Cl1<!oWZsR8Jo?X1H&F%1M@f4e2iROj<k?(tHM:_hlj>)B#]0HDJcbk9nssbD
%4mZK'8hC5$U&[BMcDiL@[p`uG'anHEKm(X^7Yu1DT?=<2Tu:"`>Pl&Y^[mk7n'.26FC):5:JZ<7j<C-:[ci5?=?jRYLSTm\7MGan
%`JE"!R^o8(!Z<L(H!>m^-@DMt-_`k6lA_8;GF(ISKP@dC*mUUeiQ<tW6a;(_FuKM`Y,RCO6-HS0;8b=2-eLD9=7gGJKX1/TctfFZ
%Cc--Qg_>j";G6#+=@$fp3o[DNd=#nMH.DNR'n,HB@L=@(.C):i#c\.A4mc0cjN[!qK7608IIQA)Kj?>i79c]G]O=YfEDrTu5qYpC
%T9+_n770Ht&`(WU39Q,6%JNGb&LpdGQ'r>R*XpAY8di6=b""CJ(OfN#+W.b99*ljE(bML[?pFf.`_IAZF%LfcT2cJ\j?r2a;cM=a
%&]U5b`qF@'8l!l]W(K@p2b#]<LOfZ[`"#GMX@K,)Yf*!4)Bg,YbJ`X.9(o5d&).N9;V7)<T),?oppBEZZ08Vc1SH-`X#a`!@5Y%b
%]5opjQaLV,8$mXg2<>3BX2C#;k@d<Ghq2?n9ZP]<75!OFTOXIO]/0Rk:o/+<K+[hp3Vo1+H7,f>;KGs2/4IdQC'BVe9/8P"gQ$ft
%Be>hg@c-GtPdV@1IG$;B7?O2X*U7N5_UfpR&lrW_.?6G=jfgF[!%J;:_A6AeGSGK&7m+&PF\C9;0@;([+k^I0T)f*fH>/%tZr.`t
%7XE\8TukfF]L#LS"c$p4D'_%Ng1C13.qcak\,f9/hP,!pk3>#$Z/11kON$Z*_e$ukZ^d!n(A>spgPsD%*]='X"JQds.ip-H<r?sl
%PcD9$^MTsgKrH-u5Ua[]*!PQNg't(slfF+U=,bbHmg(EO,%:0VeTI+l;TRJ!.JoF-f)8dQq$-E4Ck^+&&\:bB[!5O^a`BF.[C<#;
%TG380SZX%cbI[C#9Boqj;ZbM0pc+'7bIDY<5#[K(6\rJKrLjN4l_g6n8$&O\on-XueqcmHV!Gt/SP*(6jWYLo\BH`Of@!(&6aV6D
%C[,o$ocl.<db$)_CeAJGC+hSk.%;UdXteLjg,%k"_+6/<5WHo&EDf@Ga(KTL(5<Oq/7MU^#,kD$k1US`O"CQ68?oQ`h.KJ:5KeQt
%5qJ"/7]A2p92;`'9+/@Z\EBHZ.3Mj+6&n<ZlsF3ECR\_4Je,&!g=E<,P!<G+]XaeQOPORhF)"0o1Lt_7`S/aVTWeEIRmg/Z1_d$.
%;RW\](I7gQbX*eqR"+l%'ITYl;jY1>`UWT?p.G^%L$V]J,,g#!ZiS&*,3L6Y<F[rX3]oVs8MT3U-6JM4mkBps_r_2D`u1IQ&c!]F
%/_cgr$V,FCl`eqG`YCmioiT"$9gb@Umi-"c/nUS"-3r^\;>oYtUm^rSZ+mT)q$i<AB*?*l(^oR>UQ2'X.r=E-KcS+<Di_!$c"853
%XnXL>VpSJt-Eo?)Nj.HYG?\pJnR03nPVAh;3jIae5a:B3Kdi=Qn.*Vr/k<#^_rFo>1;m*Z9u^kD:L;4VU?pD!L(F,h_e!LK5m(+?
%a"4\D:E%lS>.5C[1`^Cl^@h>)db!U7_^(XqND,Vs<`l1d=GOdSQ11T=?p+L01Seb#^QgtW!6IXpp9cN$C)Asr;50Y$p%-fg2]l4t
%[@b!P[tf#<j&AZ%N8iZ"^$J<-@]O4fGAF:Q3dgDp0tSGM/>$=0)G6eRZE^3'l\97"#Mll`0*o/aD&-=Z%AC\:L\Lp&3qlph-j:`G
%G![8i^<WAtPk0X*OR_IpFk0ZgPJ09M0GTP-`Kko19IZk(TTiHN55'9UaqYUG\W8rNY[()k[PBn:DMfD_Ke:]Wk)Q%@lbZ+p8Ksp*
%+AuJfU9uS@4JOVBj26&5WcVI+=B$.9\a&PC3&36AZ*57g!`Nk;:2fS^o-bS21%0u^Wa`=?182j@,!)K$LeU6XL?%2o5D[tBU8_\!
%Wb;HSO(5R9gbkMg=WC[a<(=gd#lmZARX2-Eg0Vn'oaREN%u9N"35X@88la4nO-mK]:^V7PA+&!t.^CjJf!YTZD538g^3&\NTED?^
%+s\8#RL&9mBbCKej\loUi;-bU?);`PgIg"HPS\:DdihG<Zctc,C'";^`5#6Y8(+N9B&10k,HkkGcHC&r5q\ctdCl$1Wl&+R))$ha
%s"`\$jQ;B]KLX1T]V8VJL23\\<S$1sj[7P-Bh-fQcL(2HkUji+BF_GRS-$NiPVpb7&7h<NDs?75S.SdDY!'SpC<)@AWtAU1SeBnC
%b)Q'm:>rpj,P(.Ai\e1n3B:K%8,6,"F2/Cs4TZ3o?PIEUL8`kjF*O/LC?KIZ:g,UM%"G5tP84.khOs**0oTp0_NrA7Wnm1j5I9&\
%X1Pj[CA?/U8Mq;/>jZe>l\:og`rQ3-VD4]p`$:$HPDUcX`5LS>;+D'(>\orC+c*4D':aEbk:R/Q7F)Ap5]LN1Q7=BC%j\sB.;"rG
%k=<1g:dJR-LgqYJ7brZ*+bgIQ:;QQ70hKB/k-j*.Q1"9C<B`3t1Hau?`K_X)$0!D?5M:?9N5@M4+;(9u%bkl7gcd>U[V+jZ+-M)@
%2!P6!oOehA*@E9a)pU+0r+2c</K6mGf]9"m436l2<lN@>"5/C\SmR<\D?[n'2a7BMpd,!CBD3ai>A<h=.d69e_G.YXSmWgF>,E*)
%`j/#>HacqugVd;kbp&^6kEL-U4GhjDUF7"Jpf-1EgN2C3N0DbT(g85SW-BAE&@`Q'<'08SeX"(r]Iu-r.&`U@(c:%FgM]At)E&0g
%N<%N$+@=@,kC$E^a,@.j4A`2+=!YiEM(cT^gE-a0%T8>Yf*dZ9J]-G"Q/roj*hAkVDc2GGAlU)t+ph"S8F/ig_//tGPf%9JV._Y"
%2&gp$9P[J8_Cnaqe(4TnCF7C4frt!=])V;(<8):QhaA/52i$X8;OWCI);^+C\Jf5&gO2^KY3;9nbJfZr[nj`DX#Wr)@9KG[kNgF/
%Ce>nEG3M\5A?UY;:@7Wo"?&tc8PFYb)6:6GL6'lSP'bQ<G3.bGAkIC]%FKYL.NjdT[,S*s*4h;4RP!W?f/0#C^uV.bgfMk(8O^]h
%c=8dC>Dmd#dJ^2DY4kTSofk%iY*=aPHk>6L+_mlajgX'^O00,^)EV0%i*ELB(^Wj>SbH(c3&0B#/Yd]9_=nP1"SI^5B;`j=fLSR\
%BmC?I^A2&lBmHr]YL0qsgY;\8ZjNWB[j?bCg?pr-_UCq&!pAqGC+Slt'i`+5hNm)$(4FDg:Vkf.F;Wlf#8tKn;'+#YhP=@-]_tfU
%*m2(cC1bWi-+HT'9kGcI;e)(9*UVRqV"bOmY0:CR`o_^+jgW<#-iBq18R3A<\2YXpm_=H(4Yo?8Z&;gH:5,M=`\YRYWDKP3&t)1G
%Pq9;Pb&A&0IM+g2i_/!hGqs9TWAhPXqgI]1EhZ6s\8)aRH68<1Jl0dYWlR@;6/[-EFul)Zo:&^T9-lb/<OR&<D`Z9VFD@:6O8deE
%FOCnFIZj8DgqOrjJ'_uhPYOI7a?A*h`E'X0mYgq)Wa^L,p_]$I?>fR^>=uK-4*nMXQ*g>^Uo9S3.L`HN/EHQa"4fMfmT>p9V%eUU
%\1aYl0pG"'A1eH5+G.so5::KHCLt.\5];+Rdah`i"I0&/i`dnTj5H@"OZCTtPM--X<SN4P(.?+Soo%TFf7=_SQ+TS^)Ao6*([mm`
%b8/?U8ufd-?*kT-5qshEL_Wg$!b@[iaVU$5bFe@qe64rpO.3pK--]4`M2k6G[cg:.-6YrE':KPj_fN0*WkYr`o=Q_IG;rFK8M&73
%0ko&%HWD.DP17-]9!*%LW?slX=u?8$*L.QO);NBA_Ls&eitY%I!-%O8;/iY_,$3Yd>rq?UdSdcB!TH!.]3le!73c)LJ#<C`Jkr9O
%3Cs^_%P"*hUPUBq4clZn_89+o,&(YM6A1]Z<CSTM4X(NZ&]Zuu9$Ct5H/QZIWg`duPHr-)[R-5![J[n6PuLTe1TM=!Vb/F;\"agD
%UJoCMNE2)P5:$mmIG%T4;YA#,.N4nF`Uir:T*WFreO(eQ]_:X5WcR86%dM3n>$=T8=B1!nP*cG9e$hoe1mk"JZVVc(.kD:B4CfoV
%[?t.f$<MAg6KqF<O1nP@*28?p&hfmIB5*p?i./&Z,mT/cjr)1E&7j&7X?,WJ][eq$A++;E_C/Z\P.NA92F,fHo!uiHFb)H,&J*3H
%2OD]e<b[pQM.Mb3+iTV;PX?K(=CN_T#PiLc9)"(\=ht.)DD'Os2m9)IYC``sA]k-niXO&"PY`HZNm%IG:qFC:m*ts6]/H7RmDQ7.
%5?_eihb2[[)6,Jp,&/)/#nl"4<XC:C=\3$a#k\U'hbKaKa.FX59'Huao@_p5$P1s=F\e2obH++:#_?9=9C,)Y],^#1Bjmo[a9sc;
%DIYS?[<5on4dis9DD`MAcne_EU%>(J]%)'i`"#A,Il6/CUtpF`i'XiPeFb6_eu#GQ[0G.[-:o=]C;!=4UpEp=hc_7OX_EW_T2:DU
%=E0n#'??5!pMRZ5O,\2u8=Sni6r6D&LdW^td@+#;_H6+Y`H6R<G7fp;YNJr_XMD3"/XUWVS\(YDdGLJCXt",VL@\Di@^X."/ZBT5
%?S!]8DG*'g:GiPb[c51W)&&'2pgUej2)8_QajeJX#`g("UbZRYr=V/!e]jaYg9E/Sgd2/aPakBp$5M`A6`WSpL2\or3?$fe711nP
%$.O/nW0R]@s5Xs4Jl(&c;TF'b>EoGe0<iCccr@<aL'R(D\up^pNf^jbX]d"a9T*e>/M^#@j^!KLoU1R3nhKXE\CjprV;mW[.]:#d
%O5m"Qme(Ps$'ejlKV9ZHb]#7/.3XukLj^9NPaBflrq:ENISl:MPR<_aIT2I/oo#HVqrYB&rJ(pPs7G`khgbO^p3Yk=^\O3,s61W_
%rR6PZrq8RjqsJ[cIe`pBGk^aG%h3ZoqWiY+nF#%4cU7^*[r;98rHB?ts+bg5qrXONptO]gpj%2YfDje?J,%7<hu;U5s7bEbq;]36
%s7UZorQDfk^\Q\5O*:E>5Q'K4^\cj_L]@;0H-d2=qe8ii^@EoP.t;c]n+*Nork%Xuo]"lFqsKq<IIlm]s6H<7rU0Q,hu2deho%2@
%r+J<3!m4U#j7oW]II1SFo\\Kn[bm%tN:SUqr+,`G&)[<a+87l"2+9iPr6WZ9q!Lp"^Afj5IbAf8#;5romj8QlO>83Cr2!j%hmaTR
%m<$!)J*I")c0tZ(O$Dt-mP"8%?gR!kJ+roRO+7(Y5JOS;XH=2f-*)n:r%XA[.XA\&.Par=/>>ms7LA%ME!Fu?h!6BWRO41E[>sVe
%X>JC$,J'(l].]D66*d(cB9f7":p=H-*JpGgqZs/]d/\'c1Ic0#EcsLE+q%6gY&tN$^)G^%c6`;M&pg#CqiPKZ;pa,FD(T(81Rgt)
%<qeY2,2l0hM+j>5aBnCmdjWntp0a7[U,%-b"iqtf<2aVhC6&!)W`<SVOSU3Q@c6'WM(#`b9W"75M5]t"q>DM49O'!d]Zq?;EqnB0
%;)-GgoB1Mkh<tME=c=u^hls1VI5VOHW;K;dRQ!u&(ZA2695e(ZYcE)KcE4T)Da->MQP3d\%e1>Q0]E#1e>3g=FTj`q>='#/r_r7r
%eiE7fe_F-UYGlhJI:oh1TY6Q^,#XQfriN.J@kZhf-&l3[VD`+WM"ZBg<AIp#JrlGGCiB<UWA%lm#j(Z%DWeY>8oQAmM,m;R!@kV3
%IG$K37HBWY;'$Z@=niJCLBCGSF,4`ti@8)fHqBSO7GYT=B3Ab/.DcW51*4J8(*uMVkS?<m6R]#'rmMW&^m.b)nEC@rs$]VIYHRfs
%Uj,WQW)Oij1nr&;V:7m-5=gB8M]B+@a8enOSi1\WE+,*sPIg%/R[PU*(WSRJ@@?8Qf1TMS=,GfKI-1k'2BcHY(.7>0Sd*Y-"JiD\
%!GoDd!MWPqN`AT2at#),Mj$RD7jusa=qp1Km$+ta-C?6='Q]O$I(Ecs_^TO>#WM/>\XO/ah@D)"e$E!?opPqbou89i(7mHaRF]c/
%iN%N^WTjRca';75+gDH5dO;t1#_LDumEs+WL1c/c<"Sa&$7,b,8j$A:%e;]$=eib+V=7DT'*Y3^h,*fq[D>&!<FF&B%u$id#s_<5
%&sK[jM;bcsiibp];Xl8C7Hl[`(^m.DC^uf74t4n)ct"RrF2d0=A.T/Y-=e.%'tZ+t3H\6o"u@SG*ef[cYY:f;Z`%oL>1to\eoIMK
%+Oj$n?kJnsgi`6KJ],i!@=m'V2nTFEW\Qj.JA^Zi*,;rWn`f1]de\3k*:X0BLmi^5>uadECC@IpHY_ijW:<#pm?6O>1-Oi#?nePX
%$97mXERg/kC8H+XWi-Yj4K%CV5NKhV?\l-MeCIJ!R;[,?#4EdRDgX4'k==Xr+Uj-)\0*8&/Z4!?-.64?iut4],m;AkeSXQ8LV@BB
%#Q\"__fc?AUq7C@AYJ?bq3m6?FmrPO*)n`H`M7@0)?JDa);T'U'*UZ8Q`_*>^*[80en36TBdPS#.\Tji?j`!M$cd@D;!VBbYH3,_
%"H5'tUn1MEb.e`Z%E9R2e1,dHK!Q3--*:?6$*XZs@%Dk\3Ye_O`@Y)FS_YMe"akJFMAL'k7pYdpkQG&'+;$;P-A$g^H-8n/:e"`r
%ii_d[c>>pH=^0mIT[kSla`<F$;"`#]fdp;2fp3hc.lQp&n136PRs4Gq-CW2XUQ:=cknE<j[YV8'Vds!=[#kd+$M#)(&;A!E\+s)i
%]%+M-Aur#l5It0C3_QrY;K6-L$:hqQH$99"7HDjOru('*J$Iu=/:.-EI=/D\=SYCTVl4<bVapt1Y(dp%kpZ&%H^NO8fBi1,cd8g@
%5`f5;)M*T]-EK!Kcl%[A[_spmje;YOH4(:Zi?*6.W@SJ$DJ-do-.M'pY,/:<.;hWF'"7gEYHR'7T(uU'Z\u/D'N&L[m7,:SMPX8n
%orHaXB0;Nd%JAi\KVWl724E1HGkt#c53LC/_C=UQ(hpo$Su#O$_Pbg3/QCEA_T`q+=qF9u53bKf=,X]NKCkb6XC(/p/`*F;!t2W_
%K-TUd(GMM.,&0(1VeaC<('Pl0XK(!8k>h,W[^.bo0LA[m)g["4bA4(i`G:%=EclTijCcKhIWc3MeD^6"OJP"2RrqL24Xgg"klf(n
%lCl/6/gY()5++H&U*Cdt&;H`QN:A6W(d=-g*4;%tXCt8(\B$].mLcokI-PXb44Vu7A]d-0:Mb``<bXmOW/TA[jh[T+FTC-q@A_:L
%6ZbNlP\:>6>,(:eUjKGLJ=2)hBoICH)&ASNE0^F9cdaD,qW=,6Tjd>gVeD5JS1Z(`R03V6b9RYA#82"lU`Ki^M=$]aWbYJcc=@%h
%rD'$rZ3(:9@B]07AcT""HR30B^E01f_dK.!?03M$*(Fqj.(M;=X<q:6Q6WVKhYW'KUhPKKX3hH)oh\<F+Y)+](1<rPn^D]5oBEZr
%Km6iV:+Zjp!Ya,A-g,a^J,,-N+@F;<n_).$MD,>dGRF\3:o>tA-jd^HYI-DJ/i\Z\=;[\TCS+b&Eg]Gf2qW7EeY`J6U\o85'.Ffr
%r>[rR>R=FKO*pB8QgC_WrN8rrDA[YX3aC_/W"VXe$%XlB8G(qkfHD2;#XB$H0%[V]jmJbC**nt+c;[%"F:!dL!Yg"*bbl-LMglog
%d*te+TZ,3;:ls%=/tibJof%_@$PgTE"Is)14:mdr=B6a7!osqa5%c&g=ib68T.df9fp`?[[RVF^\`%p"X3O7q",,otZ)!C/,bkQ)
%ds:p??aCg;9\gO<2#mAq!YI[aok$,%N%aEmHJq+bpImE`H>?qhYZ>ZkcQSeCjtS`ccJUATN>h:3VcP'T_>\#p8Wb&\,kQR1T`'E@
%$QARnKe:a_,pK-c,d%B`Z[Scp8Fk)AX&[QbndeZYr`5_YZY@O1_O)j2H\)YoI$>HYU7J/b!gTAn$.Q__'#2\Z!h&T;Z+:hsq3dn4
%a_G><0f#B8.pHb"gIB]jFle=**[)6kCDVk@(P_g,*1tI!IJSEWcU/LC((C?,?6#^^/PL1l[h+At?BP^VfFf#j+\4+[%e)isirm4d
%I#Cf8?VSB=-Tr*IL^SBchN:CN8?3<O)JA7G0&"0L$hO_AAQj$%PZYmlcm3>=mgtf^20d]Ld0)s"<M?('+iRG1#8ec&(+<48LB05X
%>lnCSP$B"X5hM.`4ccG_W`[:0POgnl^\Cl./:c[44R</t['5J5CC?8hfmT84BTi/O-WoBN&VO:ZAh6kb+K;Z4i%o0b%-!6P1uoTC
%N!Qk\"8r)Wo]IN0dXA,C`HW_^AP3ATgleaU6e&pOR)2S'2,MdU`7&3lo6`B)C2E,u,h'FO4PE[H)6Y'odLrQ3&RcFa,;+B@A9OOl
%nVa%(/(Ip+WXH"mQ@j=j].Vag66u!U>eiid6Xa!28?HJ&k4ej`'gFc2LdMr/f\VO<AI9spOK-99#>F#(9*0b)6W#V5=IF-JTVN\>
%U20OY8:$10:nlh3o-W.ASW1R("J_IM+H)pZ9*6I\M%,tq0Q/9b[P5mnC/kP<Q*r6B67Q:chs"2]ArkUX>.#<IZJW0YBI?h:J0s`0
%F<Ve.*a->J.uC?sq]%hMMI69tUW,sO9nWsi"TK=)Yfu,Z1bd%7o;GV8rth"aE)f3s-lsd2]b#[D$HP"/4XSu__G&?tkXl)]-keO8
%;Rb$3;r[BMfcEW`Qr4j*re#4#bO`EbQIS?BWp7>c4;itcpEiIt*=`^&%0In,E=ogd";m&a',GQJc.ppFE(3aW:198p*Id6=jcq7"
%`>,lcqril?@bG;W;S?IDQ=+VgT?3,3'WBo;L7^]K%tEmEqp1%\Kl9ZPkh9@lkpZ8!&k6*h?.aSY60(hRYV'jbR=bD):f[.LYa#h_
%F*Ysj.[T.N^;L$U@1'bffA)>i7I--:d'<_l!)qRC&E)EDL8G:O6)kVB=XNqOe0tk="GS'L$oi?$db(">n8_A7HHr'V(%0"jTfsE'
%6748rZ#T&Q5al1^&"ui0@setR,tWI#0EP`jQK2&K^@7jh21BeoBF>WYd5cY/!MZk*d3)<"5cCEO^4=$T>`S6aSX=O^%Yq1tJ^4`5
%qf6*RWa%en6>e/6cRJasG-i;e$+bjk\Z6Hq4.Ml^ETRQR0nlF*j>$tX!#*:82OofK(*2(0kEai7Kp"^??>Y_4*=D$@jZE'OeZU0C
%TsN$QRMd@rI2Rit^mM?;.Df;_Dp^\I1P#@W\J0K??VeF0$6#qhc!qhU;EKEFWtV'DlMR:i77e]&*Tn$G=u:ufj3gt'MnU;3Nda2A
%'fBEnS:j?s#JNG\RJ.0+K5audA@/=bVlEkoIV'*JVc3k-VsQHZU!h=%3/bYY,!AZOCJagunH^Op)s2qTm9V]F_K&S)!XW/Sf34q,
%?hL;/c(tpIV/)8lU;SAg#LNm_"Tuo.jM5nc^t(A$g9VWn_;&)X\lK5\1mNc-B9kFL>#SK163/nlF=P`7;)[bSM2:F;T^%M=h#d,r
%!]16P0eY/B,_Sc4Ne@g$ZE[j_->8ct+a@"B"LJ$^6)ji;m(sInqg^\=>mMfX?pebrEn$)%@[2((i*FV-URCI"1e(ESr;\8uYV+b\
%1Ve&=jc`(PV69F25`80]>)a4>E=iIX6?kb41Q<!0ldgM(DA0ujX<s2W7$<d:*S#Dk%]CpCH0l39,SG07[B)>l$A_cbX;m\@c`hG2
%$8Br)@l[;Ai[eYBRe2&P4<H:Bq*=fY-?9`HoW-TH;.t!i<Hcn,F?4@ucQ2^2dNc$ujC1PVlN.EEN$#&MIRWn\&70h1(:\f-?5(fi
%e`^s(fO?9;boZ4$Wp[+n<,S#P>^i\8r2T24e@R2WD-cdd8!&Ir:Ic&Mr&>6NPgcsoQU,%b<C:0Y:t;[-QEW^YY\0oA?*@(`,C2PC
%#g=!0`X$Fb3-EJ7#9G[d47#13$W%kn#ihIO`au.Ya,d#Wm!LMb.:MrP?m*0HC2Ch4-oVtS.b8QY8\#C!2//R-Z5McF0_%8-M4!79
%r1QHW*lQ<+/53>XoH6+7:-7QGmPsJT>^nFqD6-=HSShZ1;f`;XO=,UjXM1.QR44Dq<[=7ENaS212^McEdpHRJ<!r[lfQ081<3i7^
%`*Xqc+@Fkd[\_q&opTd!dqBKZS#(9V-69S_J6@t[3NX9$WH7L/-MWL^dV]`>%ii[.2.pb+5-!dE<Lm'Fl=gj)Wdo)aSpaH%6?f1e
%7bsB!JiC]f0NS[(OpTWQ2c'LQ>!2.a3k=nKA+p($OGd&oBNd52e8TEkh%ZZ8Uk7NRCZ*F2U)hqu14ES.>##Sr8=M@Z_/ZtlEsg&W
%O%:Fi9+%RNX/d;(\fI%VZ1R,+UOKffe%hpoYt2a1<%\b1//hr[Yb"62E+$EpLM\HC178p4SUT6;QjIbm!/bCdfk6$0k)3M36KpX7
%l`ZXm%cpWjI:dIDV5-__?W)_kTihL2r$aZ0!,U%;6NNIK^cg=^,\=XkP"oTq3B@J%$'Gfj_#Q`0(/bq4FPY1c3\*B6e/>Z?D^?r-
%P]B_Tit!aNNoG=Z'U1#AP!X'jc1j,ZLVB4#5/<qKQ([>s)bR?%%o<FCcAiMq1'o_$/]GrY"Frfao!:&fG53>f:d_'DE?H7@*l.,;
%l>`PmO^&,Y$#6;?fSSWr-A^#@BKq#e@H4j@GO^D?7:d\mSOrn.6NILh:(lj!YQ]8(W>,d)kV2)&@Q+R@9:Lq]<6ilHdm;J(,3Fl.
%T?[[1K8S06mFLJ2HQt]/PHb+R!@Zes=G;Nc0U"*)Oq\uDP(Rhof3!N`AZB.,]\HtWD,"j+Xb:c,]b%gR>XTP;Bn\roc<*G^GG41B
%(IG+50XO3JAQ:Z(8I3:Wi7:U?1M)XIMG>?MDa8Cuc+?*7[\KP$ORATO:OTQUm2f#:RF')c-\%m5Np8MU;Fj0K<J3ACa6=o70K+;H
%;diMS@*/EjeR8=i4fG;NNO$He<)bppO%%arq0A=2,Y)*/s357;*87pfS7P:gA6Ds[4BV/,,p/Y;NGW`eCWU"kA3,63OSO_gin:h$
%\;.N[3.bDc6apng2K>uS-FM3VA)k*-Ne:Se>F&:Li!+%]f;&++g:4jf#N\@D>cC<L,9f=38DR0-7@3<VeV)gXS5VEdmZR'!QA#L\
%4t5[+:[\dB]e:9IRN+7)nCT<e["+:'GjC!c7tVhdJ/f\2M)XHMJ3=&W('V,R]=Gi0J1I-QLO4bqkugNH2!\n4lqQY?^UbN;DjgM[
%OBG*>C5l\NcFq"*;N-b&f7E1W8[_=ncdZd0(Lb63@6e)Q2#!E+?*Q"rh+`6rCJAj<P)n!9k\BWq\;bG%!TLc:.tu7t;=2Z&WH\]h
%m@fV%`!+gpio.Uj+i^JY:2,AuZj7OFV$Tf&kuef<(%5!S3<?'M@O'9;="l>AnSLu-G6B3h4A5:^`;r_+:nkJ$ER#dWRSj/s72[M.
%9i9fX$CR[*?KP!!_%h*ZqOU:62^..1<EI&=+_o[]:ru\J_e5BP0k:0+'oZNnA/rdgOI#?/))BdbU%nZW<BUCSCrE%d*Ce7@OP$hU
%k8];U9od:-H\I(#@EKU*$&IWSc<(?Ga:(^,FQZ3;HnlR'@n#1QSBanZ_Q_YeJ''s'Zk[@q8,4sO>^'E$7K?h/?JQ=?R+;S*;A_gl
%Xh'`)Y?h3t9S,)9;rSBhWpf>A<@&GAL*nFr,TrG`:+V[1s(ZnfQIFVCF3Cpua)i.cCSs5_m^7*EIk[6h=pm\P8%qkZYETMVIR%'\
%3S[!8:tRd2%h0WSUr@Z6COWc5B.ak4Eb?1#aU]P7Pf71\]`1T7o.Z*YYrX*3n^_HMLn#f#,N.q,7TdP.56TAT>RQ1s:M]W?G!0AM
%BfC&+@<;6`SJ0"7$(s@K.!/,pcN-HG;2_c$MBPj!:rtt4`$JI?HFAb$=PB)[r3uB%P(2:Uq.(Z:F,C`<nOUAO5^qWDFP3j#Nff`;
%&1n04]_:+2qq4OA'qV<T'bfh8QVh`>(RD;;gijfN1md77(t!fe9\qW$)7@NLWb<3c\JqK4Zl^fO%MK2QM)(_QE5S'4Pq`e_ll@g1
%]t*SshJ!?b7X1G*AR8Ob=W*9nLp7as?'<J&U<pE!\9s`b3#P6sF,YDcqtW)g5:@_:[P1JZZeGiJ)nG7Fg2p$@7RIV*YlK,0+pr&3
%,SOoFFmW[()e*2D1i`l3#lu#?7Z1?+^Ka0Cj(e0NcR<]5.ijh8R7+fV]e-WcKMO%S@d4Cg]q0Y9\C)o.&/1s=o'^*uCDC>AYJ-!A
%&28sKKGs+;F6%kO4`nF-KAV&Oebs/5@s[f,s7Gt!NTqV0=pL7]WN31>;T0\"?8uQ(%5%Z)<LJ$LX)s8Eob,d5Q]MC(a).bJYj^ec
%LLha=Yt,ts&3V2,Hb8/N^%\DsF'[B\*e"XnRC@SD"ipH1XknR)mC2!Ndi\V&7W17Aa&>KFN(W-54n<t"lg`XYs8JJuJ,A'jman:>
%:\8e_k<#DfE6/(OVg%%ukru%RQHpTG\a/_?[(\/Bp:@.KiMXE_l]P&Uf$?38r1-&2i,cs-1ha`$3IghXs7/gjnK-CtYmPnU+3j0\
%$QlU4Rh1D+dN_qp9%o']H.draMu(r'O-,[saQ(h2L0O44?te*Wpp^gTppQr+N-1?>DL%H68%XbhTE""gh@-^E,>f<?l53W%`#!b,
%B95%*A1/\Y,kj=/KI`NWkqNkYI'Rh&`sG=RrSHVC>h?N5q**G*oJ?rBF?ePt\GZUb?hDUh<l^iS$4p>l03%@,8th`1WqpV15T=1p
%gi[LjhM5mM=N_J_liMuYXG>^g#FCAtqKhfOKhXGYZc3I%p=0%Cf7f9@pK4&5a+$O3qg%#iDbf7<eRe]h_Y&'OZRFV$)iq]I"Zaq@
%eKcLch1U^=NFNa(+Y@o[D22B55uZIIdN:j8`t86\l%kG>*bht90>gYiA_b;:M4QQQ6Q4;E(i;M;bLc[)HH(MO/*<KdG.*+WRYLp-
%@*:RdJt(gm95GdAc#\:sL0E*-bki9c-(9Ip)lXn1.:79@ln5kD_G(pZG8kG7_93YnZ?lKoG0p[\h;J+"`oUH;M>E$m->R)mMuQjr
%=<kuI8/=o$ABGi%kNF)n#rj>U.AT'g@O$kW5&d?392oB9+&5H%hBFQ1HmE\ee5o2,&X:8YG2Auh+akYDFB!UO8;Cgbkl0r,Cn82+
%'!GTn_NeqIi#<?`4V0L)6R3kZihhhfj?%YKK#`(G]hSo3gh9.llZq,,ROViK@ZU#(4dUL;$?V`mUNf152$]Aed9T"E$)Xc]32ndq
%oW&O_!5tP^nsm$YpMP,S0ED1Zs/Y^:8+^*M[GMm]<];;ppQY>lG6TR,eX#?k[jYMJfl<+b:bTF8]XAXf+G+;="=j:D&$W4JEB%X8
%JuG]t:IrEm!G?QoW)>+SU*HpSqoDK-V7K8=j3q:KmS%i\?C>4"T'nJjmOU[F#"(;Dh+GNA=GBdm]3>[2`D^n:"o4rhP\N7g9622a
%hQ4=]Se2:(g&,9V<P.RVIMI(n&UYrfNbF6g!)Y&]hXk@g*s7>`9HFd`3I+o0q1O$/Biau=e&LPXCQri6J_V-s,]\o?+n4oO%%a`&
%_NY4nEkF7a3^_tjWb"ITLF%Y_9XOhim*BM2+&/=>KZUu8o(9Zf<Re4h7S1;_[M2S9Z_f"U>GB8>M%2JhC$2N<-Fk#<><oP/4bSSK
%51(&j&.2R./M_o0W[(c8O;^lb:M!pH[Zma,"DU&(QB$iqq:hP(Lb][?h:OuU%Q58JR6?!.q\#'$%AAl4ol_MYk"eP<Ob5J'H9J5M
%<W<lcPMDT>qPG;YY%l']A[I((SV"h/DJdjXRkGLc]O#,pDN*KBG`eD(G8)f-LrM/.e-SqnqQ7q"7'eu7Wt7c;%*_+-FUuR&<u%o:
%q,0OHeZ3I'oFK&A[[2'1]?"#f8^)W]5goa.'[?`.VWtaJ6'te",F<(pL;#6mZh+u<f&uJ%$;7+N(HC8_8lF0+`AKB&9ka^gXFQf"
%q_jhpTTW9Roc\_sc.+Eq^*L8op#RH[KKYRcm-Y[$f4HlqB^-i8-H/rm@]C^(6g@o06BE&39?F]ar45To*_4(LAu'4LCKgb9@Sc-g
%V9SFi9+4W@oQBR0a-<<n<p>F@<bsjh-)V>o>[iiFLrhd,;ISkENTZo$M.QWAr-fU^rTo`*!`[!8ll85b+`,g`WF16i,,_Eq"X5V8
%os^56<Ji2=#Q9PP?Vq)8WP)57,9!7D?kdWR*Xen?c'Zk8&JVKUcGR-fg7uY;k-Ls()D%/&8Z-TYV3q,g8MAXI2kBZ!o"3SZ<B)&R
%Ril3OpISBT)9osfcGS`F/D$!ud3)'_i96K<!_F.!8(5%M6ac/V.-KTt%`=HBmDH?05^3r?I+@&JZM_#Ck:j+VU)E7$OpOCXf(Hpo
%9k'^WK;KsHlQ?W7+UY">E\t$_@]f"CE?0&Jf^"b.;7eEB5tO'[W<SR-l'QiXjV>gTFp<Vgnso8n$kKi,K<^K.!IS,/?u\dI+f_tQ
%8^,Eo,;r65fEHlWN\t(cp2Gh&[-f;+lB_.Nou=S%X)=*P-K8GS+LjLHVP`-]fh`+53E-\i*JW@k0R%e#Xd6l);qn$7.B^i.Jk9E,
%&6V`fZDFjR>JtD?p@>3=4X@#.]X@*HC((I,4tl0mhPL2PWudB?m3Tn#EiX_e8p'Bc]YZ#VXPLrdRe!q]j)#"lQo&=s)Qmi863(j6
%om6Qp[C$MaEuO>pOe:V-$Z.)6c$]dr\&7D09YIkd*HAsC"a7%;M.F3?i[/7cOU5k7Om0k?95hZU+G^a$XciCkMMaQ`Z3q[E(:Uq%
%9!4se#BYk9O5C'o+dq]FpZpn51X_1u]>VmR.Y+:3R>I06lA:E=S2jK'AkNo17nNW!78khfRtP:J1hd7,KhAUf$^B<2e7U0^Lr0"a
%>f!-P#&+Ar]$I=^T:ap7N0fESP65B+^f(4&=\>\K(\nfPCUm8*_T%\/:?s6PD\$K:!V:IT9b57&N7%'f\F"XXig(YB]!pXYiOo3N
%[Ti<o-b^X?9CFMGUOD9As)m=YT9&:9gC#H2-Q.CjV"fZ0^*9?Yn<6'+:PgK/RN9_qZ2^+6MGK_;EBJ^B-4,!_/]C_I$ESnT1$b#o
%X&ZF@]+dVK]Xj(l+nfW)hY0Q3hE+i$lKU;W)krDa)!`Mnh!ueN8%T4Q]tfOBIBpn2HZg]&fFmuk3o*0'""f90=S+6',e#dY#cGin
%Dds*#n*'KN$;'H<f'E8q)6?;YNPTLqq]oF`GdQ4-O6?Q84b$L'nS?VC[B$F2L+teq7U8H#P&A,D88>B,W5UGRM7O(SRGaQVg0D4K
%[VRSOmi!C!8o[HQl[E7]VVo%FFq`\LH^!m\]+&tt`J_5(OqoDZdqH,U5:7-Y2\?K+V/PMXib<dhCgj.[[$iU[RSNW1]"cue$9uJ>
%T,scTo1$dSmB0[chB0%kM;`HJJsbX`g.c\hOq6f+^;k3E>J,@<qsM-\'k*Klm0bt16`XG6pNr!+$/snsHN)8q3mA+`+-'g8dl"\n
%2ahs:6!;^8$O,j#m_djKcg,mMpB09,gTU/<I=F(nqpgp7jKDSURq[5i/V7.mOni=$d_5j0%/c%qA5?:i0$4ttqHZ_!iA<;3_\F@J
%U'/'qH\qObln0Bm?V!bbJ:\i[4[cdVhPC#LYMgP+na_*Xq99j;)1IQ2s/RI]*)R="DCNn*A_AL5NW;i(LEsLM/RC#^"O0!2Z,bi]
%nkn_Ra%\4L^'7E1rI,c$5rn@od;G]5?#S0iFF1CL)n^FGgWmM4(!jcob^>^'euMHdqinfr(GV#`j?=4fBf3'DI5D]5V5K(Ud<dN]
%__XG.`%S7,E"@.+h<3c@h9Yg4m<XU*Du6U&gQm<;j`uIZ[-/jUD^%/2HcIFK`.6BD.:/<]iZ8^n(!&UK>WdZfSC;1u%+RqYNRR%$
%m^ORKKF$\q0,#TAq2oHkS)eS0LN#K1A#S_P?bGDPZrR.(GH<4>4a$(Oq,Le3lt\(.Afq#F5JaPG!;!NtrWi3u?>&J"RQ,ktPBT9,
%-Ja@5h?tWbQ(<Jp\k097>HI0&Jn$tY4PN6NF\9OAEQ9Y>'@nSWG[*_K#-jS3W/'GWa."b(lnR"=pm:Go;q&4r;2KUY#oIE%gbQD6
%HAWMCoH?=Bp\0.CMpXhoOZENunanLYGq\8JJbna`Rf:i<Z3Rs4DJt"2pL@JRm3dDZI_V=Xk%H2cJ:RIQJh0@1N)SXX6o$]MI)ZN(
%8]7O0GC'tFl+7BnFh&dL*CHPC!gZ/,r,Gkr%f44B2p(*?Qgf=*CT-RX5CLRZhLrJr@o.A'4HJ"EPO[<m*]MR5THk[0hO?oO<VK^O
%&GXL*?JU@1agpQs[ur"#5[F,BL)\?T"'q)er@[(%=>A1qi1Ia@D*QnV89KdFBpla$aOig)71?OrR%*\"\Ne;4W2'&E'TgdX4>.mM
%hYT$ng28"!.IUF.6es#K4'oei_60K7L]?ueJ$hEg#*\,R;[Ro4C>dDJREE$2_9/kAE)9U?9KP11Fr/,E_es@+0tHq)\.UJC\,1pD
%]q=FdB'nj"8oI"B)X\c[htJ;-*q1o>oboL?pQsd1pRBOAj&8l%*aNIO>7.@Fgl3m[E3g(3?HmD3aj`1K?JUC2*-]Y'?;.*g(e:r-
%?5M$@V7au]\;09kf8&jA\Ar:7)n^FGgLe/!'o:oq?tE=oe8J5kBY*t2Q'jnZhaFr/\dK;pMtbVt:`AS^`?ioY0BtUQGe+G+M3X]f
%]8NiH5(qPJ4\!%iil0[OS:18Y!E=T$E4mZ9j2Uu2$ZY9(D*cNiXbc7R)U/Q97iU8"TmEZ>;/#ZCSH.a!IB\LFpXB]q6:s,]KC9]c
%i)-3W[p*a4IX+*2FlD]k@^$[;q7e[L?Z8gg5bn!B*L&3^p,.+;l5TADInJ_@3/[`'nif:a!nAJp.!9k1Ie4O!kt,%g&KJ%4+]+Wf
%=nL>`2^.^clJ3;P_*L@os5U7dU7FU7>9-Mk;4OK(lXR;WkdDKR_YnS;dB7\<nZI'dlL@Eg/Ynhk'Hi[-Pc`Vnb3Q&MkFY2PM0K:t
%qOOYF2B!>3i;^8V$;"p-B(k?,F]:"E*rd)E+aVR0>I^<n1"u:10AcBJd`NRc'1eKtk:';]Bu8ha1`7+:=&i2XBb'&CLk5XPY"J(S
%6i`369b?U!$Tgk-GoH)oMYl\J%r!s/b&'+WJ^6ouh)6PTjn3lqZJ.J-Z!P/GFn8\=Nr(!l==TU$Si93C"YR6[i\FQB89RpLHP5/k
%r?`7>fW3b?6PM0=ea9eLUmJ!q?SD_G$cd0rF'jP_"S_`+K_sFD6X=X"nl>.0hqMLPd.TTO_shH.OK%]cd*)Ko@9MDTpM"kC48?)R
%eU97S@7trnV@^_pC[c6!0;Jn*Xf(,!U?AA^V>C:3_o5imGhG;so*I"IAI"ksmI]p?Lp_40Bj-j-IO-b(MTS.TD:%c9SqI.a'Ec<3
%e3ajmHnW:H/Zb3#pK,sCo%b^X^[?><hRf7`&,*O"naLn(([q.6bb6\W6NCV]caV-Sc(Qdqp/UWdAUDkglY8VCfA]$b*WOC;6VhJs
%=?.J27e>DN<'i9s<%=nea\5JCX\jB42^.QUVrG4@\h\(tqf!qB!&68.g3":@\T?S^H:VptHjKJ!m@bR3s5G&;](l!>7h-$Y2<]<-
%63(s>7jZ&qWl6@-m;X2a!d'hEd2iXRRF1G`',")+):+Y+T'0meLZEX!LN#K1A#T@q0Ac4h<Udd#F0ap1\.)+tOerPbh`;n(Z9Yk&
%X7<cVLbhJ_WIq:PA6,l^ktmhW$<PjrNoLCBV/dN;d/5G8_.*^G)pDFk$]P6/,WU!RLfY/;ofi3VD636c)+=_.!(8)LO96\AK!,eS
%.g;f+-l1BI7lf#skqK+M[j=bMldQiLQT/H]U(S+qiN2fk"ZWQ-<g)e\J:Q18UUa%nQ)7[*5>S0D\KShVnMJ4@KV\5cHN#s3%38,(
%;.,4QVu*Nc_P'`F/X.NI/\k[8F#E\dNY[?QW>&hp_3b<.;"':t`#O=&dX.[.\p?\YGI8"1,#fMW!\R!-"kFnr3T`q8.K#fLf'h?c
%eV:G+P0rcqpAN`4B*h@sr&%5Hn9"A!9mMY.!0o,(d"E=5msVRCQX.K!dg$CoP]MTbPHCW;THPfEZIKkdDau"V06eY\@d.>5BsHk&
%AO:Jg_=]qVcQ=Mug/&l2nr(_#^]C8&&2Mk',3n1.d;5AC<ha2*blT`TLfLfUJ`b(Srb3s/<205cfNY+"$3q4e)Se35Zq\i--CS$5
%<4!(U0F)]TQr^jkONjVij/:SGAZros?Qf&db/i<C8L[#iW]!*?eEt1[9r-M;Vm'i!,8(3pR#%1+=TUTTUj"&j_[KR[4l)h=QKPC!
%(Q'-m'ebhBN<rGn/7(1?H;ZP(F]VBadjK59aiE(=NNP`2BY&3V<eGe<CXPNpkN7cW>G1U58mZ1-TYa19dnlV^gdi+RSboh(q4%-n
%J=NAWgNcg<_lZo3Q]$_lVoFG@J>p-Ln?gQ.`+Nm2LnD#0ZJ,<B&osl]m:fYf68nOi!+(\cC?!WT(<u2:Un5)Uptc84/ZcPRJJ-a'
%]]q<^/53mB+Qsi/Bg;&_([%h1`Pe<>[`!*d"dl/!)]Y]VA?4i+D:g;hchVk7T>+*J1Kl$jAF[*Y<(GV>Yn+OELpFPe,bk)H;-G7k
%22[GAD1mN8UQm=ljOu1Sg^tR\pfpg@2MpbDn0e^tX:??Se8nR\FNF%gihN)5.$6V3A9K9E25DjYb/086Ks_2[2?RF@>rX[(%^mo:
%_-$DMC@0p0U1I+m^Vt-3U"r0gf+D)`B.E>]MP$:l`faVuFEh7[#*%<*CG2#2pMWj,)F$)\e.<g%!p"(T5P[Y9ksT\qim++!og_Z=
%W#[PUBc7Su?PYNqee$(aj/P482M&5<B4kZ:pp\emA=6hN:J[\pKO!3Fh,:QMbX3%)^I6#K3%Gq5dD?176=9Ho7d<#Wa>RHce&tH]
%FqQ)PP4$:Bp<mp2_,.6kIQD3#@07mX/DXf\UE<ZV?sr_/p.r;8;L,o0QLA#-pF8cYqP!>OqqF<11r5p((bY&oYUjG[E75PK778$R
%H=Sbt+>##>0$Mo[T0pX%2d#sOhB+taXiG>C-kD.;:Nu]m0,DRam&YZh-")r-YYgje#5EsQ7?g,&e]3o>_u?+1?;+@AmCFP.JH0&E
%Y3P?<h%kVM`f9VDD8-K_q6&OaR7QLRfK_EG\^4cNbSa8`&m3\N-3AA[VW5-1ak[SC_t*DiG"[l(nMTs[V8R=aNiV$DgHO63Rbl^f
%T<T"AS6=SG6?M40HeqAL@dt4tYeV=PDb&#c)U8!sUW4k,@)^07LFD(CbrIEK?G4\_-_G)@p1\]+f2,qXl%HLj_mJi07&"\-Lcalm
%/)"?dNkE]KmLMpJ'VNke=`G`r'eY>tclNapOlNnnjVbFiO:bnj(_F[T"f95+_l()UH%AL,CYP)D<[H[(gX>>IEOk)G:<<L14?!Q3
%$lTVOl6:[og(#"XaljcYnW*H[o9>oneoaMqZ1<\dp,JM4\>XI8Hm2iX#C:6$as9C2I_Dkr?'2i'_Q)XGm:j,nrK@c!GF^/^P4)=P
%(`t=]<<hKL,"beh'8R,M@DFt#6Bd^AhA0EMSlr#/ES-r]NT%\A+mb1C-WUurYI:\FiOS#EV<WM5M/!RdNQ%KRe`V":*q!<9b_YQj
%"P_W:UsHsJYnj$h&.M#&d[*.-or"piblV[mpGh6$,Vc/qM3\`o;5Rrl_,`O]=[+qX\n"!XSHV5<`\TiE73kapYu"/od:,`4MFH%T
%45D7_P:s9pg'W4!]Lnb-e&KXi2&B/\YncSiO''7`>;_Ks(Yjc(a:7h7LbGXH1rGG31bjIK>iEc3phcUrCemhZlksJfPO>J.8[^$5
%Bdq(QVZ0L"K!\\&PK3hC%aiN"m'L9/X:`\i_jsh5hnNIi#cZ63SYf"j.$CV$W^PD*W&VciD?hEC;h`sZ-^>CXPnCs&/>=a&rg:C3
%/NWB0eI=)Z)];Kf][^l]?[SU86_[.`Ee-nV^[=Tb]3:g[WP]fh?O5>02pYYij(>=V+Ccj,Og7'e$"9prjTUbBGn>-"b=[?WOkMO5
%&0nXu;qQZ<G-E43Di6QK:<]*VA+"#+`_Vull1EDc0DXN;$W*"^kDaE9<k4qWa4tG2$Ec#<[i'D*HLF0i?h*)YA2!fs-=)E4<eq'S
%WeG+`ak]Zo'W_$l,ffR^n^hG?',odUX8$eH:&?<qk9n:<IXZhpk3!<#1ff*a$;F)P-nhPgXRp.f\3qt^)-YD>APq;:9La;ok[:S/
%N0E8[n5<oKNW:_T'MCjtJuAu,!R[$o(l$0G2-#;7AEOZ+&3(q87p=$o!XqpLEJ:?'$X,I1%$+K/7\a1,;AL.fZc.OsRH=fPQrTOI
%mc$Vq<c'd0!<>GkCD*2p-PF8O9@.P/,8ACYV0H$s`[l+fW_@RO:jKA1r$9m4BAFZi@(d<.@f'YGCka-Uo")S(ME0hhAr2SBE$R(k
%S_SPjge[7Q99B0#3U*"1l4,7+`mJZj*d9M<.Nlit*q9G$T[`>[(@NFTA&_#:71q_3r1C-`ir;f^i$4]2&MF4+\qC&gk_4k.GtO!V
%m#0drVC!eQKD:)Z0?<^A3[!b*.^HB)c_t#h3lKRCm0FnAbI7X`K?joAJf2eC$-T1OG,`H"M[mJrX_?_ea9AJCO$)%dX.Ar!lNb/]
%'GJo9<$LoO<`q/r'Y*Hra,7NArPdBFc\=.SbJn<NPU#I$3q95^'[cRQW>as7kH<^'gf!$p/-]9dU<cWt.Z?!DOmP!A\-\;#3\K=\
%-H-fa^Qp?PKZ1f,T$)RTZl8Y0rj[m>+@>%3A;kYW!O)D'bqnHqc.-VNTFCei8>Y[F0$r03*ptJ$=$iV%lHT1eA5PrS,$_"7MG?]l
%DlQgrc[K3YbL;[=kuEi]:J#1:1<*fe:Ac1sY]ujN)iguuN]$brp8dLfqE3b9S2RU,X1<q_?!dgBd(I-QR_+l_4FQB/$R/W/*+Mbe
%Pmg#g0C9;=h(;'[AVB87_@3)sA[RAY:u'1/)P>r@q"qM"<H%c(.4T[!-e35+-)1a0NA#Hj$!k<%8E%`9&=ZYte'or5]fu.Jihj[q
%Fk:cLH;W)HQFtg]pC5W^]CnEONg+tHhVucoF4&.[65'HYEh@T0h>LGHZ]?WIN\+BM/?'CBm"`$;WUDi2f%d_Tj"^/I[iN$(:T")S
%n$=nCJP-Sn/.f^[Q57kN?;_f%j9$Z"Qt?tf34]C.C0jEq;Tp)ZdU^)='.3Lg/5]963253&kWPsf<[25!RGq&.RuaL>a3'))Q:=j9
%5#dkKqj)QMHY&nlLJQ+BrEUS8Z.@ic3oV35E&jY5N-I;Si$!,BNZL4OJ!,*uiLK-:X*WS;'3T"P!7bHhi*gW$Ao['KSik'4G+_:T
%c$Iu^'8=!HO1OKk1'VG#,p7lR;3Sc@,a@GpR.ne@/>NJLUj+eR\kSdnkPf!tI+at$_]ZVj%tFBkJ+YaMfDb*nIeUI`n,E3>mpEgn
%"b64>msb;q5C`_$Rr:N=s-J6*q`hglQOg:VIJ4b)+s6gKr6q_(J,eJgJ,7(W+("p9+91ifORT%2#ClDJJ,=`pmsk-Ls$+$TOP'~>
%AI9_PrivateDataEnd
